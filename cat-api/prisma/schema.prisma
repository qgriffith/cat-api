generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model aws_access_analyzer_analyzer_archive_rules {
  cq_id                         String                         @id(map: "aws_access_analyzer_analyzer_archive_rules_pk") @db.Uuid
  cq_meta                       Json?
  analyzer_cq_id                String?                        @db.Uuid
  created_at                    DateTime?                      @db.Timestamp(6)
  filter                        Json?
  rule_name                     String?
  updated_at                    DateTime?                      @db.Timestamp(6)
  aws_access_analyzer_analyzers aws_access_analyzer_analyzers? @relation(fields: [analyzer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_access_analyzer_analyzer_finding_sources {
  cq_id                                 String                                 @id(map: "aws_access_analyzer_analyzer_finding_sources_pk") @db.Uuid
  cq_meta                               Json?
  analyzer_finding_cq_id                String?                                @db.Uuid
  type                                  String?
  detail_access_point_arn               String?
  aws_access_analyzer_analyzer_findings aws_access_analyzer_analyzer_findings? @relation(fields: [analyzer_finding_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_access_analyzer_analyzer_findin_analyzer_finding_cq_id_fkey")
}

model aws_access_analyzer_analyzer_findings {
  cq_id                                        String                                         @id(map: "aws_access_analyzer_analyzer_findings_pk") @db.Uuid
  cq_meta                                      Json?
  analyzer_cq_id                               String?                                        @db.Uuid
  analyzed_at                                  DateTime?                                      @db.Timestamp(6)
  condition                                    Json?
  created_at                                   DateTime?                                      @db.Timestamp(6)
  id                                           String?
  resource_owner_account                       String?
  resource_type                                String?
  status                                       String?
  updated_at                                   DateTime?                                      @db.Timestamp(6)
  action                                       String[]
  error                                        String?
  is_public                                    Boolean?
  principal                                    Json?
  resource                                     String?
  aws_access_analyzer_analyzers                aws_access_analyzer_analyzers?                 @relation(fields: [analyzer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_access_analyzer_analyzer_finding_sources aws_access_analyzer_analyzer_finding_sources[]
}

model aws_access_analyzer_analyzers {
  cq_id                                      String                                       @unique @db.Uuid
  cq_meta                                    Json?
  account_id                                 String?
  region                                     String?
  arn                                        String                                       @id(map: "aws_access_analyzer_analyzers_pk")
  created_at                                 DateTime?                                    @db.Timestamp(6)
  name                                       String?
  status                                     String?
  type                                       String?
  last_resource_analyzed                     String?
  last_resource_analyzed_at                  DateTime?                                    @db.Timestamp(6)
  status_reason_code                         String?
  tags                                       Json?
  aws_access_analyzer_analyzer_archive_rules aws_access_analyzer_analyzer_archive_rules[]
  aws_access_analyzer_analyzer_findings      aws_access_analyzer_analyzer_findings[]
}

model aws_accounts {
  cq_id                                String   @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String   @id(map: "aws_accounts_pk")
  users                                Int?
  users_quota                          Int?
  groups                               Int?
  groups_quota                         Int?
  server_certificates                  Int?
  server_certificates_quota            Int?
  user_policy_size_quota               Int?
  group_policy_size_quota              Int?
  groups_per_user_quota                Int?
  signing_certificates_per_user_quota  Int?
  access_keys_per_user_quota           Int?
  mfa_devices                          Int?
  mfa_devices_in_use                   Int?
  account_mfa_enabled                  Boolean?
  account_access_keys_present          Boolean?
  account_signing_certificates_present Boolean?
  attached_policies_per_group_quota    Int?
  policies                             Int?
  policies_quota                       Int?
  policy_size_quota                    Int?
  policy_versions_in_use               Int?
  policy_versions_in_use_quota         Int?
  versions_per_policy_quota            Int?
  global_endpoint_token_version        Int?
  aliases                              String[]
}

model aws_acm_certificates {
  cq_id                                       String    @unique @db.Uuid
  cq_meta                                     Json?
  account_id                                  String?
  region                                      String?
  arn                                         String    @id(map: "aws_acm_certificates_pk")
  certificate_authority_arn                   String?
  created_at                                  DateTime? @db.Timestamp(6)
  domain_name                                 String?
  domain_validation_options                   Json?
  extended_key_usages                         Json?
  failure_reason                              String?
  imported_at                                 DateTime? @db.Timestamp(6)
  in_use_by                                   String[]
  issued_at                                   DateTime? @db.Timestamp(6)
  issuer                                      String?
  key_algorithm                               String?
  key_usages                                  String[]
  not_after                                   DateTime? @db.Timestamp(6)
  not_before                                  DateTime? @db.Timestamp(6)
  certificate_transparency_logging_preference String?
  renewal_eligibility                         String?
  renewal_summary_domain_validation_options   Json?
  renewal_summary_status                      String?
  renewal_summary_updated_at                  DateTime? @db.Timestamp(6)
  renewal_summary_failure_reason              String?
  revocation_reason                           String?
  revoked_at                                  DateTime? @db.Timestamp(6)
  serial                                      String?
  signature_algorithm                         String?
  status                                      String?
  subject                                     String?
  subject_alternative_names                   String[]
  type                                        String?
  tags                                        Json?
}

model aws_apigateway_api_keys {
  cq_id             String    @unique @db.Uuid
  cq_meta           Json?
  account_id        String
  region            String?
  arn               String?
  created_date      DateTime? @db.Timestamp(6)
  customer_id       String?
  description       String?
  enabled           Boolean?
  id                String
  last_updated_date DateTime? @db.Timestamp(6)
  name              String?
  stage_keys        String[]
  tags              Json?
  value             String?

  @@id([account_id, id], map: "aws_apigateway_api_keys_pk")
}

model aws_apigateway_client_certificates {
  cq_id                   String    @unique @db.Uuid
  cq_meta                 Json?
  account_id              String
  region                  String?
  arn                     String?
  id                      String
  created_date            DateTime? @db.Timestamp(6)
  description             String?
  expiration_date         DateTime? @db.Timestamp(6)
  pem_encoded_certificate String?
  tags                    Json?

  @@id([account_id, id], map: "aws_apigateway_client_certificates_pk")
}

model aws_apigateway_domain_name_base_path_mappings {
  cq_id                       String                       @id(map: "aws_apigateway_domain_name_base_path_mappings_pk") @db.Uuid
  cq_meta                     Json?
  domain_name_cq_id           String?                      @db.Uuid
  arn                         String?
  domain_name                 String?
  base_path                   String?
  rest_api_id                 String?
  stage                       String?
  aws_apigateway_domain_names aws_apigateway_domain_names? @relation(fields: [domain_name_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_apigateway_domain_name_base_path_map_domain_name_cq_id_fkey")
}

model aws_apigateway_domain_names {
  cq_id                                         String                                          @unique @db.Uuid
  cq_meta                                       Json?
  account_id                                    String
  region                                        String
  arn                                           String?
  certificate_arn                               String?
  certificate_name                              String?
  certificate_upload_date                       DateTime?                                       @db.Timestamp(6)
  distribution_domain_name                      String?
  distribution_hosted_zone_id                   String?
  domain_name                                   String
  domain_name_status                            String?
  domain_name_status_message                    String?
  endpoint_configuration_types                  String[]
  endpoint_configuration_vpc_endpoint_ids       String[]
  mutual_tls_authentication_truststore_uri      String?
  mutual_tls_authentication_truststore_version  String?
  mutual_tls_authentication_truststore_warnings String[]
  regional_certificate_arn                      String?
  regional_certificate_name                     String?
  regional_domain_name                          String?
  regional_hosted_zone_id                       String?
  security_policy                               String?
  tags                                          Json?
  aws_apigateway_domain_name_base_path_mappings aws_apigateway_domain_name_base_path_mappings[]

  @@id([account_id, region, domain_name], map: "aws_apigateway_domain_names_pk")
}

model aws_apigateway_rest_api_authorizers {
  cq_id                            String                    @id(map: "aws_apigateway_rest_api_authorizers_pk") @db.Uuid
  cq_meta                          Json?
  rest_api_cq_id                   String?                   @db.Uuid
  rest_api_id                      String?
  arn                              String?
  auth_type                        String?
  authorizer_credentials           String?
  authorizer_result_ttl_in_seconds Int?
  authorizer_uri                   String?
  id                               String?
  identity_source                  String?
  identity_validation_expression   String?
  name                             String?
  provider_arns                    String[]
  type                             String?
  aws_apigateway_rest_apis         aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_deployments {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_deployments_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  api_summary              Json?
  created_date             DateTime?                 @db.Timestamp(6)
  description              String?
  id                       String?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_documentation_parts {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_documentation_parts_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  id                       String?
  location_type            String?
  location_method          String?
  location_name            String?
  location_path            String?
  location_status_code     String?
  properties               String?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_documentation_versions {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_documentation_versions_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  created_date             DateTime?                 @db.Timestamp(6)
  description              String?
  version                  String?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_apigateway_rest_api_documentation_versi_rest_api_cq_id_fkey")
}

model aws_apigateway_rest_api_gateway_responses {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_gateway_responses_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  default_response         Boolean?
  response_parameters      Json?
  response_templates       Json?
  response_type            String?
  status_code              String?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_models {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_models_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  model_template           String?
  content_type             String?
  description              String?
  id                       String?
  name                     String?
  schema                   String?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_request_validators {
  cq_id                       String                    @id(map: "aws_apigateway_rest_api_request_validators_pk") @db.Uuid
  cq_meta                     Json?
  rest_api_cq_id              String?                   @db.Uuid
  rest_api_id                 String?
  arn                         String?
  id                          String?
  name                        String?
  validate_request_body       Boolean?
  validate_request_parameters Boolean?
  aws_apigateway_rest_apis    aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_resources {
  cq_id                    String                    @id(map: "aws_apigateway_rest_api_resources_pk") @db.Uuid
  cq_meta                  Json?
  rest_api_cq_id           String?                   @db.Uuid
  rest_api_id              String?
  arn                      String?
  id                       String?
  parent_id                String?
  path                     String?
  path_part                String?
  resource_methods         Json?
  aws_apigateway_rest_apis aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_api_stages {
  cq_id                                    String                    @id(map: "aws_apigateway_rest_api_stages_pk") @db.Uuid
  cq_meta                                  Json?
  rest_api_cq_id                           String?                   @db.Uuid
  rest_api_id                              String?
  arn                                      String?
  access_log_settings_destination_arn      String?
  access_log_settings_format               String?
  cache_cluster_enabled                    Boolean?
  cache_cluster_size                       String?
  cache_cluster_status                     String?
  canary_settings_deployment_id            String?
  canary_settings_percent_traffic          Float?
  canary_settings_stage_variable_overrides Json?
  canary_settings_use_stage_cache          Boolean?
  client_certificate_id                    String?
  created_date                             DateTime?                 @db.Timestamp(6)
  deployment_id                            String?
  description                              String?
  documentation_version                    String?
  last_updated_date                        DateTime?                 @db.Timestamp(6)
  method_settings                          Json?
  stage_name                               String?
  tags                                     Json?
  tracing_enabled                          Boolean?
  variables                                Json?
  web_acl_arn                              String?
  aws_apigateway_rest_apis                 aws_apigateway_rest_apis? @relation(fields: [rest_api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_rest_apis {
  cq_id                                          String                                           @unique @db.Uuid
  cq_meta                                        Json?
  account_id                                     String
  region                                         String?
  arn                                            String?
  api_key_source                                 String?
  binary_media_types                             String[]
  created_date                                   DateTime?                                        @db.Timestamp(6)
  description                                    String?
  disable_execute_api_endpoint                   Boolean?
  endpoint_configuration_types                   String[]
  endpoint_configuration_vpc_endpoint_ids        String[]
  id                                             String
  minimum_compression_size                       Int?
  name                                           String?
  policy                                         String?
  tags                                           Json?
  version                                        String?
  warnings                                       String[]
  aws_apigateway_rest_api_authorizers            aws_apigateway_rest_api_authorizers[]
  aws_apigateway_rest_api_deployments            aws_apigateway_rest_api_deployments[]
  aws_apigateway_rest_api_documentation_parts    aws_apigateway_rest_api_documentation_parts[]
  aws_apigateway_rest_api_documentation_versions aws_apigateway_rest_api_documentation_versions[]
  aws_apigateway_rest_api_gateway_responses      aws_apigateway_rest_api_gateway_responses[]
  aws_apigateway_rest_api_models                 aws_apigateway_rest_api_models[]
  aws_apigateway_rest_api_request_validators     aws_apigateway_rest_api_request_validators[]
  aws_apigateway_rest_api_resources              aws_apigateway_rest_api_resources[]
  aws_apigateway_rest_api_stages                 aws_apigateway_rest_api_stages[]

  @@id([account_id, id], map: "aws_apigateway_rest_apis_pk")
}

model aws_apigateway_usage_plan_api_stages {
  cq_id                      String                      @id(map: "aws_apigateway_usage_plan_api_stages_pk") @db.Uuid
  cq_meta                    Json?
  usage_plan_cq_id           String?                     @db.Uuid
  usage_plan_id              String?
  api_id                     String?
  stage                      String?
  throttle                   Json?
  aws_apigateway_usage_plans aws_apigateway_usage_plans? @relation(fields: [usage_plan_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_usage_plan_keys {
  cq_id                      String                      @id(map: "aws_apigateway_usage_plan_keys_pk") @db.Uuid
  cq_meta                    Json?
  usage_plan_cq_id           String?                     @db.Uuid
  usage_plan_id              String?
  arn                        String?
  id                         String?
  name                       String?
  type                       String?
  value                      String?
  aws_apigateway_usage_plans aws_apigateway_usage_plans? @relation(fields: [usage_plan_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigateway_usage_plans {
  cq_id                                String                                 @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  arn                                  String?
  description                          String?
  id                                   String
  name                                 String?
  product_code                         String?
  quota_limit                          Int?
  quota_offset                         Int?
  quota_period                         String?
  tags                                 Json?
  throttle_burst_limit                 Int?
  throttle_rate_limit                  Float?
  aws_apigateway_usage_plan_api_stages aws_apigateway_usage_plan_api_stages[]
  aws_apigateway_usage_plan_keys       aws_apigateway_usage_plan_keys[]

  @@id([account_id, id], map: "aws_apigateway_usage_plans_pk")
}

model aws_apigateway_vpc_links {
  cq_id          String   @unique @db.Uuid
  cq_meta        Json?
  account_id     String
  region         String?
  arn            String?
  description    String?
  id             String
  name           String?
  status         String?
  status_message String?
  tags           Json?
  target_arns    String[]

  @@id([account_id, id], map: "aws_apigateway_vpc_links_pk")
}

model aws_apigatewayv2_api_authorizers {
  cq_id                             String                 @id(map: "aws_apigatewayv2_api_authorizers_pk") @db.Uuid
  cq_meta                           Json?
  api_cq_id                         String?                @db.Uuid
  api_id                            String?
  arn                               String?
  name                              String?
  authorizer_credentials_arn        String?
  authorizer_id                     String?
  authorizer_payload_format_version String?
  authorizer_result_ttl_in_seconds  Int?
  authorizer_type                   String?
  authorizer_uri                    String?
  enable_simple_responses           Boolean?
  identity_source                   String[]
  identity_validation_expression    String?
  jwt_configuration_audience        String[]
  jwt_configuration_issuer          String?
  aws_apigatewayv2_apis             aws_apigatewayv2_apis? @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigatewayv2_api_deployments {
  cq_id                     String                 @id(map: "aws_apigatewayv2_api_deployments_pk") @db.Uuid
  cq_meta                   Json?
  api_cq_id                 String?                @db.Uuid
  api_id                    String?
  arn                       String?
  auto_deployed             Boolean?
  created_date              DateTime?              @db.Timestamp(6)
  deployment_id             String?
  deployment_status         String?
  deployment_status_message String?
  description               String?
  aws_apigatewayv2_apis     aws_apigatewayv2_apis? @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigatewayv2_api_integration_responses {
  cq_id                             String                             @id(map: "aws_apigatewayv2_api_integration_responses_pk") @db.Uuid
  cq_meta                           Json?
  api_integration_cq_id             String?                            @db.Uuid
  integration_id                    String?
  arn                               String?
  integration_response_key          String?
  content_handling_strategy         String?
  integration_response_id           String?
  response_parameters               Json?
  response_templates                Json?
  template_selection_expression     String?
  aws_apigatewayv2_api_integrations aws_apigatewayv2_api_integrations? @relation(fields: [api_integration_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_apigatewayv2_api_integration_res_api_integration_cq_id_fkey")
}

model aws_apigatewayv2_api_integrations {
  cq_id                                      String                                       @id(map: "aws_apigatewayv2_api_integrations_pk") @db.Uuid
  cq_meta                                    Json?
  api_cq_id                                  String?                                      @db.Uuid
  api_id                                     String?
  arn                                        String?
  api_gateway_managed                        Boolean?
  connection_id                              String?
  connection_type                            String?
  content_handling_strategy                  String?
  credentials_arn                            String?
  description                                String?
  integration_id                             String?
  integration_method                         String?
  integration_response_selection_expression  String?
  integration_subtype                        String?
  integration_type                           String?
  integration_uri                            String?
  passthrough_behavior                       String?
  payload_format_version                     String?
  request_parameters                         Json?
  request_templates                          Json?
  response_parameters                        Json?
  template_selection_expression              String?
  timeout_in_millis                          Int?
  tls_config_server_name_to_verify           String?
  aws_apigatewayv2_apis                      aws_apigatewayv2_apis?                       @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_apigatewayv2_api_integration_responses aws_apigatewayv2_api_integration_responses[]
}

model aws_apigatewayv2_api_models {
  cq_id                 String                 @id(map: "aws_apigatewayv2_api_models_pk") @db.Uuid
  cq_meta               Json?
  api_cq_id             String?                @db.Uuid
  api_id                String?
  arn                   String?
  model_template        String?
  name                  String?
  content_type          String?
  description           String?
  model_id              String?
  schema                String?
  aws_apigatewayv2_apis aws_apigatewayv2_apis? @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigatewayv2_api_route_responses {
  cq_id                       String                       @id(map: "aws_apigatewayv2_api_route_responses_pk") @db.Uuid
  cq_meta                     Json?
  api_route_cq_id             String?                      @db.Uuid
  route_id                    String?
  arn                         String?
  route_response_key          String?
  model_selection_expression  String?
  response_models             Json?
  response_parameters         Json?
  route_response_id           String?
  aws_apigatewayv2_api_routes aws_apigatewayv2_api_routes? @relation(fields: [api_route_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigatewayv2_api_routes {
  cq_id                                String                                 @id(map: "aws_apigatewayv2_api_routes_pk") @db.Uuid
  cq_meta                              Json?
  api_cq_id                            String?                                @db.Uuid
  api_id                               String?
  arn                                  String?
  route_key                            String?
  api_gateway_managed                  Boolean?
  api_key_required                     Boolean?
  authorization_scopes                 String[]
  authorization_type                   String?
  authorizer_id                        String?
  model_selection_expression           String?
  operation_name                       String?
  request_models                       Json?
  request_parameters                   Json?
  route_id                             String?
  route_response_selection_expression  String?
  target                               String?
  aws_apigatewayv2_apis                aws_apigatewayv2_apis?                 @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_apigatewayv2_api_route_responses aws_apigatewayv2_api_route_responses[]
}

model aws_apigatewayv2_api_stages {
  cq_id                                   String                 @id(map: "aws_apigatewayv2_api_stages_pk") @db.Uuid
  cq_meta                                 Json?
  api_cq_id                               String?                @db.Uuid
  api_id                                  String?
  arn                                     String?
  stage_name                              String?
  access_log_settings_destination_arn     String?
  access_log_settings_format              String?
  api_gateway_managed                     Boolean?
  auto_deploy                             Boolean?
  client_certificate_id                   String?
  created_date                            DateTime?              @db.Timestamp(6)
  route_settings_data_trace_enabled       Boolean?
  route_settings_detailed_metrics_enabled Boolean?
  route_settings_logging_level            String?
  route_settings_throttling_burst_limit   Int?
  route_settings_throttling_rate_limit    Float?
  deployment_id                           String?
  description                             String?
  last_deployment_status_message          String?
  last_updated_date                       DateTime?              @db.Timestamp(6)
  route_settings                          Json?
  stage_variables                         Json?
  tags                                    Json?
  aws_apigatewayv2_apis                   aws_apigatewayv2_apis? @relation(fields: [api_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_apigatewayv2_apis {
  cq_id                                String                              @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  arn                                  String?
  name                                 String?
  protocol_type                        String?
  route_selection_expression           String?
  api_endpoint                         String?
  api_gateway_managed                  Boolean?
  id                                   String
  api_key_selection_expression         String?
  cors_configuration_allow_credentials Boolean?
  cors_configuration_allow_headers     String[]
  cors_configuration_allow_methods     String[]
  cors_configuration_allow_origins     String[]
  cors_configuration_expose_headers    String[]
  cors_configuration_max_age           Int?
  created_date                         DateTime?                           @db.Timestamp(6)
  description                          String?
  disable_execute_api_endpoint         Boolean?
  disable_schema_validation            Boolean?
  import_info                          String[]
  tags                                 Json?
  version                              String?
  warnings                             String[]
  aws_apigatewayv2_api_authorizers     aws_apigatewayv2_api_authorizers[]
  aws_apigatewayv2_api_deployments     aws_apigatewayv2_api_deployments[]
  aws_apigatewayv2_api_integrations    aws_apigatewayv2_api_integrations[]
  aws_apigatewayv2_api_models          aws_apigatewayv2_api_models[]
  aws_apigatewayv2_api_routes          aws_apigatewayv2_api_routes[]
  aws_apigatewayv2_api_stages          aws_apigatewayv2_api_stages[]

  @@id([account_id, id], map: "aws_apigatewayv2_apis_pk")
}

model aws_apigatewayv2_domain_name_configurations {
  cq_id                         String                         @id(map: "aws_apigatewayv2_domain_name_configurations_pk") @db.Uuid
  cq_meta                       Json?
  domain_name_cq_id             String?                        @db.Uuid
  api_gateway_domain_name       String?
  certificate_arn               String?
  certificate_name              String?
  certificate_upload_date       DateTime?                      @db.Timestamp(6)
  domain_name_status            String?
  domain_name_status_message    String?
  endpoint_type                 String?
  hosted_zone_id                String?
  security_policy               String?
  aws_apigatewayv2_domain_names aws_apigatewayv2_domain_names? @relation(fields: [domain_name_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_apigatewayv2_domain_name_configurati_domain_name_cq_id_fkey")
}

model aws_apigatewayv2_domain_name_rest_api_mappings {
  cq_id                         String                         @id(map: "aws_apigatewayv2_domain_name_rest_api_mappings_pk") @db.Uuid
  cq_meta                       Json?
  domain_name_cq_id             String?                        @db.Uuid
  api_id                        String?
  arn                           String?
  stage                         String?
  api_mapping_id                String?
  api_mapping_key               String?
  aws_apigatewayv2_domain_names aws_apigatewayv2_domain_names? @relation(fields: [domain_name_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_apigatewayv2_domain_name_rest_api_ma_domain_name_cq_id_fkey")
}

model aws_apigatewayv2_domain_names {
  cq_id                                          String                                           @unique @db.Uuid
  cq_meta                                        Json?
  account_id                                     String
  region                                         String
  arn                                            String?
  domain_name                                    String
  api_mapping_selection_expression               String?
  mutual_tls_authentication_truststore_uri       String?
  mutual_tls_authentication_truststore_version   String?
  mutual_tls_authentication_truststore_warnings  String[]
  tags                                           Json?
  aws_apigatewayv2_domain_name_configurations    aws_apigatewayv2_domain_name_configurations[]
  aws_apigatewayv2_domain_name_rest_api_mappings aws_apigatewayv2_domain_name_rest_api_mappings[]

  @@id([account_id, region, domain_name], map: "aws_apigatewayv2_domain_names_pk")
}

model aws_apigatewayv2_vpc_links {
  cq_id                   String    @unique @db.Uuid
  cq_meta                 Json?
  account_id              String
  region                  String?
  arn                     String?
  name                    String?
  security_group_ids      String[]
  subnet_ids              String[]
  id                      String
  created_date            DateTime? @db.Timestamp(6)
  tags                    Json?
  vpc_link_status         String?
  vpc_link_status_message String?
  vpc_link_version        String?

  @@id([account_id, id], map: "aws_apigatewayv2_vpc_links_pk")
}

model aws_applicationautoscaling_policies {
  cq_id                                        String    @unique @db.Uuid
  cq_meta                                      Json?
  account_id                                   String?
  region                                       String?
  namespace                                    String?
  creation_time                                DateTime? @db.Timestamp(6)
  arn                                          String    @id(map: "aws_applicationautoscaling_policies_pk")
  name                                         String?
  type                                         String?
  resource_id                                  String?
  scalable_dimension                           String?
  service_namespace                            String?
  alarms                                       Json?
  step_scaling_policy_configuration            Json?
  target_tracking_scaling_policy_configuration Json?
}

model aws_athena_data_catalog_database_table_columns {
  cq_id                                   String                                   @id(map: "aws_athena_data_catalog_database_table_columns_pk") @db.Uuid
  cq_meta                                 Json?
  data_catalog_database_table_cq_id       String?                                  @db.Uuid
  name                                    String?
  comment                                 String?
  type                                    String?
  aws_athena_data_catalog_database_tables aws_athena_data_catalog_database_tables? @relation(fields: [data_catalog_database_table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_athena_data_catalog_datab_data_catalog_database_table__fkey")
}

model aws_athena_data_catalog_database_table_partition_keys {
  cq_id                                   String                                   @id(map: "aws_athena_data_catalog_database_table_partition_keys_pk") @db.Uuid
  cq_meta                                 Json?
  data_catalog_database_table_cq_id       String?                                  @db.Uuid
  name                                    String?
  comment                                 String?
  type                                    String?
  aws_athena_data_catalog_database_tables aws_athena_data_catalog_database_tables? @relation(fields: [data_catalog_database_table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_athena_data_catalog_data_data_catalog_database_table__fkey1")
}

model aws_athena_data_catalog_database_tables {
  cq_id                                                 String                                                  @id(map: "aws_athena_data_catalog_database_tables_pk") @db.Uuid
  cq_meta                                               Json?
  data_catalog_database_cq_id                           String?                                                 @db.Uuid
  name                                                  String?
  create_time                                           DateTime?                                               @db.Timestamp(6)
  last_access_time                                      DateTime?                                               @db.Timestamp(6)
  parameters                                            Json?
  table_type                                            String?
  aws_athena_data_catalog_databases                     aws_athena_data_catalog_databases?                      @relation(fields: [data_catalog_database_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_athena_data_catalog_databa_data_catalog_database_cq_id_fkey")
  aws_athena_data_catalog_database_table_columns        aws_athena_data_catalog_database_table_columns[]
  aws_athena_data_catalog_database_table_partition_keys aws_athena_data_catalog_database_table_partition_keys[]
}

model aws_athena_data_catalog_databases {
  cq_id                                   String                                    @id(map: "aws_athena_data_catalog_databases_pk") @db.Uuid
  cq_meta                                 Json?
  data_catalog_cq_id                      String?                                   @db.Uuid
  name                                    String?
  description                             String?
  parameters                              Json?
  aws_athena_data_catalogs                aws_athena_data_catalogs?                 @relation(fields: [data_catalog_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_athena_data_catalog_database_tables aws_athena_data_catalog_database_tables[]
}

model aws_athena_data_catalogs {
  cq_id                             String                              @unique @db.Uuid
  cq_meta                           Json?
  account_id                        String?
  region                            String?
  arn                               String                              @id(map: "aws_athena_data_catalogs_pk")
  tags                              Json?
  name                              String?
  type                              String?
  description                       String?
  parameters                        Json?
  aws_athena_data_catalog_databases aws_athena_data_catalog_databases[]
}

model aws_athena_work_group_named_queries {
  cq_id                  String                  @id(map: "aws_athena_work_group_named_queries_pk") @db.Uuid
  cq_meta                Json?
  work_group_cq_id       String?                 @db.Uuid
  database               String?
  name                   String?
  query_string           String?
  description            String?
  named_query_id         String?
  work_group             String?
  aws_athena_work_groups aws_athena_work_groups? @relation(fields: [work_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_athena_work_group_prepared_statements {
  cq_id                  String                  @id(map: "aws_athena_work_group_prepared_statements_pk") @db.Uuid
  cq_meta                Json?
  work_group_cq_id       String?                 @db.Uuid
  description            String?
  last_modified_time     DateTime?               @db.Timestamp(6)
  query_statement        String?
  statement_name         String?
  work_group_name        String?
  aws_athena_work_groups aws_athena_work_groups? @relation(fields: [work_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_athena_work_group_query_executions {
  cq_id                                      String                  @id(map: "aws_athena_work_group_query_executions_pk") @db.Uuid
  cq_meta                                    Json?
  work_group_cq_id                           String?                 @db.Uuid
  effective_engine_version                   String?
  selected_engine_version                    String?
  query                                      String?
  catalog                                    String?
  database                                   String?
  id                                         String?
  acl_configuration_s3_acl_option            String?
  encryption_configuration_encryption_option String?
  encryption_configuration_kms_key           String?
  expected_bucket_owner                      String?
  output_location                            String?
  statement_type                             String?
  data_manifest_location                     String?
  data_scanned_in_bytes                      BigInt?
  engine_execution_time_in_millis            BigInt?
  query_planning_time_in_millis              BigInt?
  query_queue_time_in_millis                 BigInt?
  service_processing_time_in_millis          BigInt?
  total_execution_time_in_millis             BigInt?
  athena_error_error_category                Int?
  athena_error_error_message                 String?
  athena_error_error_type                    Int?
  athena_error_retryable                     Boolean?
  completion_date_time                       DateTime?               @db.Timestamp(6)
  state                                      String?
  state_change_reason                        String?
  submission_date_time                       DateTime?               @db.Timestamp(6)
  work_group                                 String?
  aws_athena_work_groups                     aws_athena_work_groups? @relation(fields: [work_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_athena_work_groups {
  cq_id                                      String                                      @unique @db.Uuid
  cq_meta                                    Json?
  account_id                                 String?
  arn                                        String                                      @id(map: "aws_athena_work_groups_pk")
  region                                     String?
  tags                                       Json?
  name                                       String?
  bytes_scanned_cutoff_per_query             BigInt?
  enforce_work_group_configuration           Boolean?
  effective_engine_version                   String?
  selected_engine_version                    String?
  publish_cloud_watch_metrics_enabled        Boolean?
  requester_pays_enabled                     Boolean?
  acl_configuration_s3_acl_option            String?
  encryption_configuration_encryption_option String?
  encryption_configuration_kms_key           String?
  expected_bucket_owner                      String?
  output_location                            String?
  creation_time                              DateTime?                                   @db.Timestamp(6)
  description                                String?
  state                                      String?
  aws_athena_work_group_named_queries        aws_athena_work_group_named_queries[]
  aws_athena_work_group_prepared_statements  aws_athena_work_group_prepared_statements[]
  aws_athena_work_group_query_executions     aws_athena_work_group_query_executions[]
}

model aws_autoscaling_group_instances {
  cq_id                     String                  @id(map: "aws_autoscaling_group_instances_pk") @db.Uuid
  cq_meta                   Json?
  group_cq_id               String?                 @db.Uuid
  availability_zone         String?
  health_status             String?
  id                        String?
  lifecycle_state           String?
  protected_from_scale_in   Boolean?
  type                      String?
  launch_configuration_name String?
  launch_template_id        String?
  launch_template_name      String?
  launch_template_version   String?
  weighted_capacity         String?
  aws_autoscaling_groups    aws_autoscaling_groups? @relation(fields: [group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_autoscaling_group_lifecycle_hooks {
  cq_id                   String                  @id(map: "aws_autoscaling_group_lifecycle_hooks_pk") @db.Uuid
  cq_meta                 Json?
  group_cq_id             String?                 @db.Uuid
  auto_scaling_group_name String?
  default_result          String?
  global_timeout          Int?
  heartbeat_timeout       Int?
  lifecycle_hook_name     String?
  lifecycle_transition    String?
  notification_metadata   String?
  notification_target_arn String?
  role_arn                String?
  aws_autoscaling_groups  aws_autoscaling_groups? @relation(fields: [group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_autoscaling_group_scaling_policies {
  cq_id                                                          String                  @id(map: "aws_autoscaling_group_scaling_policies_pk") @db.Uuid
  cq_meta                                                        Json?
  group_cq_id                                                    String?                 @db.Uuid
  adjustment_type                                                String?
  alarms                                                         Json?
  auto_scaling_group_name                                        String?
  cooldown                                                       Int?
  enabled                                                        Boolean?
  estimated_instance_warmup                                      Int?
  metric_aggregation_type                                        String?
  min_adjustment_magnitude                                       Int?
  min_adjustment_step                                            Int?
  arn                                                            String?
  name                                                           String?
  type                                                           String?
  scaling_adjustment                                             Int?
  step_adjustments                                               Json?
  target_tracking_configuration_target_value                     Float?
  target_tracking_configuration_customized_metric_name           String?
  target_tracking_configuration_customized_metric_namespace      String?
  target_tracking_configuration_customized_metric_statistic      String?
  target_tracking_configuration_customized_metric_dimensions     Json?
  target_tracking_configuration_customized_metric_unit           String?
  target_tracking_configuration_disable_scale_in                 Boolean?
  target_tracking_configuration_predefined_metric_type           String?
  target_tracking_configuration_predefined_metric_resource_label String?
  aws_autoscaling_groups                                         aws_autoscaling_groups? @relation(fields: [group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_autoscaling_group_tags {
  cq_id                  String                  @id(map: "aws_autoscaling_group_tags_pk") @db.Uuid
  cq_meta                Json?
  group_cq_id            String?                 @db.Uuid
  key                    String?
  propagate_at_launch    Boolean?
  resource_id            String?
  resource_type          String?
  value                  String?
  aws_autoscaling_groups aws_autoscaling_groups? @relation(fields: [group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_autoscaling_groups {
  cq_id                                  String                                   @unique @db.Uuid
  cq_meta                                Json?
  account_id                             String?
  region                                 String?
  load_balancers                         Json?
  load_balancer_target_groups            Json?
  notifications_configurations           Json?
  name                                   String?
  availability_zones                     String[]
  created_time                           DateTime?                                @db.Timestamp(6)
  default_cooldown                       Int?
  desired_capacity                       Int?
  health_check_type                      String?
  max_size                               Int?
  min_size                               Int?
  arn                                    String                                   @id(map: "aws_autoscaling_groups_pk")
  capacity_rebalance                     Boolean?
  enabled_metrics                        Json?
  health_check_grace_period              Int?
  launch_configuration_name              String?
  launch_template_id                     String?
  launch_template_name                   String?
  launch_template_version                String?
  load_balancer_names                    String[]
  max_instance_lifetime                  Int?
  mixed_instances_policy                 Json?
  new_instances_protected_from_scale_in  Boolean?
  placement_group                        String?
  service_linked_role_arn                String?
  status                                 String?
  suspended_processes                    Json?
  target_group_arns                      String[]
  termination_policies                   String[]
  vpc_zone_identifier                    String?
  aws_autoscaling_group_instances        aws_autoscaling_group_instances[]
  aws_autoscaling_group_lifecycle_hooks  aws_autoscaling_group_lifecycle_hooks[]
  aws_autoscaling_group_scaling_policies aws_autoscaling_group_scaling_policies[]
  aws_autoscaling_group_tags             aws_autoscaling_group_tags[]
}

model aws_autoscaling_launch_configuration_block_device_mappings {
  cq_id                                 String                                 @id(map: "aws_autoscaling_launch_configuration_block_device_mappings_pk") @db.Uuid
  cq_meta                               Json?
  launch_configuration_cq_id            String?                                @db.Uuid
  device_name                           String?
  ebs_delete_on_termination             Boolean?
  ebs_encrypted                         Boolean?
  ebs_iops                              Int?
  ebs_snapshot_id                       String?
  ebs_volume_size                       Int?
  ebs_volume_type                       String?
  no_device                             Boolean?
  virtual_name                          String?
  aws_autoscaling_launch_configurations aws_autoscaling_launch_configurations? @relation(fields: [launch_configuration_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_autoscaling_launch_configur_launch_configuration_cq_id_fkey")
}

model aws_autoscaling_launch_configurations {
  cq_id                                                      String                                                       @unique @db.Uuid
  cq_meta                                                    Json?
  account_id                                                 String?
  region                                                     String?
  created_time                                               DateTime?                                                    @db.Timestamp(6)
  image_id                                                   String?
  instance_type                                              String?
  launch_configuration_name                                  String?
  associate_public_ip_address                                Boolean?
  classic_link_vpc_id                                        String?
  classic_link_vpc_security_groups                           String[]
  ebs_optimized                                              Boolean?
  iam_instance_profile                                       String?
  instance_monitoring_enabled                                Boolean?
  kernel_id                                                  String?
  key_name                                                   String?
  arn                                                        String                                                       @id(map: "aws_autoscaling_launch_configurations_pk")
  metadata_options_http_endpoint                             String?
  metadata_options_http_put_response_hop_limit               Int?
  metadata_options_http_tokens                               String?
  placement_tenancy                                          String?
  ramdisk_id                                                 String?
  security_groups                                            String[]
  spot_price                                                 String?
  user_data                                                  String?
  aws_autoscaling_launch_configuration_block_device_mappings aws_autoscaling_launch_configuration_block_device_mappings[]
}

model aws_autoscaling_scheduled_actions {
  cq_id                   String    @unique @db.Uuid
  cq_meta                 Json?
  account_id              String?
  region                  String?
  auto_scaling_group_name String?
  desired_capacity        Int?
  end_time                DateTime? @db.Timestamp(6)
  max_size                Int?
  min_size                Int?
  recurrence              String?
  arn                     String    @id(map: "aws_autoscaling_scheduled_actions_pk")
  name                    String?
  start_time              DateTime? @db.Timestamp(6)
  time                    DateTime? @db.Timestamp(6)
  time_zone               String?
}

model aws_backup_global_settings {
  cq_id            String    @unique @db.Uuid
  cq_meta          Json?
  account_id       String    @id(map: "aws_backup_global_settings_pk")
  global_settings  Json?
  last_update_time DateTime? @db.Timestamp(6)
}

model aws_backup_plan_rules {
  cq_id                           String            @id(map: "aws_backup_plan_rules_pk") @db.Uuid
  cq_meta                         Json?
  plan_cq_id                      String?           @db.Uuid
  name                            String?
  target_backup_vault_name        String?
  completion_window_minutes       BigInt?
  copy_actions                    Json?
  enable_continuous_backup        Boolean?
  delete_after_days               BigInt?
  move_to_cold_storage_after_days BigInt?
  recovery_point_tags             Json?
  id                              String?
  schedule_expression             String?
  start_window_minutes            BigInt?
  aws_backup_plans                aws_backup_plans? @relation(fields: [plan_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_backup_plan_selections {
  cq_id              String            @id(map: "aws_backup_plan_selections_pk") @db.Uuid
  cq_meta            Json?
  plan_cq_id         String?           @db.Uuid
  creation_date      DateTime?         @db.Timestamp(6)
  creator_request_id String?
  iam_role_arn       String?
  selection_id       String?
  selection_name     String?
  conditions         Json?
  list_of_tags       Json?
  not_resources      String[]
  resources          String[]
  aws_backup_plans   aws_backup_plans? @relation(fields: [plan_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_backup_plans {
  cq_id                      String                       @unique @db.Uuid
  cq_meta                    Json?
  account_id                 String?
  region                     String?
  arn                        String                       @id(map: "aws_backup_plans_pk")
  id                         String?
  name                       String?
  creation_date              DateTime?                    @db.Timestamp(6)
  creator_request_id         String?
  last_execution_date        DateTime?                    @db.Timestamp(6)
  version_id                 String?
  advanced_backup_settings   Json?
  tags                       Json?
  aws_backup_plan_rules      aws_backup_plan_rules[]
  aws_backup_plan_selections aws_backup_plan_selections[]
}

model aws_backup_region_settings {
  cq_id                               String @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String
  region                              String
  resource_type_management_preference Json?
  resource_type_opt_in_preference     Json?

  @@id([account_id, region], map: "aws_backup_region_settings_pk")
}

model aws_backup_vault_recovery_points {
  cq_id                              String             @id(map: "aws_backup_vault_recovery_points_pk") @db.Uuid
  cq_meta                            Json?
  vault_cq_id                        String?            @db.Uuid
  backup_size                        BigInt?
  calculated_delete_at               DateTime?          @db.Timestamp(6)
  calculated_move_to_cold_storage_at DateTime?          @db.Timestamp(6)
  completion_date                    DateTime?          @db.Timestamp(6)
  created_by                         Json?
  creation_date                      DateTime?          @db.Timestamp(6)
  encryption_key_arn                 String?
  iam_role_arn                       String?
  is_encrypted                       Boolean?
  last_restore_time                  DateTime?          @db.Timestamp(6)
  delete_after                       BigInt?
  move_to_cold_storage_after         BigInt?
  arn                                String?
  resource_arn                       String?
  resource_type                      String?
  source_backup_vault_arn            String?
  status                             String?
  status_message                     String?
  tags                               Json?
  aws_backup_vaults                  aws_backup_vaults? @relation(fields: [vault_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_backup_vaults {
  cq_id                            String                             @unique @db.Uuid
  cq_meta                          Json?
  account_id                       String?
  region                           String?
  arn                              String                             @id(map: "aws_backup_vaults_pk")
  name                             String?
  creation_date                    DateTime?                          @db.Timestamp(6)
  creator_request_id               String?
  encryption_key_arn               String?
  lock_date                        DateTime?                          @db.Timestamp(6)
  locked                           Boolean?
  max_retention_days               BigInt?
  min_retention_days               BigInt?
  number_of_recovery_points        BigInt?
  access_policy                    Json?
  notification_events              String[]
  notification_sns_topic_arn       String?
  tags                             Json?
  aws_backup_vault_recovery_points aws_backup_vault_recovery_points[]
}

model aws_cloudformation_stack_outputs {
  cq_id                     String                     @id(map: "aws_cloudformation_stack_outputs_pk") @db.Uuid
  cq_meta                   Json?
  stack_cq_id               String?                    @db.Uuid
  description               String?
  export_name               String?
  output_key                String?
  output_value              String?
  aws_cloudformation_stacks aws_cloudformation_stacks? @relation(fields: [stack_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cloudformation_stack_resources {
  cq_id                            String                     @id(map: "aws_cloudformation_stack_resources_pk") @db.Uuid
  cq_meta                          Json?
  stack_cq_id                      String?                    @db.Uuid
  last_updated_timestamp           DateTime?                  @db.Timestamp(6)
  logical_resource_id              String?
  resource_status                  String?
  resource_type                    String?
  stack_resource_drift_status      String?
  drift_last_check_timestamp       DateTime?                  @db.Timestamp(6)
  module_info_logical_id_hierarchy String?
  module_info_type_hierarchy       String?
  physical_resource_id             String?
  resource_status_reason           String?
  aws_cloudformation_stacks        aws_cloudformation_stacks? @relation(fields: [stack_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cloudformation_stacks {
  cq_id                                             String                               @unique @db.Uuid
  cq_meta                                           Json?
  account_id                                        String?
  region                                            String?
  arn                                               String?
  creation_time                                     DateTime?                            @db.Timestamp(6)
  stack                                             String?
  status                                            String?
  capabilities                                      String[]
  change_set_id                                     String?
  deletion_time                                     DateTime?                            @db.Timestamp(6)
  description                                       String?
  disable_rollback                                  Boolean?
  stack_drift_status                                String?
  drift_last_check_timestamp                        DateTime?                            @db.Timestamp(6)
  enable_termination_protection                     Boolean?
  last_updated_time                                 DateTime?                            @db.Timestamp(6)
  notification_arns                                 String[]
  parameters                                        Json?
  parent_id                                         String?
  role_arn                                          String?
  rollback_configuration_monitoring_time_in_minutes Int?
  rollback_configuration_rollback_triggers          Json?
  root_id                                           String?
  id                                                String                               @id(map: "aws_cloudformation_stacks_pk")
  stack_status_reason                               String?
  tags                                              Json?
  timeout_in_minutes                                Int?
  aws_cloudformation_stack_outputs                  aws_cloudformation_stack_outputs[]
  aws_cloudformation_stack_resources                aws_cloudformation_stack_resources[]
}

model aws_cloudfront_cache_policies {
  cq_id                         String    @unique @db.Uuid
  cq_meta                       Json?
  account_id                    String
  arn                           String?
  min_ttl                       BigInt?
  name                          String?
  comment                       String?
  default_ttl                   BigInt?
  max_ttl                       BigInt?
  cookies_behavior              String?
  cookies_quantity              Int?
  cookies                       String[]
  enable_accept_encoding_gzip   Boolean?
  headers_behavior              String?
  headers_quantity              Int?
  headers                       String[]
  query_strings_behavior        String?
  query_strings_quantity        Int?
  query_strings                 String[]
  enable_accept_encoding_brotli Boolean?
  id                            String
  last_modified_time            DateTime? @db.Timestamp(6)
  type                          String?

  @@id([account_id, id], map: "aws_cloudfront_cache_policies_pk")
}

model aws_cloudfront_distribution_cache_behavior_lambda_functions {
  cq_id                                       String                                       @id(map: "aws_cloudfront_distribution_cache_behavior_lambda_functions_pk") @db.Uuid
  cq_meta                                     Json?
  distribution_cache_behavior_cq_id           String?                                      @db.Uuid
  event_type                                  String?
  lambda_function_arn                         String?
  include_body                                Boolean?
  aws_cloudfront_distribution_cache_behaviors aws_cloudfront_distribution_cache_behaviors? @relation(fields: [distribution_cache_behavior_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudfront_distribution_c_distribution_cache_behavior__fkey")
}

model aws_cloudfront_distribution_cache_behaviors {
  cq_id                                                       String                                                        @id(map: "aws_cloudfront_distribution_cache_behaviors_pk") @db.Uuid
  cq_meta                                                     Json?
  distribution_cq_id                                          String?                                                       @db.Uuid
  path_pattern                                                String?
  target_origin_id                                            String?
  viewer_protocol_policy                                      String?
  allowed_methods                                             String[]
  cached_methods                                              String[]
  cache_policy_id                                             String?
  compress                                                    Boolean?
  default_ttl                                                 BigInt?
  field_level_encryption_id                                   String?
  forwarded_values_cookies_forward                            String?
  forwarded_values_cookies_whitelisted_names                  String[]
  forwarded_values_query_string                               Boolean?
  forwarded_values_headers                                    String[]
  forwarded_values_query_string_cache_keys                    String[]
  max_ttl                                                     BigInt?
  min_ttl                                                     BigInt?
  origin_request_policy_id                                    String?
  realtime_log_config_arn                                     String?
  smooth_streaming                                            Boolean?
  trusted_key_groups_enabled                                  Boolean?
  trusted_key_groups                                          String[]
  trusted_signers_enabled                                     Boolean?
  trusted_signers                                             String[]
  aws_cloudfront_distributions                                aws_cloudfront_distributions?                                 @relation(fields: [distribution_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudfront_distribution_cache_behav_distribution_cq_id_fkey")
  aws_cloudfront_distribution_cache_behavior_lambda_functions aws_cloudfront_distribution_cache_behavior_lambda_functions[]
}

model aws_cloudfront_distribution_custom_error_responses {
  cq_id                        String                        @id(map: "aws_cloudfront_distribution_custom_error_responses_pk") @db.Uuid
  cq_meta                      Json?
  distribution_cq_id           String?                       @db.Uuid
  error_code                   Int?
  error_caching_min_ttl        BigInt?
  response_code                String?
  response_page_path           String?
  aws_cloudfront_distributions aws_cloudfront_distributions? @relation(fields: [distribution_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudfront_distribution_custom_erro_distribution_cq_id_fkey")
}

model aws_cloudfront_distribution_default_cache_behavior_functions {
  cq_id                        String                        @id(map: "aws_cloudfront_distribution_default_cache_behavior_functions_pk") @db.Uuid
  cq_meta                      Json?
  distribution_cq_id           String?                       @db.Uuid
  event_type                   String?
  lambda_function_arn          String?
  include_body                 Boolean?
  aws_cloudfront_distributions aws_cloudfront_distributions? @relation(fields: [distribution_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudfront_distribution_default_cac_distribution_cq_id_fkey")
}

model aws_cloudfront_distribution_origin_groups {
  cq_id                          String                        @id(map: "aws_cloudfront_distribution_origin_groups_pk") @db.Uuid
  cq_meta                        Json?
  distribution_cq_id             String?                       @db.Uuid
  failover_criteria_status_codes Int[]
  id                             String?
  members_origin_ids             String[]
  aws_cloudfront_distributions   aws_cloudfront_distributions? @relation(fields: [distribution_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudfront_distribution_origin_grou_distribution_cq_id_fkey")
}

model aws_cloudfront_distribution_origins {
  cq_id                                   String                        @id(map: "aws_cloudfront_distribution_origins_pk") @db.Uuid
  cq_meta                                 Json?
  distribution_cq_id                      String?                       @db.Uuid
  domain_name                             String?
  id                                      String?
  connection_attempts                     Int?
  connection_timeout                      Int?
  custom_headers                          Json?
  custom_origin_config_http_port          Int?
  custom_origin_config_https_port         Int?
  custom_origin_config_protocol_policy    String?
  custom_origin_config_keepalive_timeout  Int?
  custom_origin_config_read_timeout       Int?
  custom_origin_config_ssl_protocols      String[]
  origin_path                             String?
  origin_shield_enabled                   Boolean?
  origin_shield_region                    String?
  s3_origin_config_origin_access_identity String?
  aws_cloudfront_distributions            aws_cloudfront_distributions? @relation(fields: [distribution_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cloudfront_distributions {
  cq_id                                                        String                                                         @unique @db.Uuid
  cq_meta                                                      Json?
  account_id                                                   String?
  tags                                                         Json?
  arn                                                          String                                                         @id(map: "aws_cloudfront_distributions_pk")
  caller_reference                                             String?
  comment                                                      String?
  cache_behavior_target_origin_id                              String?
  cache_behavior_viewer_protocol_policy                        String?
  cache_behavior_allowed_methods                               String[]
  cache_behavior_allowed_methods_cached_methods                String[]
  cache_behavior_cache_policy_id                               String?
  cache_behavior_compress                                      Boolean?
  cache_behavior_default_ttl                                   BigInt?
  cache_behavior_field_level_encryption_id                     String?
  cache_behavior_forwarded_values_cookies_forward              String?
  cache_behavior_forwarded_values_cookies_whitelisted_names    String[]
  cache_behavior_forwarded_values_query_string                 Boolean?
  cache_behavior_forwarded_values_headers                      String[]
  cache_behavior_forwarded_values_query_string_cache_keys      String[]
  cache_behavior_max_ttl                                       BigInt?
  cache_behavior_min_ttl                                       BigInt?
  cache_behavior_origin_request_policy_id                      String?
  cache_behavior_realtime_log_config_arn                       String?
  cache_behavior_smooth_streaming                              Boolean?
  cache_behavior_trusted_key_groups_enabled                    Boolean?
  cache_behavior_trusted_key_groups                            String[]
  cache_behavior_trusted_signers_enabled                       Boolean?
  cache_behavior_trusted_signers                               String[]
  enabled                                                      Boolean?
  aliases                                                      String[]
  default_root_object                                          String?
  http_version                                                 String?
  ipv6_enabled                                                 Boolean?
  logging_bucket                                               String?
  logging_enabled                                              Boolean?
  logging_include_cookies                                      Boolean?
  logging_prefix                                               String?
  price_class                                                  String?
  geo_restriction_type                                         String?
  geo_restrictions                                             String[]
  viewer_certificate_acm_certificate_arn                       String?
  viewer_certificate                                           String?
  viewer_certificate_source                                    String?
  viewer_certificate_cloudfront_default_certificate            Boolean?
  viewer_certificate_iam_certificate_id                        String?
  viewer_certificate_minimum_protocol_version                  String?
  viewer_certificate_ssl_support_method                        String?
  web_acl_id                                                   String?
  domain_name                                                  String?
  id                                                           String?
  in_progress_invalidation_batches                             Int?
  last_modified_time                                           DateTime?                                                      @db.Timestamp(6)
  status                                                       String?
  active_trusted_key_groups_enabled                            Boolean?
  active_trusted_key_groups                                    Json?
  active_trusted_signers_enabled                               Boolean?
  active_trusted_signers                                       Json?
  alias_icp_recordals                                          Json?
  aws_cloudfront_distribution_cache_behaviors                  aws_cloudfront_distribution_cache_behaviors[]
  aws_cloudfront_distribution_custom_error_responses           aws_cloudfront_distribution_custom_error_responses[]
  aws_cloudfront_distribution_default_cache_behavior_functions aws_cloudfront_distribution_default_cache_behavior_functions[]
  aws_cloudfront_distribution_origin_groups                    aws_cloudfront_distribution_origin_groups[]
  aws_cloudfront_distribution_origins                          aws_cloudfront_distribution_origins[]
}

model aws_cloudtrail_trail_event_selectors {
  cq_id                            String                 @id(map: "aws_cloudtrail_trail_event_selectors_pk") @db.Uuid
  cq_meta                          Json?
  trail_cq_id                      String?                @db.Uuid
  trail_arn                        String?
  exclude_management_event_sources String[]
  include_management_events        Boolean?
  read_write_type                  String?
  aws_cloudtrail_trails            aws_cloudtrail_trails? @relation(fields: [trail_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cloudtrail_trails {
  cq_id                                  String                                 @unique @db.Uuid
  cq_meta                                Json?
  account_id                             String
  tags                                   Json?
  cloudwatch_logs_log_group_name         String?
  is_logging                             Boolean?
  latest_cloud_watch_logs_delivery_error String?
  latest_cloud_watch_logs_delivery_time  DateTime?                              @db.Timestamp(6)
  latest_delivery_error                  String?
  latest_delivery_time                   DateTime?                              @db.Timestamp(6)
  latest_digest_delivery_error           String?
  latest_digest_delivery_time            DateTime?                              @db.Timestamp(6)
  latest_notification_error              String?
  latest_notification_time               DateTime?                              @db.Timestamp(6)
  start_logging_time                     DateTime?                              @db.Timestamp(6)
  stop_logging_time                      DateTime?                              @db.Timestamp(6)
  cloud_watch_logs_log_group_arn         String?
  cloud_watch_logs_role_arn              String?
  has_custom_event_selectors             Boolean?
  has_insight_selectors                  Boolean?
  region                                 String?
  include_global_service_events          Boolean?
  is_multi_region_trail                  Boolean?
  is_organization_trail                  Boolean?
  kms_key_id                             String?
  log_file_validation_enabled            Boolean?
  name                                   String?
  s3_bucket_name                         String?
  s3_key_prefix                          String?
  sns_topic_arn                          String?
  sns_topic_name                         String?
  arn                                    String
  aws_cloudtrail_trail_event_selectors   aws_cloudtrail_trail_event_selectors[]

  @@id([account_id, arn], map: "aws_cloudtrail_trails_pk")
}

model aws_cloudwatch_alarm_metrics {
  cq_id                         String                 @id(map: "aws_cloudwatch_alarm_metrics_pk") @db.Uuid
  cq_meta                       Json?
  alarm_cq_id                   String?                @db.Uuid
  alarm_arn                     String?
  alarm_name                    String?
  id                            String?
  expression                    String?
  label                         String?
  metric_stat_metric_dimensions Json?
  metric_stat_metric_name       String?
  metric_stat_metric_namespace  String?
  metric_stat_period            Int?
  metric_stat                   String?
  metric_stat_unit              String?
  period                        Int?
  return_data                   Boolean?
  aws_cloudwatch_alarms         aws_cloudwatch_alarms? @relation(fields: [alarm_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cloudwatch_alarms {
  cq_id                                String                         @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String?
  region                               String?
  actions_enabled                      Boolean?
  actions                              String[]
  arn                                  String                         @id(map: "aws_cloudwatch_alarms_pk")
  configuration_updated_timestamp      DateTime?                      @db.Timestamp(6)
  description                          String?
  name                                 String?
  comparison_operator                  String?
  datapoints_to_alarm                  Int?
  dimensions                           Json?
  evaluate_low_sample_count_percentile String?
  evaluation_periods                   Int?
  extended_statistic                   String?
  insufficient_data_actions            String[]
  metric_name                          String?
  namespace                            String?
  ok_actions                           String[]
  period                               Int?
  state_reason                         String?
  state_reason_data                    String?
  state_updated_timestamp              DateTime?                      @db.Timestamp(6)
  state_value                          String?
  statistic                            String?
  threshold                            Float?
  threshold_metric_id                  String?
  treat_missing_data                   String?
  unit                                 String?
  aws_cloudwatch_alarm_metrics         aws_cloudwatch_alarm_metrics[]
}

model aws_cloudwatchlogs_filter_metric_transformations {
  cq_id                      String                      @id(map: "aws_cloudwatchlogs_filter_metric_transformations_pk") @db.Uuid
  cq_meta                    Json?
  filter_cq_id               String?                     @db.Uuid
  metric_name                String?
  metric_namespace           String?
  metric_value               String?
  default_value              Float?
  aws_cloudwatchlogs_filters aws_cloudwatchlogs_filters? @relation(fields: [filter_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cloudwatchlogs_filter_metric_transformati_filter_cq_id_fkey")
}

model aws_cloudwatchlogs_filters {
  cq_id                                            String                                             @unique @db.Uuid
  cq_meta                                          Json?
  account_id                                       String
  region                                           String
  creation_time                                    BigInt?
  name                                             String
  pattern                                          String?
  log_group_name                                   String
  aws_cloudwatchlogs_filter_metric_transformations aws_cloudwatchlogs_filter_metric_transformations[]

  @@id([account_id, region, name, log_group_name], map: "aws_cloudwatchlogs_filters_pk")
}

model aws_codebuild_project_environment_variables {
  cq_id                  String                  @id(map: "aws_codebuild_project_environment_variables_pk") @db.Uuid
  cq_meta                Json?
  project_cq_id          String?                 @db.Uuid
  name                   String?
  value                  String?
  type                   String?
  aws_codebuild_projects aws_codebuild_projects? @relation(fields: [project_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_codebuild_project_file_system_locations {
  cq_id                  String                  @id(map: "aws_codebuild_project_file_system_locations_pk") @db.Uuid
  cq_meta                Json?
  project_cq_id          String?                 @db.Uuid
  identifier             String?
  location               String?
  mount_options          String?
  mount_point            String?
  type                   String?
  aws_codebuild_projects aws_codebuild_projects? @relation(fields: [project_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_codebuild_project_secondary_artifacts {
  cq_id                  String                  @id(map: "aws_codebuild_project_secondary_artifacts_pk") @db.Uuid
  cq_meta                Json?
  project_cq_id          String?                 @db.Uuid
  type                   String?
  artifact_identifier    String?
  bucket_owner_access    String?
  encryption_disabled    Boolean?
  location               String?
  name                   String?
  namespace_type         String?
  override_artifact_name Boolean?
  packaging              String?
  path                   String?
  aws_codebuild_projects aws_codebuild_projects? @relation(fields: [project_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_codebuild_project_secondary_sources {
  cq_id                                  String                  @id(map: "aws_codebuild_project_secondary_sources_pk") @db.Uuid
  cq_meta                                Json?
  project_cq_id                          String?                 @db.Uuid
  type                                   String?
  auth_type                              String?
  auth_resource                          String?
  build_status_config_context            String?
  build_status_config_target_url         String?
  buildspec                              String?
  git_clone_depth                        Int?
  git_submodules_config_fetch_submodules Boolean?
  insecure_ssl                           Boolean?
  location                               String?
  report_build_status                    Boolean?
  source_identifier                      String?
  aws_codebuild_projects                 aws_codebuild_projects? @relation(fields: [project_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_codebuild_projects {
  cq_id                                                  String                                        @unique @db.Uuid
  cq_meta                                                Json?
  account_id                                             String?
  region                                                 String?
  arn                                                    String                                        @id(map: "aws_codebuild_projects_pk")
  artifacts_type                                         String?
  artifacts_artifact_identifier                          String?
  artifacts_bucket_owner_access                          String?
  artifacts_encryption_disabled                          Boolean?
  artifacts_location                                     String?
  artifacts_name                                         String?
  artifacts_namespace_type                               String?
  artifacts_override_artifact_name                       Boolean?
  artifacts_packaging                                    String?
  artifacts_path                                         String?
  badge_enabled                                          Boolean?
  badge_request_url                                      String?
  build_batch_config_batch_report_mode                   String?
  build_batch_config_combine_artifacts                   Boolean?
  build_batch_config_restrictions_compute_types_allowed  String[]
  build_batch_config_restrictions_maximum_builds_allowed Int?
  build_batch_config_service_role                        String?
  build_batch_config_timeout_in_mins                     Int?
  cache_type                                             String?
  cache_location                                         String?
  cache_modes                                            String[]
  concurrent_build_limit                                 Int?
  created                                                DateTime?                                     @db.Timestamp(6)
  description                                            String?
  encryption_key                                         String?
  environment_compute_type                               String?
  environment_image                                      String?
  environment_type                                       String?
  environment_certificate                                String?
  environment_image_pull_credentials_type                String?
  environment_privileged_mode                            Boolean?
  environment_registry_credential                        String?
  environment_registry_credential_credential_provider    String?
  last_modified                                          DateTime?                                     @db.Timestamp(6)
  logs_config_cloud_watch_logs_status                    String?
  logs_config_cloud_watch_logs_group_name                String?
  logs_config_cloud_watch_logs_stream_name               String?
  logs_config_s3_logs_status                             String?
  logs_config_s3_logs_bucket_owner_access                String?
  logs_config_s3_logs_encryption_disabled                Boolean?
  logs_config_s3_logs_location                           String?
  name                                                   String?
  project_visibility                                     String?
  public_project_alias                                   String?
  queued_timeout_in_minutes                              Int?
  resource_access_role                                   String?
  secondary_source_versions                              Json?
  service_role                                           String?
  source_type                                            String?
  source_auth_type                                       String?
  source_auth_resource                                   String?
  source_build_status_config_context                     String?
  source_build_status_config_target_url                  String?
  source_buildspec                                       String?
  source_git_clone_depth                                 Int?
  source_git_submodules_config_fetch_submodules          Boolean?
  source_insecure_ssl                                    Boolean?
  source_location                                        String?
  source_report_build_status                             Boolean?
  source_identifier                                      String?
  source_version                                         String?
  tags                                                   Json?
  timeout_in_minutes                                     Int?
  vpc_config_security_group_ids                          String[]
  vpc_config_subnets                                     String[]
  vpc_config_vpc_id                                      String?
  webhook_branch_filter                                  String?
  webhook_build_type                                     String?
  webhook_filter_groups                                  Json?
  webhook_last_modified_secret                           DateTime?                                     @db.Timestamp(6)
  webhook_payload_url                                    String?
  webhook_secret                                         String?
  webhook_url                                            String?
  aws_codebuild_project_environment_variables            aws_codebuild_project_environment_variables[]
  aws_codebuild_project_file_system_locations            aws_codebuild_project_file_system_locations[]
  aws_codebuild_project_secondary_artifacts              aws_codebuild_project_secondary_artifacts[]
  aws_codebuild_project_secondary_sources                aws_codebuild_project_secondary_sources[]
}

model aws_codepipeline_pipeline_stage_actions {
  cq_id                            String                            @id(map: "aws_codepipeline_pipeline_stage_actions_pk") @db.Uuid
  cq_meta                          Json?
  pipeline_stage_cq_id             String?                           @db.Uuid
  category                         String?
  owner                            String?
  provider                         String?
  version                          String?
  name                             String?
  configuration                    Json?
  input_artifacts                  String[]
  namespace                        String?
  output_artifacts                 String[]
  region                           String?
  role_arn                         String?
  run_order                        Int?
  aws_codepipeline_pipeline_stages aws_codepipeline_pipeline_stages? @relation(fields: [pipeline_stage_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_codepipeline_pipeline_stage_actio_pipeline_stage_cq_id_fkey")
}

model aws_codepipeline_pipeline_stages {
  cq_id                                   String                                    @id(map: "aws_codepipeline_pipeline_stages_pk") @db.Uuid
  cq_meta                                 Json?
  pipeline_cq_id                          String?                                   @db.Uuid
  stage_order                             Int?
  name                                    String?
  blockers                                Json?
  aws_codepipeline_pipelines              aws_codepipeline_pipelines?               @relation(fields: [pipeline_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_codepipeline_pipeline_stage_actions aws_codepipeline_pipeline_stage_actions[]
}

model aws_codepipeline_pipelines {
  cq_id                              String                             @unique @db.Uuid
  cq_meta                            Json?
  account_id                         String?
  region                             String?
  tags                               Json?
  created                            DateTime?                          @db.Timestamp(6)
  arn                                String                             @id(map: "aws_codepipeline_pipelines_pk")
  updated                            DateTime?                          @db.Timestamp(6)
  name                               String?
  role_arn                           String?
  artifact_store_location            String?
  artifact_store_type                String?
  artifact_store_encryption_key_id   String?
  artifact_store_encryption_key_type String?
  artifact_stores                    Json?
  version                            Int?
  aws_codepipeline_pipeline_stages   aws_codepipeline_pipeline_stages[]
}

model aws_codepipeline_webhook_filters {
  cq_id                     String                     @id(map: "aws_codepipeline_webhook_filters_pk") @db.Uuid
  cq_meta                   Json?
  webhook_cq_id             String?                    @db.Uuid
  json_path                 String?
  match_equals              String?
  aws_codepipeline_webhooks aws_codepipeline_webhooks? @relation(fields: [webhook_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_codepipeline_webhooks {
  cq_id                            String                             @unique @db.Uuid
  cq_meta                          Json?
  account_id                       String?
  region                           String?
  authentication                   String?
  authentication_allowed_ip_range  String?
  authentication_secret_token      String?
  name                             String?
  target_action                    String?
  target_pipeline                  String?
  url                              String?
  arn                              String                             @id(map: "aws_codepipeline_webhooks_pk")
  error_code                       String?
  error_message                    String?
  last_triggered                   DateTime?                          @db.Timestamp(6)
  tags                             Json?
  aws_codepipeline_webhook_filters aws_codepipeline_webhook_filters[]
}

model aws_cognito_identity_pool_cognito_identity_providers {
  cq_id                      String                      @id(map: "aws_cognito_identity_pool_cognito_identity_providers_pk") @db.Uuid
  cq_meta                    Json?
  identity_pool_cq_id        String?                     @db.Uuid
  identity_pool_id           String?
  client_id                  String?
  provider_name              String?
  server_side_token_check    Boolean?
  aws_cognito_identity_pools aws_cognito_identity_pools? @relation(fields: [identity_pool_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_cognito_identity_pool_cognito_iden_identity_pool_cq_id_fkey")
}

model aws_cognito_identity_pools {
  cq_id                                                String                                                 @unique @db.Uuid
  cq_meta                                              Json?
  account_id                                           String
  region                                               String?
  arn                                                  String?
  allow_unauthenticated_identities                     Boolean?
  id                                                   String
  identity_pool_name                                   String?
  allow_classic_flow                                   Boolean?
  developer_provider_name                              String?
  identity_pool_tags                                   Json?
  open_id_connect_provider_arns                        String[]
  saml_provider_arns                                   String[]
  supported_login_providers                            Json?
  aws_cognito_identity_pool_cognito_identity_providers aws_cognito_identity_pool_cognito_identity_providers[]

  @@id([account_id, id], map: "aws_cognito_identity_pools_pk")
}

model aws_cognito_user_pool_identity_providers {
  cq_id                  String                  @id(map: "aws_cognito_user_pool_identity_providers_pk") @db.Uuid
  cq_meta                Json?
  user_pool_cq_id        String?                 @db.Uuid
  user_pool_id           String?
  account_id             String?
  region                 String?
  attribute_mapping      Json?
  creation_date          DateTime?               @db.Timestamp(6)
  idp_identifiers        String[]
  last_modified_date     DateTime?               @db.Timestamp(6)
  provider_details       Json?
  provider_name          String?
  provider_type          String?
  aws_cognito_user_pools aws_cognito_user_pools? @relation(fields: [user_pool_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cognito_user_pool_schema_attributes {
  cq_id                                   String                  @id(map: "aws_cognito_user_pool_schema_attributes_pk") @db.Uuid
  cq_meta                                 Json?
  user_pool_cq_id                         String?                 @db.Uuid
  user_pool_id                            String?
  attribute_data_type                     String?
  developer_only_attribute                Boolean?
  mutable                                 Boolean?
  name                                    String?
  number_attribute_constraints_max_value  String?
  number_attribute_constraints_min_value  String?
  required                                Boolean?
  string_attribute_constraints_max_length String?
  string_attribute_constraints_min_length String?
  aws_cognito_user_pools                  aws_cognito_user_pools? @relation(fields: [user_pool_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_cognito_user_pools {
  cq_id                                                     String                                     @unique @db.Uuid
  cq_meta                                                   Json?
  account_id                                                String
  region                                                    String?
  account_recovery_setting                                  Json?
  admin_create_user_admin_only                              Boolean?
  admin_create_user_invite_email_message                    String?
  admin_create_user_invite_email_subject                    String?
  admin_create_user_invite_sms                              String?
  admin_create_user_config_unused_account_validity_days     Int?
  alias_attributes                                          String[]
  arn                                                       String?
  auto_verified_attributes                                  String[]
  creation_date                                             DateTime?                                  @db.Timestamp(6)
  custom_domain                                             String?
  challenge_required_on_new_device                          Boolean?
  device_only_remembered_on_user_prompt                     Boolean?
  domain                                                    String?
  email_configuration_set                                   String?
  email_configuration_sending_account                       String?
  email_configuration_from                                  String?
  email_configuration_reply_to_address                      String?
  email_configuration_source_arn                            String?
  email_configuration_failure                               String?
  email_verification_message                                String?
  email_verification_subject                                String?
  estimated_number_of_users                                 Int?
  id                                                        String
  lambda_config_create_auth_challenge                       String?
  lambda_config_custom_email_sender_lambda_arn              String?
  lambda_config_custom_email_sender_lambda_version          String?
  lambda_config_custom_message                              String?
  lambda_config_custom_sms_sender_lambda_arn                String?
  lambda_config_custom_sms_sender_lambda_version            String?
  lambda_config_define_auth_challenge                       String?
  lambda_config_kms_key_id                                  String?
  lambda_config_post_authentication                         String?
  lambda_config_post_confirmation                           String?
  lambda_config_pre_authentication                          String?
  lambda_config_pre_sign_up                                 String?
  lambda_config_pre_token_generation                        String?
  lambda_config_user_migration                              String?
  lambda_config_verify_auth_challenge_response              String?
  last_modified_date                                        DateTime?                                  @db.Timestamp(6)
  mfa_configuration                                         String?
  name                                                      String?
  policies_password_policy_minimum_length                   Int?
  policies_password_policy_require_lowercase                Boolean?
  policies_password_policy_require_numbers                  Boolean?
  policies_password_policy_require_symbols                  Boolean?
  policies_password_policy_require_uppercase                Boolean?
  policies_password_policy_temporary_password_validity_days Int?
  sms_authentication_message                                String?
  sms_configuration_sns_caller_arn                          String?
  sms_configuration_external_id                             String?
  sms_configuration_failure                                 String?
  sms_verification_message                                  String?
  status                                                    String?
  user_pool_add_ons_advanced_security_mode                  String?
  user_pool_tags                                            Json?
  username_attributes                                       String[]
  username_configuration_case_sensitive                     Boolean?
  verification_message_template_default_email_option        String?
  verification_message_template_email_message               String?
  verification_message_template_email_message_by_link       String?
  verification_message_template_email_subject               String?
  verification_message_template_email_subject_by_link       String?
  verification_message_template_sms_message                 String?
  aws_cognito_user_pool_identity_providers                  aws_cognito_user_pool_identity_providers[]
  aws_cognito_user_pool_schema_attributes                   aws_cognito_user_pool_schema_attributes[]

  @@id([account_id, id], map: "aws_cognito_user_pools_pk")
}

model aws_config_configuration_recorders {
  cq_id                                         String    @unique @db.Uuid
  cq_meta                                       Json?
  account_id                                    String?
  region                                        String?
  arn                                           String    @id(map: "aws_config_configuration_recorders_pk")
  name                                          String?
  recording_group_all_supported                 Boolean?
  recording_group_include_global_resource_types Boolean?
  recording_group_resource_types                String[]
  role_arn                                      String?
  status_last_error_code                        String?
  status_last_error_message                     String?
  status_last_start_time                        DateTime? @db.Timestamp(6)
  status_last_status                            String?
  status_last_status_change_time                DateTime? @db.Timestamp(6)
  status_last_stop_time                         DateTime? @db.Timestamp(6)
  status_recording                              Boolean?
}

model aws_config_conformance_pack_rule_compliances {
  cq_id                        String                        @id(map: "aws_config_conformance_pack_rule_compliances_pk") @db.Uuid
  cq_meta                      Json?
  conformance_pack_cq_id       String?                       @db.Uuid
  compliance_type              String?
  config_rule_name             String?
  controls                     String[]
  config_rule_invoked_time     DateTime?                     @db.Timestamp(6)
  resource_id                  String?
  resource_type                String?
  ordering_timestamp           DateTime?                     @db.Timestamp(6)
  result_recorded_time         DateTime?                     @db.Timestamp(6)
  annotation                   String?
  aws_config_conformance_packs aws_config_conformance_packs? @relation(fields: [conformance_pack_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_config_conformance_pack_rule_co_conformance_pack_cq_id_fkey")
}

model aws_config_conformance_packs {
  cq_id                                        String                                         @unique @db.Uuid
  cq_meta                                      Json?
  account_id                                   String?
  region                                       String?
  arn                                          String                                         @id(map: "aws_config_conformance_packs_pk")
  conformance_pack_id                          String?
  conformance_pack_name                        String?
  conformance_pack_input_parameters            Json?
  created_by                                   String?
  delivery_s3_bucket                           String?
  delivery_s3_key_prefix                       String?
  last_update_requested_time                   DateTime?                                      @db.Timestamp(6)
  aws_config_conformance_pack_rule_compliances aws_config_conformance_pack_rule_compliances[]
}

model aws_dax_cluster_nodes {
  cq_id                  String            @id(map: "aws_dax_cluster_nodes_pk") @db.Uuid
  cq_meta                Json?
  cluster_cq_id          String?           @db.Uuid
  availability_zone      String?
  endpoint_address       String?
  endpoint_port          Int?
  endpoint_url           String?
  node_create_time       DateTime?         @db.Timestamp(6)
  node_id                String?
  node_status            String?
  parameter_group_status String?
  aws_dax_clusters       aws_dax_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dax_clusters {
  cq_id                                   String                  @unique @db.Uuid
  cq_meta                                 Json?
  account_id                              String?
  region                                  String?
  tags                                    Json?
  active_nodes                            Int?
  arn                                     String                  @id(map: "aws_dax_clusters_pk")
  cluster_discovery_endpoint_address      String?
  cluster_discovery_endpoint_port         Int?
  cluster_discovery_endpoint_url          String?
  cluster_endpoint_encryption_type        String?
  name                                    String?
  description                             String?
  iam_role_arn                            String?
  node_ids_to_remove                      String[]
  node_type                               String?
  notification_configuration_topic_arn    String?
  notification_configuration_topic_status String?
  node_ids_to_reboot                      String[]
  parameter_apply_status                  String?
  parameter_group_name                    String?
  preferred_maintenance_window            String?
  sse_description_status                  String?
  security_groups                         Json?
  status                                  String?
  subnet_group                            String?
  total_nodes                             Int?
  aws_dax_cluster_nodes                   aws_dax_cluster_nodes[]
}

model aws_directconnect_connection_mac_sec_keys {
  cq_id                         String                         @id(map: "aws_directconnect_connection_mac_sec_keys_pk") @db.Uuid
  cq_meta                       Json?
  connection_cq_id              String?                        @db.Uuid
  connection_id                 String?
  ckn                           String?
  secret_arn                    String?
  start_on                      String?
  state                         String?
  aws_directconnect_connections aws_directconnect_connections? @relation(fields: [connection_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_directconnect_connections {
  cq_id                                     String                                      @unique @db.Uuid
  cq_meta                                   Json?
  account_id                                String
  region                                    String?
  arn                                       String?
  aws_device_v2                             String?
  bandwidth                                 String?
  id                                        String
  name                                      String?
  connection_state                          String?
  encryption_mode                           String?
  has_logical_redundancy                    String?
  jumbo_frame_capable                       Boolean?
  lag_id                                    String?
  loa_issue_time                            DateTime?                                   @db.Timestamp(6)
  location                                  String?
  mac_sec_capable                           Boolean?
  owner_account                             String?
  partner_name                              String?
  port_encryption_status                    String?
  provider_name                             String?
  tags                                      Json?
  vlan                                      Int?
  aws_directconnect_connection_mac_sec_keys aws_directconnect_connection_mac_sec_keys[]

  @@id([account_id, id], map: "aws_directconnect_connections_pk")
}

model aws_directconnect_gateway_associations {
  cq_id                                      String                      @id(map: "aws_directconnect_gateway_associations_pk") @db.Uuid
  cq_meta                                    Json?
  gateway_cq_id                              String?                     @db.Uuid
  gateway_id                                 String?
  allowed_prefixes_to_direct_connect_gateway String[]
  associated_gateway_id                      String?
  associated_gateway_owner_account           String?
  associated_gateway_region                  String?
  associated_gateway_type                    String?
  association_id                             String?
  association_state                          String?
  direct_connect_gateway_owner_account       String?
  state_change_error                         String?
  virtual_gateway_id                         String?
  virtual_gateway_owner_account              String?
  resource_id                                String?
  aws_directconnect_gateways                 aws_directconnect_gateways? @relation(fields: [gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_directconnect_gateway_attachments {
  cq_id                           String                      @id(map: "aws_directconnect_gateway_attachments_pk") @db.Uuid
  cq_meta                         Json?
  gateway_cq_id                   String?                     @db.Uuid
  gateway_id                      String?
  attachment_state                String?
  attachment_type                 String?
  state_change_error              String?
  virtual_interface_id            String?
  virtual_interface_owner_account String?
  virtual_interface_region        String?
  aws_directconnect_gateways      aws_directconnect_gateways? @relation(fields: [gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_directconnect_gateways {
  cq_id                                  String                                   @unique @db.Uuid
  cq_meta                                Json?
  account_id                             String
  arn                                    String?
  amazon_side_asn                        BigInt?
  id                                     String
  name                                   String?
  state                                  String?
  owner_account                          String?
  state_change_error                     String?
  aws_directconnect_gateway_associations aws_directconnect_gateway_associations[]
  aws_directconnect_gateway_attachments  aws_directconnect_gateway_attachments[]

  @@id([account_id, id], map: "aws_directconnect_gateways_pk")
}

model aws_directconnect_lag_mac_sec_keys {
  cq_id                  String                  @id(map: "aws_directconnect_lag_mac_sec_keys_pk") @db.Uuid
  cq_meta                Json?
  lag_cq_id              String?                 @db.Uuid
  lag_id                 String?
  ckn                    String?
  secret_arn             String?
  start_on               String?
  state                  String?
  aws_directconnect_lags aws_directconnect_lags? @relation(fields: [lag_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_directconnect_lags {
  cq_id                              String                               @unique @db.Uuid
  cq_meta                            Json?
  account_id                         String
  region                             String?
  arn                                String?
  allows_hosted_connections          Boolean?
  aws_device_v2                      String?
  connection_ids                     String[]
  connections_bandwidth              String?
  encryption_mode                    String?
  has_logical_redundancy             String?
  jumbo_frame_capable                Boolean?
  id                                 String
  name                               String?
  state                              String?
  location                           String?
  mac_sec_capable                    Boolean?
  minimum_links                      Int?
  number_of_connections              Int?
  owner_account                      String?
  provider_name                      String?
  tags                               Json?
  aws_directconnect_lag_mac_sec_keys aws_directconnect_lag_mac_sec_keys[]

  @@id([account_id, id], map: "aws_directconnect_lags_pk")
}

model aws_directconnect_virtual_gateways {
  cq_id      String  @unique @db.Uuid
  cq_meta    Json?
  account_id String
  region     String?
  id         String
  state      String?

  @@id([account_id, id], map: "aws_directconnect_virtual_gateways_pk")
}

model aws_directconnect_virtual_interface_bgp_peers {
  cq_id                                String                                @id(map: "aws_directconnect_virtual_interface_bgp_peers_pk") @db.Uuid
  cq_meta                              Json?
  virtual_interface_cq_id              String?                               @db.Uuid
  virtual_interface_id                 String?
  address_family                       String?
  amazon_address                       String?
  asn                                  Int?
  auth_key                             String?
  aws_device_v2                        String?
  bgp_peer_id                          String?
  bgp_peer_state                       String?
  bgp_status                           String?
  customer_address                     String?
  aws_directconnect_virtual_interfaces aws_directconnect_virtual_interfaces? @relation(fields: [virtual_interface_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_directconnect_virtual_interfac_virtual_interface_cq_id_fkey")
}

model aws_directconnect_virtual_interfaces {
  cq_id                                         String                                          @unique @db.Uuid
  cq_meta                                       Json?
  account_id                                    String
  arn                                           String?
  address_family                                String?
  amazon_address                                String?
  amazon_side_asn                               BigInt?
  asn                                           Int?
  auth_key                                      String?
  aws_device_v2                                 String?
  connection_id                                 String?
  customer_address                              String?
  customer_router_config                        String?
  direct_connect_gateway_id                     String?
  jumbo_frame_capable                           Boolean?
  location                                      String?
  mtu                                           Int?
  owner_account                                 String?
  region                                        String?
  route_filter_prefixes                         String[]
  tags                                          Json?
  virtual_gateway_id                            String?
  id                                            String
  virtual_interface_name                        String?
  virtual_interface_state                       String?
  virtual_interface_type                        String?
  vlan                                          Int?
  aws_directconnect_virtual_interface_bgp_peers aws_directconnect_virtual_interface_bgp_peers[]

  @@id([account_id, id], map: "aws_directconnect_virtual_interfaces_pk")
}

model aws_dms_replication_instance_replication_subnet_group_subnets {
  cq_id                         String                         @id(map: "aws_dms_replication_instance_replication_subnet_group_subnet_pk") @db.Uuid
  cq_meta                       Json?
  replication_instance_cq_id    String?                        @db.Uuid
  subnet_availability_zone_name String?
  subnet_identifier             String?
  subnet_status                 String?
  aws_dms_replication_instances aws_dms_replication_instances? @relation(fields: [replication_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_dms_replication_instance_re_replication_instance_cq_id_fkey")
}

model aws_dms_replication_instance_vpc_security_groups {
  cq_id                         String                         @id(map: "aws_dms_replication_instance_vpc_security_groups_pk") @db.Uuid
  cq_meta                       Json?
  replication_instance_cq_id    String?                        @db.Uuid
  status                        String?
  vpc_security_group_id         String?
  aws_dms_replication_instances aws_dms_replication_instances? @relation(fields: [replication_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_dms_replication_instance_vp_replication_instance_cq_id_fkey")
}

model aws_dms_replication_instances {
  cq_id                                                         String                                                          @unique @db.Uuid
  cq_meta                                                       Json?
  account_id                                                    String
  region                                                        String?
  tags                                                          Json?
  allocated_storage                                             Int?
  auto_minor_version_upgrade                                    Boolean?
  availability_zone                                             String?
  dns_name_servers                                              String?
  engine_version                                                String?
  free_until                                                    DateTime?                                                       @db.Timestamp(6)
  instance_create_time                                          DateTime?                                                       @db.Timestamp(6)
  kms_key_id                                                    String?
  multi_az                                                      Boolean?
  pending_modified_values_allocated_storage                     Int?
  pending_modified_values_engine_version                        String?
  pending_modified_values_multi_az                              Boolean?
  pending_modified_values_class                                 String?
  preferred_maintenance_window                                  String?
  publicly_accessible                                           Boolean?
  arn                                                           String
  class                                                         String?
  identifier                                                    String?
  private_ip_address                                            String?                                                         @db.Inet
  private_ip_addresses                                          String[]                                                        @db.Inet
  public_ip_address                                             String?                                                         @db.Inet
  public_ip_addresses                                           String[]                                                        @db.Inet
  status                                                        String?
  replication_subnet_group_description                          String?
  replication_subnet_group_identifier                           String?
  replication_subnet_group_subnet_group_status                  String?
  replication_subnet_group_vpc_id                               String?
  secondary_availability_zone                                   String?
  aws_dms_replication_instance_replication_subnet_group_subnets aws_dms_replication_instance_replication_subnet_group_subnets[]
  aws_dms_replication_instance_vpc_security_groups              aws_dms_replication_instance_vpc_security_groups[]

  @@id([account_id, arn], map: "aws_dms_replication_instances_pk")
}

model aws_dynamodb_table_continuous_backups {
  cq_id                         String               @id(map: "aws_dynamodb_table_continuous_backups_pk") @db.Uuid
  cq_meta                       Json?
  table_cq_id                   String?              @db.Uuid
  continuous_backups_status     String?
  earliest_restorable_date_time DateTime?            @db.Timestamp(6)
  latest_restorable_date_time   DateTime?            @db.Timestamp(6)
  point_in_time_recovery_status String?
  aws_dynamodb_tables           aws_dynamodb_tables? @relation(fields: [table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dynamodb_table_global_secondary_indexes {
  cq_id                                            String               @id(map: "aws_dynamodb_table_global_secondary_indexes_pk") @db.Uuid
  cq_meta                                          Json?
  table_cq_id                                      String?              @db.Uuid
  backfilling                                      Boolean?
  arn                                              String?
  name                                             String?
  index_size_bytes                                 BigInt?
  status                                           String?
  item_count                                       BigInt?
  key_schema                                       Json?
  projection_non_key_attributes                    String[]
  projection_type                                  String?
  provisioned_throughput_last_decrease_date_time   DateTime?            @db.Timestamp(6)
  provisioned_throughput_last_increase_date_time   DateTime?            @db.Timestamp(6)
  provisioned_throughput_number_of_decreases_today BigInt?
  provisioned_throughput_read_capacity_units       BigInt?
  provisioned_throughput_write_capacity_units      BigInt?
  aws_dynamodb_tables                              aws_dynamodb_tables? @relation(fields: [table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dynamodb_table_local_secondary_indexes {
  cq_id                         String               @id(map: "aws_dynamodb_table_local_secondary_indexes_pk") @db.Uuid
  cq_meta                       Json?
  table_cq_id                   String?              @db.Uuid
  arn                           String?
  name                          String?
  index_size_bytes              BigInt?
  item_count                    BigInt?
  key_schema                    Json?
  projection_non_key_attributes String[]
  projection_type               String?
  aws_dynamodb_tables           aws_dynamodb_tables? @relation(fields: [table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dynamodb_table_replica_auto_scalings {
  cq_id                    String               @id(map: "aws_dynamodb_table_replica_auto_scalings_pk") @db.Uuid
  cq_meta                  Json?
  table_cq_id              String?              @db.Uuid
  global_secondary_indexes Json?
  region_name              String?
  read_capacity            Json?
  write_capacity           Json?
  replica_status           String?
  aws_dynamodb_tables      aws_dynamodb_tables? @relation(fields: [table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dynamodb_table_replicas {
  cq_id                                               String               @id(map: "aws_dynamodb_table_replicas_pk") @db.Uuid
  cq_meta                                             Json?
  table_cq_id                                         String?              @db.Uuid
  global_secondary_indexes                            Json?
  kms_master_key_id                                   String?
  provisioned_throughput_override_read_capacity_units BigInt?
  region_name                                         String?
  replica_inaccessible_date_time                      DateTime?            @db.Timestamp(6)
  replica_status                                      String?
  replica_status_description                          String?
  replica_status_percent_progress                     String?
  summary_last_update_date_time                       DateTime?            @db.Timestamp(6)
  summary_table_class                                 String?
  aws_dynamodb_tables                                 aws_dynamodb_tables? @relation(fields: [table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_dynamodb_tables {
  cq_id                                            String                                        @unique @db.Uuid
  cq_meta                                          Json?
  account_id                                       String?
  region                                           String?
  tags                                             Json?
  archival_summary                                 Json?
  attribute_definitions                            Json?
  billing_mode_summary                             Json?
  creation_date_time                               DateTime?                                     @db.Timestamp(6)
  global_table_version                             String?
  item_count                                       BigInt?
  key_schema                                       Json?
  latest_stream_arn                                String?
  latest_stream_label                              String?
  provisioned_throughput_last_decrease_date_time   DateTime?                                     @db.Timestamp(6)
  provisioned_throughput_last_increase_date_time   DateTime?                                     @db.Timestamp(6)
  provisioned_throughput_number_of_decreases_today BigInt?
  provisioned_throughput_read_capacity_units       BigInt?
  provisioned_throughput_write_capacity_units      BigInt?
  restore_summary                                  Json?
  inaccessible_encryption_date_time                DateTime?                                     @db.Timestamp(6)
  kms_master_key_arn                               String?
  sse_type                                         String?
  sse_status                                       String?
  stream_specification                             Json?
  arn                                              String                                        @id(map: "aws_dynamodb_tables_pk")
  table_class_last_update                          DateTime?                                     @db.Timestamp(6)
  table_class                                      String?
  id                                               String?
  name                                             String?
  size_bytes                                       BigInt?
  status                                           String?
  aws_dynamodb_table_continuous_backups            aws_dynamodb_table_continuous_backups[]
  aws_dynamodb_table_global_secondary_indexes      aws_dynamodb_table_global_secondary_indexes[]
  aws_dynamodb_table_local_secondary_indexes       aws_dynamodb_table_local_secondary_indexes[]
  aws_dynamodb_table_replica_auto_scalings         aws_dynamodb_table_replica_auto_scalings[]
  aws_dynamodb_table_replicas                      aws_dynamodb_table_replicas[]
}

model aws_ec2_byoip_cidrs {
  cq_id          String  @unique @db.Uuid
  cq_meta        Json?
  account_id     String
  region         String
  cidr           String
  description    String?
  state          String?
  status_message String?

  @@id([account_id, region, cidr], map: "aws_ec2_byoip_cidrs_pk")
}

model aws_ec2_customer_gateways {
  cq_id           String  @unique @db.Uuid
  cq_meta         Json?
  account_id      String
  region          String?
  id              String
  bgp_asn         String?
  certificate_arn String?
  arn             String?
  device_name     String?
  ip_address      String?
  state           String?
  tags            Json?
  type            String?

  @@id([account_id, id], map: "aws_ec2_customer_gateways_pk")
}

model aws_ec2_ebs_snapshots {
  cq_id                     String    @unique @db.Uuid
  cq_meta                   Json?
  account_id                String
  region                    String?
  create_volume_permissions Json?
  data_encryption_key_id    String?
  description               String?
  encrypted                 Boolean?
  kms_key_id                String?
  outpost_arn               String?
  owner_alias               String?
  owner_id                  String?
  progress                  String?
  snapshot_id               String
  start_time                DateTime? @db.Timestamp(6)
  state                     String?
  state_message             String?
  tags                      Json?
  volume_id                 String?
  volume_size               Int?

  @@id([account_id, snapshot_id], map: "aws_ec2_ebs_snapshots_pk")
}

model aws_ec2_ebs_volume_attachments {
  cq_id                 String               @id(map: "aws_ec2_ebs_volume_attachments_pk") @db.Uuid
  cq_meta               Json?
  ebs_volume_cq_id      String?              @db.Uuid
  attach_time           DateTime?            @db.Timestamp(6)
  delete_on_termination Boolean?
  device                String?
  instance_id           String?
  state                 String?
  volume_id             String?
  aws_ec2_ebs_volumes   aws_ec2_ebs_volumes? @relation(fields: [ebs_volume_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_ebs_volumes {
  cq_id                          String                           @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String
  region                         String?
  id                             String
  arn                            String?
  availability_zone              String?
  create_time                    DateTime?                        @db.Timestamp(6)
  encrypted                      Boolean?
  fast_restored                  Boolean?
  iops                           Int?
  kms_key_id                     String?
  multi_attach_enabled           Boolean?
  outpost_arn                    String?
  size                           Int?
  snapshot_id                    String?
  state                          String?
  tags                           Json?
  throughput                     Int?
  volume_type                    String?
  aws_ec2_ebs_volume_attachments aws_ec2_ebs_volume_attachments[]

  @@id([account_id, id], map: "aws_ec2_ebs_volumes_pk")
}

model aws_ec2_egress_only_internet_gateways {
  cq_id       String  @unique @db.Uuid
  cq_meta     Json?
  account_id  String?
  region      String?
  arn         String  @id(map: "aws_ec2_egress_only_internet_gateways_pk")
  attachments Json?
  id          String?
  tags        Json?
}

model aws_ec2_eips {
  cq_id                      String  @unique @db.Uuid
  cq_meta                    Json?
  account_id                 String
  region                     String?
  allocation_id              String
  association_id             String?
  carrier_ip                 String? @db.Inet
  customer_owned_ip          String? @db.Inet
  customer_owned_ipv4_pool   String?
  domain                     String?
  instance_id                String?
  network_border_group       String?
  network_interface_id       String?
  network_interface_owner_id String?
  private_ip_address         String? @db.Inet
  public_ip                  String? @db.Inet
  public_ipv4_pool           String?
  tags                       Json?

  @@id([account_id, allocation_id], map: "aws_ec2_eips_pk")
}

model aws_ec2_flow_logs {
  cq_id                       String    @unique @db.Uuid
  cq_meta                     Json?
  account_id                  String
  region                      String?
  arn                         String?
  id                          String
  creation_time               DateTime? @db.Timestamp(6)
  deliver_logs_error_message  String?
  deliver_logs_permission_arn String?
  deliver_logs_status         String?
  flow_log_id                 String?
  flow_log_status             String?
  log_destination             String?
  log_destination_type        String?
  log_format                  String?
  log_group_name              String?
  max_aggregation_interval    Int?
  resource_id                 String?
  tags                        Json?
  traffic_type                String?

  @@id([account_id, id], map: "aws_ec2_flow_logs_pk")
}

model aws_ec2_host_available_instance_capacity {
  cq_id              String         @id(map: "aws_ec2_host_available_instance_capacity_pk") @db.Uuid
  cq_meta            Json?
  host_cq_id         String?        @db.Uuid
  available_capacity Int?
  instance_type      String?
  total_capacity     Int?
  aws_ec2_hosts      aws_ec2_hosts? @relation(fields: [host_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_host_instances {
  cq_id         String         @id(map: "aws_ec2_host_instances_pk") @db.Uuid
  cq_meta       Json?
  host_cq_id    String?        @db.Uuid
  instance_id   String?
  instance_type String?
  owner_id      String?
  aws_ec2_hosts aws_ec2_hosts? @relation(fields: [host_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_hosts {
  cq_id                                    String                                     @unique @db.Uuid
  cq_meta                                  Json?
  account_id                               String?
  region                                   String?
  arn                                      String                                     @id(map: "aws_ec2_hosts_pk")
  allocation_time                          DateTime?                                  @db.Timestamp(6)
  allows_multiple_instance_types           String?
  auto_placement                           String?
  availability_zone                        String?
  availability_zone_id                     String?
  available_vcpus                          Int?
  client_token                             String?
  id                                       String?
  cores                                    Int?
  instance_family                          String?
  instance_type                            String?
  sockets                                  Int?
  total_vcpus                              Int?
  host_recovery                            String?
  reservation_id                           String?
  member_of_service_linked_resource_group  Boolean?
  owner_id                                 String?
  release_time                             DateTime?                                  @db.Timestamp(6)
  state                                    String?
  tags                                     Json?
  aws_ec2_host_available_instance_capacity aws_ec2_host_available_instance_capacity[]
  aws_ec2_host_instances                   aws_ec2_host_instances[]
}

model aws_ec2_image_block_device_mappings {
  cq_id                     String          @id(map: "aws_ec2_image_block_device_mappings_pk") @db.Uuid
  cq_meta                   Json?
  image_cq_id               String?         @db.Uuid
  device_name               String?
  ebs_delete_on_termination Boolean?
  ebs_encrypted             Boolean?
  ebs_iops                  Int?
  ebs_kms_key_id            String?
  ebs_outpost_arn           String?
  ebs_snapshot_id           String?
  ebs_throughput            Int?
  ebs_volume_size           Int?
  ebs_volume_type           String?
  no_device                 String?
  virtual_name              String?
  aws_ec2_images            aws_ec2_images? @relation(fields: [image_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_images {
  cq_id                               String                                @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String
  region                              String?
  arn                                 String?
  id                                  String
  architecture                        String?
  creation_date                       DateTime?                             @db.Timestamp(6)
  description                         String?
  ena_support                         Boolean?
  hypervisor                          String?
  image_location                      String?
  image_owner_alias                   String?
  image_type                          String?
  kernel_id                           String?
  name                                String?
  owner_id                            String?
  platform                            String?
  platform_details                    String?
  product_codes                       Json?
  public                              Boolean?
  ramdisk_id                          String?
  root_device_name                    String?
  root_device_type                    String?
  sriov_net_support                   String?
  state                               String?
  state_reason_code                   String?
  state_reason_message                String?
  tags                                Json?
  usage_operation                     String?
  virtualization_type                 String?
  last_launched_time                  DateTime?                             @db.Timestamp(6)
  aws_ec2_image_block_device_mappings aws_ec2_image_block_device_mappings[]

  @@id([account_id, id], map: "aws_ec2_images_pk")
}

model aws_ec2_instance_block_device_mappings {
  cq_id                     String             @id(map: "aws_ec2_instance_block_device_mappings_pk") @db.Uuid
  cq_meta                   Json?
  instance_cq_id            String?            @db.Uuid
  device_name               String?
  ebs_attach_time           DateTime?          @db.Timestamp(6)
  ebs_delete_on_termination Boolean?
  ebs_status                String?
  ebs_volume_id             String?
  aws_ec2_instances         aws_ec2_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_instance_elastic_gpu_associations {
  cq_id                         String             @id(map: "aws_ec2_instance_elastic_gpu_associations_pk") @db.Uuid
  cq_meta                       Json?
  instance_cq_id                String?            @db.Uuid
  elastic_gpu_association_id    String?
  elastic_gpu_association_state String?
  elastic_gpu_association_time  DateTime?          @db.Timestamp(6)
  elastic_gpu_id                String?
  aws_ec2_instances             aws_ec2_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_instance_elastic_inference_accelerator_associations {
  cq_id                                           String             @id(map: "aws_ec2_instance_elastic_inference_accelerator_associations_pk") @db.Uuid
  cq_meta                                         Json?
  instance_cq_id                                  String?            @db.Uuid
  elastic_inference_accelerator_arn               String?
  elastic_inference_accelerator_association_id    String?
  elastic_inference_accelerator_association_state String?
  elastic_inference_accelerator_association_time  DateTime?          @db.Timestamp(6)
  aws_ec2_instances                               aws_ec2_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_instance_elastic_inference_accelera_instance_cq_id_fkey")
}

model aws_ec2_instance_network_interface_groups {
  cq_id                               String                               @id(map: "aws_ec2_instance_network_interface_groups_pk") @db.Uuid
  cq_meta                             Json?
  instance_network_interface_cq_id    String?                              @db.Uuid
  network_interface_id                String?
  group_id                            String?
  group_name                          String?
  aws_ec2_instance_network_interfaces aws_ec2_instance_network_interfaces? @relation(fields: [instance_network_interface_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_instance_network_inte_instance_network_interface_c_fkey")
}

model aws_ec2_instance_network_interface_ipv6_addresses {
  cq_id                               String                               @id(map: "aws_ec2_instance_network_interface_ipv6_addresses_pk") @db.Uuid
  cq_meta                             Json?
  instance_network_interface_cq_id    String?                              @db.Uuid
  ipv6_address                        String?
  aws_ec2_instance_network_interfaces aws_ec2_instance_network_interfaces? @relation(fields: [instance_network_interface_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_instance_network_int_instance_network_interface_c_fkey1")
}

model aws_ec2_instance_network_interface_private_ip_addresses {
  cq_id                               String                               @id(map: "aws_ec2_instance_network_interface_private_ip_addresses_pk") @db.Uuid
  cq_meta                             Json?
  instance_network_interface_cq_id    String?                              @db.Uuid
  association_carrier_ip              String?
  association_ip_owner_id             String?
  association_public_dns_name         String?
  association_public_ip               String?
  is_primary                          Boolean?
  private_dns_name                    String?
  private_ip_address                  String?
  aws_ec2_instance_network_interfaces aws_ec2_instance_network_interfaces? @relation(fields: [instance_network_interface_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_instance_network_int_instance_network_interface_c_fkey2")
}

model aws_ec2_instance_network_interfaces {
  cq_id                                                   String                                                    @id(map: "aws_ec2_instance_network_interfaces_pk") @db.Uuid
  cq_meta                                                 Json?
  instance_cq_id                                          String?                                                   @db.Uuid
  arn                                                     String?
  association_carrier_ip                                  String?
  association_ip_owner_id                                 String?
  association_public_dns_name                             String?
  association_public_ip                                   String?
  attachment_attach_time                                  DateTime?                                                 @db.Timestamp(6)
  attachment_id                                           String?
  attachment_delete_on_termination                        Boolean?
  attachment_device_index                                 Int?
  attachment_network_card_index                           Int?
  attachment_status                                       String?
  description                                             String?
  interface_type                                          String?
  ipv4_prefixes                                           String[]
  ipv6_prefixes                                           String[]
  mac_address                                             String?
  network_interface_id                                    String?
  owner_id                                                String?
  private_dns_name                                        String?
  private_ip_address                                      String?
  source_dest_check                                       Boolean?
  status                                                  String?
  subnet_id                                               String?
  vpc_id                                                  String?
  aws_ec2_instances                                       aws_ec2_instances?                                        @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ec2_instance_network_interface_groups               aws_ec2_instance_network_interface_groups[]
  aws_ec2_instance_network_interface_ipv6_addresses       aws_ec2_instance_network_interface_ipv6_addresses[]
  aws_ec2_instance_network_interface_private_ip_addresses aws_ec2_instance_network_interface_private_ip_addresses[]
}

model aws_ec2_instance_product_codes {
  cq_id             String             @id(map: "aws_ec2_instance_product_codes_pk") @db.Uuid
  cq_meta           Json?
  instance_cq_id    String?            @db.Uuid
  product_code_id   String?
  product_code_type String?
  aws_ec2_instances aws_ec2_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_instance_security_groups {
  cq_id             String             @id(map: "aws_ec2_instance_security_groups_pk") @db.Uuid
  cq_meta           Json?
  instance_cq_id    String?            @db.Uuid
  group_id          String?
  group_name        String?
  aws_ec2_instances aws_ec2_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_instance_status_events {
  cq_id                     String                     @id(map: "aws_ec2_instance_status_events_pk") @db.Uuid
  cq_meta                   Json?
  instance_status_cq_id     String?                    @db.Uuid
  code                      String?
  description               String?
  id                        String?
  not_after                 DateTime?                  @db.Timestamp(6)
  not_before                DateTime?                  @db.Timestamp(6)
  not_before_deadline       DateTime?                  @db.Timestamp(6)
  aws_ec2_instance_statuses aws_ec2_instance_statuses? @relation(fields: [instance_status_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_instance_statuses {
  cq_id                          String                           @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String?
  region                         String?
  arn                            String                           @id(map: "aws_ec2_instance_statuses_pk")
  availability_zone              String?
  instance_id                    String?
  instance_state_code            Int?
  instance_state_name            String?
  details                        Json?
  status                         String?
  outpost_arn                    String?
  system_status                  String?
  system_status_details          Json?
  aws_ec2_instance_status_events aws_ec2_instance_status_events[]
}

model aws_ec2_instances {
  cq_id                                                       String                                                        @unique @db.Uuid
  cq_meta                                                     Json?
  account_id                                                  String
  region                                                      String?
  arn                                                         String?
  state_transition_reason_time                                DateTime?                                                     @db.Timestamp(6)
  ami_launch_index                                            Int?
  architecture                                                String?
  boot_mode                                                   String?
  capacity_reservation_id                                     String?
  cap_reservation_preference                                  String?
  cap_reservation_target_capacity_reservation_id              String?
  cap_reservation_target_capacity_reservation_rg_arn          String?
  client_token                                                String?
  cpu_options_core_count                                      Int?
  cpu_options_threads_per_core                                Int?
  ebs_optimized                                               Boolean?
  ena_support                                                 Boolean?
  enclave_options_enabled                                     Boolean?
  hibernation_options_configured                              Boolean?
  hypervisor                                                  String?
  iam_instance_profile_arn                                    String?
  iam_instance_profile_id                                     String?
  image_id                                                    String?
  id                                                          String
  instance_lifecycle                                          String?
  instance_type                                               String?
  kernel_id                                                   String?
  key_name                                                    String?
  launch_time                                                 DateTime?                                                     @db.Timestamp(6)
  licenses                                                    String[]
  metadata_options_http_endpoint                              String?
  metadata_options_http_protocol_ipv6                         String?
  metadata_options_http_put_response_hop_limit                Int?
  metadata_options_http_tokens                                String?
  metadata_options_state                                      String?
  monitoring_state                                            String?
  outpost_arn                                                 String?
  placement_affinity                                          String?
  placement_availability_zone                                 String?
  placement_group_name                                        String?
  placement_host_id                                           String?
  placement_host_resource_group_arn                           String?
  placement_partition_number                                  Int?
  placement_spread_domain                                     String?
  placement_tenancy                                           String?
  platform                                                    String?
  private_dns_name                                            String?
  private_ip_address                                          String?
  public_dns_name                                             String?
  public_ip_address                                           String?
  ramdisk_id                                                  String?
  root_device_name                                            String?
  root_device_type                                            String?
  source_dest_check                                           Boolean?
  spot_instance_request_id                                    String?
  sriov_net_support                                           String?
  state_code                                                  Int?
  state_name                                                  String?
  state_reason_code                                           String?
  state_reason_message                                        String?
  state_transition_reason                                     String?
  subnet_id                                                   String?
  tags                                                        Json?
  virtualization_type                                         String?
  vpc_id                                                      String?
  aws_ec2_instance_block_device_mappings                      aws_ec2_instance_block_device_mappings[]
  aws_ec2_instance_elastic_gpu_associations                   aws_ec2_instance_elastic_gpu_associations[]
  aws_ec2_instance_elastic_inference_accelerator_associations aws_ec2_instance_elastic_inference_accelerator_associations[]
  aws_ec2_instance_network_interfaces                         aws_ec2_instance_network_interfaces[]
  aws_ec2_instance_product_codes                              aws_ec2_instance_product_codes[]
  aws_ec2_instance_security_groups                            aws_ec2_instance_security_groups[]

  @@id([account_id, id], map: "aws_ec2_instances_pk")
}

model aws_ec2_internet_gateway_attachments {
  cq_id                     String                     @id(map: "aws_ec2_internet_gateway_attachments_pk") @db.Uuid
  cq_meta                   Json?
  internet_gateway_cq_id    String?                    @db.Uuid
  state                     String?
  vpc_id                    String?
  aws_ec2_internet_gateways aws_ec2_internet_gateways? @relation(fields: [internet_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_internet_gateway_attachment_internet_gateway_cq_id_fkey")
}

model aws_ec2_internet_gateways {
  cq_id                                String                                 @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  arn                                  String?
  id                                   String
  owner_id                             String?
  tags                                 Json?
  aws_ec2_internet_gateway_attachments aws_ec2_internet_gateway_attachments[]

  @@id([account_id, id], map: "aws_ec2_internet_gateways_pk")
}

model aws_ec2_nat_gateway_addresses {
  cq_id                String                @id(map: "aws_ec2_nat_gateway_addresses_pk") @db.Uuid
  cq_meta              Json?
  nat_gateway_cq_id    String?               @db.Uuid
  allocation_id        String?
  network_interface_id String?
  private_ip           String?
  public_ip            String?
  aws_ec2_nat_gateways aws_ec2_nat_gateways? @relation(fields: [nat_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_nat_gateways {
  cq_id                                String                          @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  arn                                  String?
  id                                   String
  create_time                          DateTime?                       @db.Timestamp(6)
  delete_time                          DateTime?                       @db.Timestamp(6)
  failure_code                         String?
  failure_message                      String?
  provisioned_bandwidth_provision_time DateTime?                       @db.Timestamp(6)
  provisioned_bandwidth_provisioned    String?
  provisioned_bandwidth_request_time   DateTime?                       @db.Timestamp(6)
  provisioned_bandwidth_requested      String?
  provisioned_bandwidth_status         String?
  state                                String?
  subnet_id                            String?
  tags                                 Json?
  vpc_id                               String?
  aws_ec2_nat_gateway_addresses        aws_ec2_nat_gateway_addresses[]

  @@id([account_id, id], map: "aws_ec2_nat_gateways_pk")
}

model aws_ec2_network_acl_associations {
  cq_id                      String                @id(map: "aws_ec2_network_acl_associations_pk") @db.Uuid
  cq_meta                    Json?
  network_acl_cq_id          String?               @db.Uuid
  network_acl_association_id String?
  subnet_id                  String?
  aws_ec2_network_acls       aws_ec2_network_acls? @relation(fields: [network_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_network_acl_entries {
  cq_id                String                @id(map: "aws_ec2_network_acl_entries_pk") @db.Uuid
  cq_meta              Json?
  network_acl_cq_id    String?               @db.Uuid
  cidr_block           String?
  egress               Boolean?
  icmp_type_code       Int?
  icmp_type_code_type  Int?
  ipv6_cidr_block      String?
  port_range_from      Int?
  port_range_to        Int?
  protocol             String?
  rule_action          String?
  rule_number          Int?
  aws_ec2_network_acls aws_ec2_network_acls? @relation(fields: [network_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_network_acls {
  cq_id                            String                             @unique @db.Uuid
  cq_meta                          Json?
  account_id                       String
  region                           String?
  arn                              String?
  is_default                       Boolean?
  id                               String
  owner_id                         String?
  tags                             Json?
  vpc_id                           String?
  aws_ec2_network_acl_associations aws_ec2_network_acl_associations[]
  aws_ec2_network_acl_entries      aws_ec2_network_acl_entries[]

  @@id([account_id, id], map: "aws_ec2_network_acls_pk")
}

model aws_ec2_network_interface_private_ip_addresses {
  cq_id                         String                      @id(map: "aws_ec2_network_interface_private_ip_addresses_pk") @db.Uuid
  cq_meta                       Json?
  network_interface_cq_id       String?                     @db.Uuid
  association_allocation_id     String?
  association_id                String?
  association_carrier_ip        String?
  association_customer_owned_ip String?
  association_ip_owner_id       String?
  association_public_dns_name   String?
  association_public_ip         String?
  primary                       Boolean?
  private_dns_name              String?
  private_ip_address            String?
  aws_ec2_network_interfaces    aws_ec2_network_interfaces? @relation(fields: [network_interface_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_network_interface_private__network_interface_cq_id_fkey")
}

model aws_ec2_network_interfaces {
  cq_id                                          String                                           @unique @db.Uuid
  cq_meta                                        Json?
  account_id                                     String?
  region                                         String?
  arn                                            String                                           @id(map: "aws_ec2_network_interfaces_pk")
  tags                                           Json?
  association_allocation_id                      String?
  association_id                                 String?
  association_carrier_ip                         String?
  association_customer_owned_ip                  String?
  association_ip_owner_id                        String?
  association_public_dns_name                    String?
  association_public_ip                          String?
  attachment_attach_time                         DateTime?                                        @db.Timestamp(6)
  attachment_id                                  String?
  attachment_delete_on_termination               Boolean?
  attachment_device_index                        Int?
  attachment_instance_id                         String?
  attachment_instance_owner_id                   String?
  attachment_network_card_index                  Int?
  attachment_status                              String?
  availability_zone                              String?
  deny_all_igw_traffic                           Boolean?
  description                                    String?
  groups                                         Json?
  interface_type                                 String?
  ipv4_prefixes                                  String[]
  ipv6_address                                   String?
  ipv6_addresses                                 String[]
  ipv6_native                                    Boolean?
  ipv6_prefixes                                  String[]
  mac_address                                    String?
  id                                             String?
  outpost_arn                                    String?
  owner_id                                       String?
  private_dns_name                               String?
  private_ip_address                             String?
  requester_id                                   String?
  requester_managed                              Boolean?
  source_dest_check                              Boolean?
  status                                         String?
  subnet_id                                      String?
  vpc_id                                         String?
  aws_ec2_network_interface_private_ip_addresses aws_ec2_network_interface_private_ip_addresses[]
}

model aws_ec2_regional_config {
  cq_id                             String   @unique @db.Uuid
  cq_meta                           Json?
  account_id                        String
  region                            String
  ebs_encryption_enabled_by_default Boolean?
  ebs_default_kms_key_id            String?

  @@id([account_id, region], map: "aws_ec2_regional_config_pk")
}

model aws_ec2_route_table_associations {
  cq_id                            String                @id(map: "aws_ec2_route_table_associations_pk") @db.Uuid
  cq_meta                          Json?
  route_table_cq_id                String?               @db.Uuid
  id                               String?
  association_state                String?
  association_state_status_message String?
  gateway_id                       String?
  main                             Boolean?
  subnet_id                        String?
  aws_ec2_route_tables             aws_ec2_route_tables? @relation(fields: [route_table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_route_table_propagating_vgws {
  cq_id                String                @id(map: "aws_ec2_route_table_propagating_vgws_pk") @db.Uuid
  cq_meta              Json?
  route_table_cq_id    String?               @db.Uuid
  gateway_id           String?
  aws_ec2_route_tables aws_ec2_route_tables? @relation(fields: [route_table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_route_table_routes {
  cq_id                           String                @id(map: "aws_ec2_route_table_routes_pk") @db.Uuid
  cq_meta                         Json?
  route_table_cq_id               String?               @db.Uuid
  carrier_gateway_id              String?
  destination_cidr_block          String?
  destination_ipv6_cidr_block     String?
  destination_prefix_list_id      String?
  egress_only_internet_gateway_id String?
  gateway_id                      String?
  instance_id                     String?
  instance_owner_id               String?
  local_gateway_id                String?
  nat_gateway_id                  String?
  network_interface_id            String?
  origin                          String?
  state                           String?
  transit_gateway_id              String?
  vpc_peering_connection_id       String?
  aws_ec2_route_tables            aws_ec2_route_tables? @relation(fields: [route_table_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_route_tables {
  cq_id                                String                                 @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  arn                                  String?
  owner_id                             String?
  id                                   String
  tags                                 Json?
  vpc_id                               String?
  aws_ec2_route_table_associations     aws_ec2_route_table_associations[]
  aws_ec2_route_table_propagating_vgws aws_ec2_route_table_propagating_vgws[]
  aws_ec2_route_table_routes           aws_ec2_route_table_routes[]

  @@id([account_id, id], map: "aws_ec2_route_tables_pk")
}

model aws_ec2_security_group_ip_permission_ip_ranges {
  cq_id                                 String                                 @id(map: "aws_ec2_security_group_ip_permission_ip_ranges_pk") @db.Uuid
  cq_meta                               Json?
  security_group_ip_permission_cq_id    String?                                @db.Uuid
  cidr                                  String?
  description                           String?
  cidr_type                             String?
  aws_ec2_security_group_ip_permissions aws_ec2_security_group_ip_permissions? @relation(fields: [security_group_ip_permission_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_security_group_ip_per_security_group_ip_permission_fkey")
}

model aws_ec2_security_group_ip_permission_prefix_list_ids {
  cq_id                                 String                                 @id(map: "aws_ec2_security_group_ip_permission_prefix_list_ids_pk") @db.Uuid
  cq_meta                               Json?
  security_group_ip_permission_cq_id    String?                                @db.Uuid
  description                           String?
  prefix_list_id                        String?
  aws_ec2_security_group_ip_permissions aws_ec2_security_group_ip_permissions? @relation(fields: [security_group_ip_permission_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_security_group_ip_pe_security_group_ip_permission_fkey1")
}

model aws_ec2_security_group_ip_permission_user_id_group_pairs {
  cq_id                                 String                                 @id(map: "aws_ec2_security_group_ip_permission_user_id_group_pairs_pk") @db.Uuid
  cq_meta                               Json?
  security_group_ip_permission_cq_id    String?                                @db.Uuid
  description                           String?
  group_id                              String?
  group_name                            String?
  peering_status                        String?
  user_id                               String?
  vpc_id                                String?
  vpc_peering_connection_id             String?
  aws_ec2_security_group_ip_permissions aws_ec2_security_group_ip_permissions? @relation(fields: [security_group_ip_permission_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_security_group_ip_pe_security_group_ip_permission_fkey2")
}

model aws_ec2_security_group_ip_permissions {
  cq_id                                                    String                                                     @id(map: "aws_ec2_security_group_ip_permissions_pk") @db.Uuid
  cq_meta                                                  Json?
  security_group_cq_id                                     String?                                                    @db.Uuid
  from_port                                                Int?
  ip_protocol                                              String?
  to_port                                                  Int?
  permission_type                                          String?
  aws_ec2_security_groups                                  aws_ec2_security_groups?                                   @relation(fields: [security_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ec2_security_group_ip_permission_ip_ranges           aws_ec2_security_group_ip_permission_ip_ranges[]
  aws_ec2_security_group_ip_permission_prefix_list_ids     aws_ec2_security_group_ip_permission_prefix_list_ids[]
  aws_ec2_security_group_ip_permission_user_id_group_pairs aws_ec2_security_group_ip_permission_user_id_group_pairs[]
}

model aws_ec2_security_groups {
  cq_id                                 String                                  @unique @db.Uuid
  cq_meta                               Json?
  account_id                            String
  region                                String?
  arn                                   String?
  description                           String?
  id                                    String
  group_name                            String?
  owner_id                              String?
  tags                                  Json?
  vpc_id                                String?
  aws_ec2_security_group_ip_permissions aws_ec2_security_group_ip_permissions[]

  @@id([account_id, id], map: "aws_ec2_security_groups_pk")
}

model aws_ec2_subnet_ipv6_cidr_block_association_sets {
  cq_id                                String           @id(map: "aws_ec2_subnet_ipv6_cidr_block_association_sets_pk") @db.Uuid
  cq_meta                              Json?
  subnet_cq_id                         String?          @db.Uuid
  association_id                       String?
  ipv6_cidr_block                      String?
  ipv6_cidr_block_state                String?
  ipv6_cidr_block_state_status_message String?
  aws_ec2_subnets                      aws_ec2_subnets? @relation(fields: [subnet_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_subnet_ipv6_cidr_block_association_se_subnet_cq_id_fkey")
}

model aws_ec2_subnets {
  cq_id                                           String                                            @unique @db.Uuid
  cq_meta                                         Json?
  account_id                                      String
  region                                          String?
  assign_ipv6_address_on_creation                 Boolean?
  availability_zone                               String?
  availability_zone_id                            String?
  available_ip_address_count                      Int?
  cidr_block                                      String?
  customer_owned_ipv4_pool                        String?
  default_for_az                                  Boolean?
  map_customer_owned_ip_on_launch                 Boolean?
  map_public_ip_on_launch                         Boolean?
  outpost_arn                                     String?
  owner_id                                        String?
  state                                           String?
  arn                                             String?
  id                                              String
  tags                                            Json?
  vpc_id                                          String?
  aws_ec2_subnet_ipv6_cidr_block_association_sets aws_ec2_subnet_ipv6_cidr_block_association_sets[]

  @@id([account_id, id], map: "aws_ec2_subnets_pk")
}

model aws_ec2_transit_gateway_attachments {
  cq_id                      String                    @id(map: "aws_ec2_transit_gateway_attachments_pk") @db.Uuid
  cq_meta                    Json?
  transit_gateway_cq_id      String?                   @db.Uuid
  association_state          String?
  association_route_table_id String?
  creation_time              DateTime?                 @db.Timestamp(6)
  resource_id                String?
  resource_owner_id          String?
  resource_type              String?
  state                      String?
  tags                       Json?
  transit_gateway_owner_id   String?
  aws_ec2_transit_gateways   aws_ec2_transit_gateways? @relation(fields: [transit_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_transit_gateway_multicast_domains {
  cq_id                                String                    @id(map: "aws_ec2_transit_gateway_multicast_domains_pk") @db.Uuid
  cq_meta                              Json?
  transit_gateway_cq_id                String?                   @db.Uuid
  creation_time                        DateTime?                 @db.Timestamp(6)
  auto_accept_shared_associations      String?
  igmpv2_support                       String?
  static_sources_support               String?
  owner_id                             String?
  state                                String?
  tags                                 Json?
  transit_gateway_multicast_domain_arn String?
  transit_gateway_multicast_domain_id  String?
  aws_ec2_transit_gateways             aws_ec2_transit_gateways? @relation(fields: [transit_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_transit_gateway_multicast_do_transit_gateway_cq_id_fkey")
}

model aws_ec2_transit_gateway_peering_attachments {
  cq_id                         String                    @id(map: "aws_ec2_transit_gateway_peering_attachments_pk") @db.Uuid
  cq_meta                       Json?
  transit_gateway_cq_id         String?                   @db.Uuid
  accepter_owner_id             String?
  accepter_region               String?
  accepter_transit_gateway_id   String?
  creation_time                 DateTime?                 @db.Timestamp(6)
  requester_owner_id            String?
  requester_region              String?
  requester_transit_gateway_id  String?
  state                         String?
  status_code                   String?
  status_message                String?
  tags                          Json?
  transit_gateway_attachment_id String?
  aws_ec2_transit_gateways      aws_ec2_transit_gateways? @relation(fields: [transit_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_transit_gateway_peering_atta_transit_gateway_cq_id_fkey")
}

model aws_ec2_transit_gateway_route_tables {
  cq_id                           String                    @id(map: "aws_ec2_transit_gateway_route_tables_pk") @db.Uuid
  cq_meta                         Json?
  transit_gateway_cq_id           String?                   @db.Uuid
  creation_time                   DateTime?                 @db.Timestamp(6)
  default_association_route_table Boolean?
  default_propagation_route_table Boolean?
  state                           String?
  tags                            Json?
  transit_gateway_route_table_id  String?
  aws_ec2_transit_gateways        aws_ec2_transit_gateways? @relation(fields: [transit_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_transit_gateway_vpc_attachments {
  cq_id                         String                    @id(map: "aws_ec2_transit_gateway_vpc_attachments_pk") @db.Uuid
  cq_meta                       Json?
  transit_gateway_cq_id         String?                   @db.Uuid
  creation_time                 DateTime?                 @db.Timestamp(6)
  appliance_mode_support        String?
  dns_support                   String?
  ipv6_support                  String?
  state                         String?
  tags                          Json?
  transit_gateway_attachment_id String?
  vpc_id                        String?
  vpc_owner_id                  String?
  aws_ec2_transit_gateways      aws_ec2_transit_gateways? @relation(fields: [transit_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ec2_transit_gateway_vpc_attachme_transit_gateway_cq_id_fkey")
}

model aws_ec2_transit_gateways {
  cq_id                                       String                                        @unique @db.Uuid
  cq_meta                                     Json?
  account_id                                  String
  region                                      String?
  amazon_side_asn                             BigInt?
  association_default_route_table_id          String?
  auto_accept_shared_attachments              String?
  creation_time                               DateTime?                                     @db.Timestamp(6)
  default_route_table_association             String?
  default_route_table_propagation             String?
  description                                 String?
  dns_support                                 String?
  multicast_support                           String?
  owner_id                                    String?
  propagation_default_route_table_id          String?
  state                                       String?
  tags                                        Json?
  arn                                         String?
  transit_gateway_cidr_blocks                 String[]
  id                                          String
  vpn_ecmp_support                            String?
  aws_ec2_transit_gateway_attachments         aws_ec2_transit_gateway_attachments[]
  aws_ec2_transit_gateway_multicast_domains   aws_ec2_transit_gateway_multicast_domains[]
  aws_ec2_transit_gateway_peering_attachments aws_ec2_transit_gateway_peering_attachments[]
  aws_ec2_transit_gateway_route_tables        aws_ec2_transit_gateway_route_tables[]
  aws_ec2_transit_gateway_vpc_attachments     aws_ec2_transit_gateway_vpc_attachments[]

  @@id([account_id, id], map: "aws_ec2_transit_gateways_pk")
}

model aws_ec2_vpc_attachment {
  cq_id                String                @id(map: "aws_ec2_vpc_attachment_pk") @db.Uuid
  cq_meta              Json?
  vpn_gateway_cq_id    String?               @db.Uuid
  state                String?
  vpc_id               String?
  aws_ec2_vpn_gateways aws_ec2_vpn_gateways? @relation(fields: [vpn_gateway_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_vpc_cidr_block_association_sets {
  cq_id                           String        @id(map: "aws_ec2_vpc_cidr_block_association_sets_pk") @db.Uuid
  cq_meta                         Json?
  vpc_cq_id                       String?       @db.Uuid
  association_id                  String?
  cidr_block                      String?
  cidr_block_state                String?
  cidr_block_state_status_message String?
  aws_ec2_vpcs                    aws_ec2_vpcs? @relation(fields: [vpc_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_vpc_endpoint_dns_entries {
  cq_id                 String                 @id(map: "aws_ec2_vpc_endpoint_dns_entries_pk") @db.Uuid
  cq_meta               Json?
  vpc_endpoint_cq_id    String?                @db.Uuid
  dns_name              String?
  hosted_zone_id        String?
  aws_ec2_vpc_endpoints aws_ec2_vpc_endpoints? @relation(fields: [vpc_endpoint_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_vpc_endpoint_groups {
  cq_id                 String                 @id(map: "aws_ec2_vpc_endpoint_groups_pk") @db.Uuid
  cq_meta               Json?
  vpc_endpoint_cq_id    String?                @db.Uuid
  group_id              String?
  group_name            String?
  aws_ec2_vpc_endpoints aws_ec2_vpc_endpoints? @relation(fields: [vpc_endpoint_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_vpc_endpoints {
  cq_id                            String                             @unique @db.Uuid
  cq_meta                          Json?
  account_id                       String
  region                           String?
  arn                              String?
  creation_timestamp               DateTime?                          @db.Timestamp(6)
  last_error_code                  String?
  last_error_message               String?
  network_interface_ids            String[]
  owner_id                         String?
  policy_document                  String?
  private_dns_enabled              Boolean?
  requester_managed                Boolean?
  route_table_ids                  String[]
  service_name                     String?
  state                            String?
  subnet_ids                       String[]
  tags                             Json?
  id                               String
  vpc_endpoint_type                String?
  vpc_id                           String?
  aws_ec2_vpc_endpoint_dns_entries aws_ec2_vpc_endpoint_dns_entries[]
  aws_ec2_vpc_endpoint_groups      aws_ec2_vpc_endpoint_groups[]

  @@id([account_id, id], map: "aws_ec2_vpc_endpoints_pk")
}

model aws_ec2_vpc_ipv6_cidr_block_association_sets {
  cq_id                                String        @id(map: "aws_ec2_vpc_ipv6_cidr_block_association_sets_pk") @db.Uuid
  cq_meta                              Json?
  vpc_cq_id                            String?       @db.Uuid
  association_id                       String?
  ipv6_cidr_block                      String?
  ipv6_cidr_block_state                String?
  ipv6_cidr_block_state_status_message String?
  ipv6_pool                            String?
  network_border_group                 String?
  aws_ec2_vpcs                         aws_ec2_vpcs? @relation(fields: [vpc_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ec2_vpc_peering_connections {
  cq_id                                                   String    @unique @db.Uuid
  cq_meta                                                 Json?
  account_id                                              String
  region                                                  String
  arn                                                     String?
  accepter_cidr_block                                     String?
  accepter_cidr_block_set                                 String[]
  accepter_ipv6_cidr_block_set                            String[]
  accepter_owner_id                                       String?
  accepter_allow_dns_resolution_from_remote_vpc           Boolean?
  accepter_allow_egress_local_classic_link_to_remote_vpc  Boolean?
  accepter_allow_egress_local_vpc_to_remote_classic_link  Boolean?
  accepter_vpc_region                                     String?
  accepter_vpc_id                                         String?
  expiration_time                                         DateTime? @db.Timestamp(6)
  requester_cidr_block                                    String?
  requester_cidr_block_set                                String[]
  requester_ipv6_cidr_block_set                           String[]
  requester_owner_id                                      String?
  requester_allow_dns_resolution_from_remote_vpc          Boolean?
  requester_allow_egress_local_classic_link_to_remote_vpc Boolean?
  requester_allow_egress_local_vpc_to_remote_classic_link Boolean?
  requester_vpc_region                                    String?
  requester_vpc_id                                        String?
  status_code                                             String?
  status_message                                          String?
  tags                                                    Json?
  id                                                      String

  @@id([account_id, region, id], map: "aws_ec2_vpc_peering_connections_pk")
}

model aws_ec2_vpcs {
  cq_id                                        String                                         @unique @db.Uuid
  cq_meta                                      Json?
  account_id                                   String
  region                                       String?
  arn                                          String?
  cidr_block                                   String?
  dhcp_options_id                              String?
  instance_tenancy                             String?
  is_default                                   Boolean?
  owner_id                                     String?
  state                                        String?
  tags                                         Json?
  id                                           String
  aws_ec2_vpc_cidr_block_association_sets      aws_ec2_vpc_cidr_block_association_sets[]
  aws_ec2_vpc_ipv6_cidr_block_association_sets aws_ec2_vpc_ipv6_cidr_block_association_sets[]

  @@id([account_id, id], map: "aws_ec2_vpcs_pk")
}

model aws_ec2_vpn_gateways {
  cq_id                  String                   @unique @db.Uuid
  cq_meta                Json?
  account_id             String
  region                 String?
  arn                    String?
  amazon_side_asn        BigInt?
  availability_zone      String?
  state                  String?
  tags                   Json?
  type                   String?
  id                     String
  aws_ec2_vpc_attachment aws_ec2_vpc_attachment[]

  @@id([account_id, id], map: "aws_ec2_vpn_gateways_pk")
}

model aws_ecr_repositories {
  cq_id                                     String                      @unique @db.Uuid
  cq_meta                                   Json?
  account_id                                String
  region                                    String?
  created_at                                DateTime?                   @db.Timestamp(6)
  encryption_configuration_encryption_type  String?
  encryption_configuration_kms_key          String?
  image_scanning_configuration_scan_on_push Boolean?
  image_tag_mutability                      String?
  registry_id                               String?
  arn                                       String
  name                                      String?
  uri                                       String?
  aws_ecr_repository_images                 aws_ecr_repository_images[]

  @@id([account_id, arn], map: "aws_ecr_repositories_pk")
}

model aws_ecr_repository_images {
  cq_id                                                       String                @id(map: "aws_ecr_repository_images_pk") @db.Uuid
  cq_meta                                                     Json?
  repository_cq_id                                            String?               @db.Uuid
  account_id                                                  String?
  region                                                      String?
  artifact_media_type                                         String?
  image_digest                                                String?
  image_manifest_media_type                                   String?
  image_pushed_at                                             DateTime?             @db.Timestamp(6)
  image_scan_findings_summary_finding_severity_counts         Json?
  image_scan_findings_summary_image_scan_completed_at         DateTime?             @db.Timestamp(6)
  image_scan_findings_summary_vulnerability_source_updated_at DateTime?             @db.Timestamp(6)
  image_scan_status_description                               String?
  image_scan_status                                           String?
  image_size_in_bytes                                         BigInt?
  image_tags                                                  String[]
  registry_id                                                 String?
  repository_name                                             String?
  aws_ecr_repositories                                        aws_ecr_repositories? @relation(fields: [repository_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_attachments {
  cq_id            String            @id(map: "aws_ecs_cluster_attachments_pk") @db.Uuid
  cq_meta          Json?
  cluster_cq_id    String?           @db.Uuid
  details          Json?
  id               String?
  status           String?
  type             String?
  aws_ecs_clusters aws_ecs_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_container_instance_attachments {
  cq_id                               String                               @id(map: "aws_ecs_cluster_container_instance_attachments_pk") @db.Uuid
  cq_meta                             Json?
  cluster_container_instance_cq_id    String?                              @db.Uuid
  details                             Json?
  id                                  String?
  status                              String?
  type                                String?
  aws_ecs_cluster_container_instances aws_ecs_cluster_container_instances? @relation(fields: [cluster_container_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_container_ins_cluster_container_instance_c_fkey")
}

model aws_ecs_cluster_container_instance_attributes {
  cq_id                               String                               @id(map: "aws_ecs_cluster_container_instance_attributes_pk") @db.Uuid
  cq_meta                             Json?
  cluster_container_instance_cq_id    String?                              @db.Uuid
  name                                String?
  target_id                           String?
  target_type                         String?
  value                               String?
  aws_ecs_cluster_container_instances aws_ecs_cluster_container_instances? @relation(fields: [cluster_container_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_container_in_cluster_container_instance_c_fkey1")
}

model aws_ecs_cluster_container_instance_health_status_details {
  cq_id                               String                               @id(map: "aws_ecs_cluster_container_instance_health_status_details_pk") @db.Uuid
  cq_meta                             Json?
  cluster_container_instance_cq_id    String?                              @db.Uuid
  last_status_change                  DateTime?                            @db.Timestamp(6)
  last_updated                        DateTime?                            @db.Timestamp(6)
  status                              String?
  type                                String?
  aws_ecs_cluster_container_instances aws_ecs_cluster_container_instances? @relation(fields: [cluster_container_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_container_in_cluster_container_instance_c_fkey2")
}

model aws_ecs_cluster_container_instance_registered_resources {
  cq_id                               String                               @id(map: "aws_ecs_cluster_container_instance_registered_resources_pk") @db.Uuid
  cq_meta                             Json?
  cluster_container_instance_cq_id    String?                              @db.Uuid
  double_value                        Float?
  integer_value                       Int?
  long_value                          BigInt?
  name                                String?
  string_set_value                    String[]
  type                                String?
  aws_ecs_cluster_container_instances aws_ecs_cluster_container_instances? @relation(fields: [cluster_container_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_container_in_cluster_container_instance_c_fkey3")
}

model aws_ecs_cluster_container_instance_remaining_resources {
  cq_id                               String                               @id(map: "aws_ecs_cluster_container_instance_remaining_resources_pk") @db.Uuid
  cq_meta                             Json?
  cluster_container_instance_cq_id    String?                              @db.Uuid
  double_value                        Float?
  integer_value                       Int?
  long_value                          BigInt?
  name                                String?
  string_set_value                    String[]
  type                                String?
  aws_ecs_cluster_container_instances aws_ecs_cluster_container_instances? @relation(fields: [cluster_container_instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_container_in_cluster_container_instance_c_fkey4")
}

model aws_ecs_cluster_container_instances {
  cq_id                                                    String                                                     @id(map: "aws_ecs_cluster_container_instances_pk") @db.Uuid
  cq_meta                                                  Json?
  cluster_cq_id                                            String?                                                    @db.Uuid
  agent_connected                                          Boolean?
  agent_update_status                                      String?
  capacity_provider_name                                   String?
  container_instance_arn                                   String?
  ec2_instance_id                                          String?
  health_status_overall_status                             String?
  pending_tasks_count                                      Int?
  registered_at                                            DateTime?                                                  @db.Timestamp(6)
  running_tasks_count                                      Int?
  status                                                   String?
  status_reason                                            String?
  tags                                                     Json?
  version                                                  BigInt?
  version_info_agent_hash                                  String?
  version_info_agent_version                               String?
  version_info_docker_version                              String?
  aws_ecs_clusters                                         aws_ecs_clusters?                                          @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ecs_cluster_container_instance_attachments           aws_ecs_cluster_container_instance_attachments[]
  aws_ecs_cluster_container_instance_attributes            aws_ecs_cluster_container_instance_attributes[]
  aws_ecs_cluster_container_instance_health_status_details aws_ecs_cluster_container_instance_health_status_details[]
  aws_ecs_cluster_container_instance_registered_resources  aws_ecs_cluster_container_instance_registered_resources[]
  aws_ecs_cluster_container_instance_remaining_resources   aws_ecs_cluster_container_instance_remaining_resources[]
}

model aws_ecs_cluster_service_deployments {
  cq_id                                                       String                    @id(map: "aws_ecs_cluster_service_deployments_pk") @db.Uuid
  cq_meta                                                     Json?
  cluster_service_cq_id                                       String?                   @db.Uuid
  capacity_provider_strategy                                  Json?
  created_at                                                  DateTime?                 @db.Timestamp(6)
  desired_count                                               Int?
  failed_tasks                                                Int?
  id                                                          String?
  launch_type                                                 String?
  network_configuration_awsvpc_configuration_subnets          String[]
  network_configuration_awsvpc_configuration_assign_public_ip String?
  network_configuration_awsvpc_configuration_security_groups  String[]
  pending_count                                               Int?
  platform_family                                             String?
  platform_version                                            String?
  rollout_state                                               String?
  rollout_state_reason                                        String?
  running_count                                               Int?
  status                                                      String?
  task_definition                                             String?
  updated_at                                                  DateTime?                 @db.Timestamp(6)
  aws_ecs_cluster_services                                    aws_ecs_cluster_services? @relation(fields: [cluster_service_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_service_events {
  cq_id                    String                    @id(map: "aws_ecs_cluster_service_events_pk") @db.Uuid
  cq_meta                  Json?
  cluster_service_cq_id    String?                   @db.Uuid
  created_at               DateTime?                 @db.Timestamp(6)
  id                       String?
  message                  String?
  aws_ecs_cluster_services aws_ecs_cluster_services? @relation(fields: [cluster_service_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_service_load_balancers {
  cq_id                    String                    @id(map: "aws_ecs_cluster_service_load_balancers_pk") @db.Uuid
  cq_meta                  Json?
  cluster_service_cq_id    String?                   @db.Uuid
  container_name           String?
  container_port           Int?
  load_balancer_name       String?
  target_group_arn         String?
  aws_ecs_cluster_services aws_ecs_cluster_services? @relation(fields: [cluster_service_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_service_load_balance_cluster_service_cq_id_fkey")
}

model aws_ecs_cluster_service_service_registries {
  cq_id                    String                    @id(map: "aws_ecs_cluster_service_service_registries_pk") @db.Uuid
  cq_meta                  Json?
  cluster_service_cq_id    String?                   @db.Uuid
  container_name           String?
  container_port           Int?
  port                     Int?
  registry_arn             String?
  aws_ecs_cluster_services aws_ecs_cluster_services? @relation(fields: [cluster_service_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_service_service_regi_cluster_service_cq_id_fkey")
}

model aws_ecs_cluster_service_task_set_load_balancers {
  cq_id                             String                             @id(map: "aws_ecs_cluster_service_task_set_load_balancers_pk") @db.Uuid
  cq_meta                           Json?
  cluster_service_task_set_cq_id    String?                            @db.Uuid
  container_name                    String?
  container_port                    Int?
  load_balancer_name                String?
  target_group_arn                  String?
  aws_ecs_cluster_service_task_sets aws_ecs_cluster_service_task_sets? @relation(fields: [cluster_service_task_set_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_service_task__cluster_service_task_set_cq__fkey")
}

model aws_ecs_cluster_service_task_set_service_registries {
  cq_id                             String                             @id(map: "aws_ecs_cluster_service_task_set_service_registries_pk") @db.Uuid
  cq_meta                           Json?
  cluster_service_task_set_cq_id    String?                            @db.Uuid
  container_name                    String?
  container_port                    Int?
  port                              Int?
  arn                               String?
  aws_ecs_cluster_service_task_sets aws_ecs_cluster_service_task_sets? @relation(fields: [cluster_service_task_set_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_cluster_service_task_cluster_service_task_set_cq__fkey1")
}

model aws_ecs_cluster_service_task_sets {
  cq_id                                                       String                                                @id(map: "aws_ecs_cluster_service_task_sets_pk") @db.Uuid
  cq_meta                                                     Json?
  cluster_service_cq_id                                       String?                                               @db.Uuid
  capacity_provider_strategy                                  Json?
  cluster_arn                                                 String?
  computed_desired_count                                      Int?
  created_at                                                  DateTime?                                             @db.Timestamp(6)
  external_id                                                 String?
  id                                                          String?
  launch_type                                                 String?
  network_configuration_awsvpc_configuration_subnets          String[]
  network_configuration_awsvpc_configuration_assign_public_ip String?
  network_configuration_awsvpc_configuration_security_groups  String[]
  pending_count                                               Int?
  platform_family                                             String?
  platform_version                                            String?
  running_count                                               Int?
  scale_unit                                                  String?
  scale_value                                                 Float?
  service_arn                                                 String?
  stability_status                                            String?
  stability_status_at                                         DateTime?                                             @db.Timestamp(6)
  started_by                                                  String?
  status                                                      String?
  tags                                                        Json?
  task_definition                                             String?
  arn                                                         String?
  updated_at                                                  DateTime?                                             @db.Timestamp(6)
  aws_ecs_cluster_services                                    aws_ecs_cluster_services?                             @relation(fields: [cluster_service_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ecs_cluster_service_task_set_load_balancers             aws_ecs_cluster_service_task_set_load_balancers[]
  aws_ecs_cluster_service_task_set_service_registries         aws_ecs_cluster_service_task_set_service_registries[]
}

model aws_ecs_cluster_services {
  cq_id                                                        String                                       @id(map: "aws_ecs_cluster_services_pk") @db.Uuid
  cq_meta                                                      Json?
  cluster_cq_id                                                String?                                      @db.Uuid
  capacity_provider_strategy                                   Json?
  cluster_arn                                                  String?
  created_at                                                   DateTime?                                    @db.Timestamp(6)
  created_by                                                   String?
  deployment_configuration_deployment_circuit_breaker_enable   Boolean?
  deployment_configuration_deployment_circuit_breaker_rollback Boolean?
  deployment_configuration_maximum_percent                     Int?
  deployment_configuration_minimum_healthy_percent             Int?
  deployment_controller_type                                   String?
  desired_count                                                Int?
  enable_ecs_managed_tags                                      Boolean?
  enable_execute_command                                       Boolean?
  health_check_grace_period_seconds                            Int?
  launch_type                                                  String?
  network_configuration_awsvpc_configuration_subnets           String[]
  network_configuration_awsvpc_configuration_assign_public_ip  String?
  network_configuration_awsvpc_configuration_security_groups   String[]
  pending_count                                                Int?
  placement_constraints                                        Json?
  placement_strategy                                           Json?
  platform_family                                              String?
  platform_version                                             String?
  propagate_tags                                               String?
  role_arn                                                     String?
  running_count                                                Int?
  scheduling_strategy                                          String?
  arn                                                          String?
  name                                                         String?
  status                                                       String?
  tags                                                         Json?
  task_definition                                              String?
  aws_ecs_clusters                                             aws_ecs_clusters?                            @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ecs_cluster_service_deployments                          aws_ecs_cluster_service_deployments[]
  aws_ecs_cluster_service_events                               aws_ecs_cluster_service_events[]
  aws_ecs_cluster_service_load_balancers                       aws_ecs_cluster_service_load_balancers[]
  aws_ecs_cluster_service_service_registries                   aws_ecs_cluster_service_service_registries[]
  aws_ecs_cluster_service_task_sets                            aws_ecs_cluster_service_task_sets[]
}

model aws_ecs_cluster_task_attachments {
  cq_id                 String                 @id(map: "aws_ecs_cluster_task_attachments_pk") @db.Uuid
  cq_meta               Json?
  cluster_task_cq_id    String?                @db.Uuid
  details               Json?
  id                    String?
  status                String?
  type                  String?
  aws_ecs_cluster_tasks aws_ecs_cluster_tasks? @relation(fields: [cluster_task_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_task_containers {
  cq_id                 String                 @id(map: "aws_ecs_cluster_task_containers_pk") @db.Uuid
  cq_meta               Json?
  cluster_task_cq_id    String?                @db.Uuid
  container_arn         String?
  cpu                   String?
  exit_code             Int?
  gpu_ids               String[]
  health_status         String?
  image                 String?
  image_digest          String?
  last_status           String?
  managed_agents        Json?
  memory                String?
  memory_reservation    String?
  name                  String?
  network_bindings      Json?
  network_interfaces    Json?
  reason                String?
  runtime_id            String?
  task_arn              String?
  aws_ecs_cluster_tasks aws_ecs_cluster_tasks? @relation(fields: [cluster_task_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_cluster_tasks {
  cq_id                            String                             @id(map: "aws_ecs_cluster_tasks_pk") @db.Uuid
  cq_meta                          Json?
  cluster_cq_id                    String?                            @db.Uuid
  attributes                       Json?
  availability_zone                String?
  capacity_provider_name           String?
  cluster_arn                      String?
  connectivity                     String?
  connectivity_at                  DateTime?                          @db.Timestamp(6)
  container_instance_arn           String?
  cpu                              String?
  created_at                       DateTime?                          @db.Timestamp(6)
  desired_status                   String?
  enable_execute_command           Boolean?
  ephemeral_storage_size_in_gib    Int?
  execution_stopped_at             DateTime?                          @db.Timestamp(6)
  group                            String?
  health_status                    String?
  inference_accelerators           Json?
  last_status                      String?
  launch_type                      String?
  memory                           String?
  overrides                        Json?
  platform_family                  String?
  platform_version                 String?
  pull_started_at                  DateTime?                          @db.Timestamp(6)
  pull_stopped_at                  DateTime?                          @db.Timestamp(6)
  started_at                       DateTime?                          @db.Timestamp(6)
  started_by                       String?
  stop_code                        String?
  stopped_at                       DateTime?                          @db.Timestamp(6)
  stopped_reason                   String?
  stopping_at                      DateTime?                          @db.Timestamp(6)
  tags                             Json?
  arn                              String?
  task_definition_arn              String?
  version                          BigInt?
  aws_ecs_clusters                 aws_ecs_clusters?                  @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_ecs_cluster_task_attachments aws_ecs_cluster_task_attachments[]
  aws_ecs_cluster_task_containers  aws_ecs_cluster_task_containers[]
}

model aws_ecs_clusters {
  cq_id                                              String                                @unique @db.Uuid
  cq_meta                                            Json?
  account_id                                         String?
  region                                             String?
  active_services_count                              Int?
  attachments_status                                 String?
  capacity_providers                                 String[]
  arn                                                String                                @id(map: "aws_ecs_clusters_pk")
  name                                               String?
  execute_config_kms_key_id                          String?
  execute_config_logs_cloud_watch_encryption_enabled Boolean?
  execute_config_log_cloud_watch_log_group_name      String?
  execute_config_log_s3_bucket_name                  String?
  execute_config_log_s3_encryption_enabled           Boolean?
  execute_config_log_s3_key_prefix                   String?
  execute_config_logging                             String?
  default_capacity_provider_strategy                 Json?
  pending_tasks_count                                Int?
  registered_container_instances_count               Int?
  running_tasks_count                                Int?
  settings                                           Json?
  statistics                                         Json?
  status                                             String?
  tags                                               Json?
  aws_ecs_cluster_attachments                        aws_ecs_cluster_attachments[]
  aws_ecs_cluster_container_instances                aws_ecs_cluster_container_instances[]
  aws_ecs_cluster_services                           aws_ecs_cluster_services[]
  aws_ecs_cluster_tasks                              aws_ecs_cluster_tasks[]
}

model aws_ecs_task_definition_container_definitions {
  cq_id                                 String                    @id(map: "aws_ecs_task_definition_container_definitions_pk") @db.Uuid
  cq_meta                               Json?
  task_definition_cq_id                 String?                   @db.Uuid
  command                               String[]
  cpu                                   Int?
  depends_on                            Json?
  disable_networking                    Boolean?
  dns_search_domains                    String[]
  dns_servers                           String[]
  docker_labels                         Json?
  docker_security_options               String[]
  entry_point                           String[]
  environment                           Json?
  environment_files                     Json?
  essential                             Boolean?
  extra_hosts                           Json?
  firelens_configuration_type           String?
  firelens_configuration_options        Json?
  health_check_command                  String[]
  health_check_interval                 Int?
  health_check_retries                  Int?
  health_check_start_period             Int?
  health_check_timeout                  Int?
  hostname                              String?
  image                                 String?
  interactive                           Boolean?
  links                                 String[]
  linux_parameters_capabilities_add     String[]
  linux_parameters_capabilities_drop    String[]
  linux_parameters_devices              Json?
  linux_parameters_init_process_enabled Boolean?
  linux_parameters_max_swap             Int?
  linux_parameters_shared_memory_size   Int?
  linux_parameters_swappiness           Int?
  linux_parameters_tmpfs                Json?
  log_configuration_log_driver          String?
  log_configuration_options             Json?
  log_configuration_secret_options      Json?
  memory                                Int?
  memory_reservation                    Int?
  mount_points                          Json?
  name                                  String?
  port_mappings                         Json?
  privileged                            Boolean?
  pseudo_terminal                       Boolean?
  readonly_root_filesystem              Boolean?
  repository_credentials_parameter      String?
  resource_requirements                 Json?
  secrets                               Json?
  start_timeout                         Int?
  stop_timeout                          Int?
  system_controls                       Json?
  ulimits                               Json?
  user                                  String?
  volumes_from                          Json?
  working_directory                     String?
  aws_ecs_task_definitions              aws_ecs_task_definitions? @relation(fields: [task_definition_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_ecs_task_definition_container_de_task_definition_cq_id_fkey")
}

model aws_ecs_task_definition_volumes {
  cq_id                                              String                    @id(map: "aws_ecs_task_definition_volumes_pk") @db.Uuid
  cq_meta                                            Json?
  task_definition_cq_id                              String?                   @db.Uuid
  docker_autoprovision                               Boolean?
  docker_driver                                      String?
  docker_driver_opts                                 Json?
  docker_labels                                      Json?
  docker_scope                                       String?
  efs_file_system_id                                 String?
  efs_authorization_config_access_point_id           String?
  efs_authorization_config_iam                       String?
  efs_root_directory                                 String?
  efs_volume_configuration_transit_encryption        String?
  efs_transit_encryption_port                        Int?
  fsx_wfs_authorization_config_credentials_parameter String?
  fsx_wfs_authorization_config_domain                String?
  fsx_wfs_file_system_id                             String?
  fsx_wfs_root_directory                             String?
  host_source_path                                   String?
  name                                               String?
  aws_ecs_task_definitions                           aws_ecs_task_definitions? @relation(fields: [task_definition_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ecs_task_definitions {
  cq_id                                         String                                          @unique @db.Uuid
  cq_meta                                       Json?
  account_id                                    String?
  region                                        String?
  tags                                          Json?
  compatibilities                               String[]
  cpu                                           String?
  deregistered_at                               DateTime?                                       @db.Timestamp(6)
  ephemeral_storage_size                        Int?
  execution_role_arn                            String?
  family                                        String?
  inference_accelerators                        Json?
  ipc_mode                                      String?
  memory                                        String?
  network_mode                                  String?
  pid_mode                                      String?
  placement_constraints                         Json?
  proxy_configuration_container_name            String?
  proxy_configuration_properties                Json?
  proxy_configuration_type                      String?
  registered_at                                 DateTime?                                       @db.Timestamp(6)
  registered_by                                 String?
  requires_attributes                           Json?
  requires_compatibilities                      String[]
  revision                                      Int?
  runtime_platform_cpu_architecture             String?
  runtime_platform_os_family                    String?
  status                                        String?
  arn                                           String                                          @id(map: "aws_ecs_task_definitions_pk")
  task_role_arn                                 String?
  aws_ecs_task_definition_container_definitions aws_ecs_task_definition_container_definitions[]
  aws_ecs_task_definition_volumes               aws_ecs_task_definition_volumes[]
}

model aws_efs_filesystems {
  cq_id                           String    @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String
  region                          String?
  backup_policy_status            String?
  creation_time                   DateTime? @db.Timestamp(6)
  creation_token                  String?
  id                              String
  life_cycle_state                String?
  number_of_mount_targets         Int?
  owner_id                        String?
  performance_mode                String?
  size_in_bytes_value             BigInt?
  size_in_bytes_timestamp         DateTime? @db.Timestamp(6)
  size_in_bytes_value_in_ia       BigInt?
  size_in_bytes_value_in_standard BigInt?
  tags                            Json?
  availability_zone_id            String?
  availability_zone_name          String?
  encrypted                       Boolean?
  arn                             String?
  kms_key_id                      String?
  name                            String?
  provisioned_throughput_in_mibps Float?
  throughput_mode                 String?

  @@id([account_id, id], map: "aws_efs_filesystems_pk")
}

model aws_eks_cluster_encryption_configs {
  cq_id            String            @id(map: "aws_eks_cluster_encryption_configs_pk") @db.Uuid
  cq_meta          Json?
  cluster_cq_id    String?           @db.Uuid
  provider_key_arn String?
  resources        String[]
  aws_eks_clusters aws_eks_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_eks_cluster_loggings {
  cq_id            String            @id(map: "aws_eks_cluster_loggings_pk") @db.Uuid
  cq_meta          Json?
  cluster_cq_id    String?           @db.Uuid
  enabled          Boolean?
  types            String[]
  aws_eks_clusters aws_eks_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_eks_clusters {
  cq_id                                          String                               @unique @db.Uuid
  cq_meta                                        Json?
  account_id                                     String?
  region                                         String?
  arn                                            String                               @id(map: "aws_eks_clusters_pk")
  certificate_authority_data                     String?
  client_request_token                           String?
  created_at                                     DateTime?                            @db.Timestamp(6)
  endpoint                                       String?
  identity_oidc_issuer                           String?
  kubernetes_network_config_service_ipv4_cidr    String?
  name                                           String?
  platform_version                               String?
  resources_vpc_config_cluster_security_group_id String?
  resources_vpc_config_endpoint_private_access   Boolean?
  resources_vpc_config_endpoint_public_access    Boolean?
  resources_vpc_config_public_access_cidrs       String[]
  resources_vpc_config_security_group_ids        String[]
  resources_vpc_config_subnet_ids                String[]
  resources_vpc_config_vpc_id                    String?
  role_arn                                       String?
  status                                         String?
  tags                                           Json?
  version                                        String?
  aws_eks_cluster_encryption_configs             aws_eks_cluster_encryption_configs[]
  aws_eks_cluster_loggings                       aws_eks_cluster_loggings[]
}

model aws_elasticbeanstalk_application_versions {
  cq_id                   String    @unique @db.Uuid
  cq_meta                 Json?
  account_id              String?
  region                  String?
  application_name        String?
  arn                     String    @id(map: "aws_elasticbeanstalk_application_versions_pk")
  build_arn               String?
  date_created            DateTime? @db.Timestamp(6)
  date_updated            DateTime? @db.Timestamp(6)
  description             String?
  source_location         String?
  source_repository       String?
  source_type             String?
  source_bundle_s3_bucket String?
  source_bundle_s3_key    String?
  status                  String?
  version_label           String?
}

model aws_elasticbeanstalk_applications {
  cq_id                                  String    @unique @db.Uuid
  cq_meta                                Json?
  account_id                             String?
  region                                 String?
  arn                                    String
  name                                   String?
  configuration_templates                String[]
  date_created                           DateTime  @db.Timestamp(6)
  date_updated                           DateTime? @db.Timestamp(6)
  description                            String?
  resource_lifecycle_config_service_role String?
  max_age_rule_enabled                   Boolean?
  max_age_rule_delete_source_from_s3     Boolean?
  max_age_rule_max_age_in_days           Int?
  max_count_rule_enabled                 Boolean?
  max_count_rule_delete_source_from_s3   Boolean?
  max_count_rule_max_count               Int?
  versions                               String[]

  @@id([arn, date_created], map: "aws_elasticbeanstalk_applications_pk")
}

model aws_elasticbeanstalk_configuration_options {
  cq_id                             String                             @id(map: "aws_elasticbeanstalk_configuration_options_pk") @db.Uuid
  cq_meta                           Json?
  environment_cq_id                 String?                            @db.Uuid
  application_arn                   String?
  name                              String?
  namespace                         String?
  change_severity                   String?
  default_value                     String?
  max_length                        Int?
  max_value                         Int?
  min_value                         Int?
  regex_label                       String?
  regex_pattern                     String?
  user_defined                      Boolean?
  value_options                     String[]
  value_type                        String?
  aws_elasticbeanstalk_environments aws_elasticbeanstalk_environments? @relation(fields: [environment_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elasticbeanstalk_configuration_optio_environment_cq_id_fkey")
}

model aws_elasticbeanstalk_configuration_setting_options {
  cq_id                                       String                                       @id(map: "aws_elasticbeanstalk_configuration_setting_options_pk") @db.Uuid
  cq_meta                                     Json?
  configuration_setting_cq_id                 String?                                      @db.Uuid
  namespace                                   String?
  option_name                                 String?
  resource_name                               String?
  value                                       String?
  aws_elasticbeanstalk_configuration_settings aws_elasticbeanstalk_configuration_settings? @relation(fields: [configuration_setting_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elasticbeanstalk_configura_configuration_setting_cq_id_fkey")
}

model aws_elasticbeanstalk_configuration_settings {
  cq_id                                              String                                               @id(map: "aws_elasticbeanstalk_configuration_settings_pk") @db.Uuid
  cq_meta                                            Json?
  environment_cq_id                                  String?                                              @db.Uuid
  application_name                                   String?
  application_arn                                    String?
  date_created                                       DateTime?                                            @db.Timestamp(6)
  date_updated                                       DateTime?                                            @db.Timestamp(6)
  deployment_status                                  String?
  description                                        String?
  environment_name                                   String?
  platform_arn                                       String?
  solution_stack_name                                String?
  template_name                                      String?
  aws_elasticbeanstalk_environments                  aws_elasticbeanstalk_environments?                   @relation(fields: [environment_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elasticbeanstalk_configuration_setti_environment_cq_id_fkey")
  aws_elasticbeanstalk_configuration_setting_options aws_elasticbeanstalk_configuration_setting_options[]
}

model aws_elasticbeanstalk_environment_links {
  cq_id                             String                             @id(map: "aws_elasticbeanstalk_environment_links_pk") @db.Uuid
  cq_meta                           Json?
  environment_cq_id                 String?                            @db.Uuid
  environment_name                  String?
  link_name                         String?
  aws_elasticbeanstalk_environments aws_elasticbeanstalk_environments? @relation(fields: [environment_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_elasticbeanstalk_environments {
  cq_id                                       String                                        @unique @db.Uuid
  cq_meta                                     Json?
  account_id                                  String
  region                                      String?
  tags                                        Json?
  abortable_operation_in_progress             Boolean?
  application_name                            String?
  cname                                       String?
  date_created                                DateTime?                                     @db.Timestamp(6)
  date_updated                                DateTime?                                     @db.Timestamp(6)
  description                                 String?
  endpoint_url                                String?
  arn                                         String?
  id                                          String
  name                                        String?
  health                                      String?
  health_status                               String?
  operations_role                             String?
  platform_arn                                String?
  load_balancer_domain                        String?
  listeners                                   Json?
  load_balancer_name                          String?
  solution_stack_name                         String?
  status                                      String?
  template_name                               String?
  tier_name                                   String?
  tier_type                                   String?
  tier_version                                String?
  version_label                               String?
  aws_elasticbeanstalk_configuration_options  aws_elasticbeanstalk_configuration_options[]
  aws_elasticbeanstalk_configuration_settings aws_elasticbeanstalk_configuration_settings[]
  aws_elasticbeanstalk_environment_links      aws_elasticbeanstalk_environment_links[]

  @@id([account_id, id], map: "aws_elasticbeanstalk_environments_pk")
}

model aws_elasticsearch_domains {
  cq_id                                                 String    @unique @db.Uuid
  cq_meta                                               Json?
  account_id                                            String
  region                                                String
  tags                                                  Json?
  arn                                                   String?
  id                                                    String
  name                                                  String?
  cluster_cold_storage_options_enabled                  Boolean?
  cluster_dedicated_master_count                        Int?
  cluster_dedicated_master_enabled                      Boolean?
  cluster_dedicated_master_type                         String?
  cluster_instance_count                                Int?
  cluster_instance_type                                 String?
  cluster_warm_count                                    Int?
  cluster_warm_enabled                                  Boolean?
  cluster_warm_type                                     String?
  cluster_zone_awareness_config_availability_zone_count Int?
  cluster_zone_awareness_enabled                        Boolean?
  access_policies                                       String?
  advanced_options                                      Json?
  advanced_security_enabled                             Boolean?
  advanced_security_internal_user_database_enabled      Boolean?
  advanced_security_saml_enabled                        Boolean?
  advanced_security_saml_idp_entity_id                  String?
  advanced_security_saml_roles_key                      String?
  advanced_security_options_saml_options_roles_key      String?
  advanced_security_saml_session_timeout_minutes        Int?
  advanced_security_saml_subject_key                    String?
  auto_tune_error_message                               String?
  auto_tune_options_state                               String?
  cognito_enabled                                       Boolean?
  cognito_identity_pool_id                              String?
  cognito_role_arn                                      String?
  cognito_user_pool_id                                  String?
  created                                               Boolean?
  deleted                                               Boolean?
  domain_endpoint_custom                                String?
  domain_endpoint_custom_certificate_arn                String?
  domain_endpoint_custom_enabled                        Boolean?
  domain_endpoint_enforce_https                         Boolean?
  domain_endpoint_tls_security_policy                   String?
  ebs_enabled                                           Boolean?
  ebs_iops                                              Int?
  ebs_volume_size                                       Int?
  ebs_volume_type                                       String?
  elasticsearch_version                                 String?
  encryption_at_rest_enabled                            Boolean?
  encryption_at_rest_kms_key_id                         String?
  endpoint                                              String?
  endpoints                                             Json?
  log_publishing_options                                Json?
  node_to_node_encryption_enabled                       Boolean?
  processing                                            Boolean?
  service_software_automated_update_date                DateTime? @db.Timestamp(6)
  service_software_cancellable                          Boolean?
  service_software_current_version                      String?
  service_software_description                          String?
  service_software_new_version                          String?
  service_software_optional_deployment                  Boolean?
  service_software_update_available                     Boolean?
  service_software_update_status                        String?
  snapshot_options_automated_snapshot_start_hour        Int?
  upgrade_processing                                    Boolean?
  vpc_availability_zones                                String[]
  vpc_security_group_ids                                String[]
  vpc_subnet_ids                                        String[]
  vpc_vpc_id                                            String?

  @@id([account_id, region, id], map: "aws_elasticsearch_domains_pk")
}

model aws_elbv1_load_balancer_backend_server_descriptions {
  cq_id                    String                    @id(map: "aws_elbv1_load_balancer_backend_server_descriptions_pk") @db.Uuid
  cq_meta                  Json?
  load_balancer_cq_id      String?                   @db.Uuid
  name                     String?
  instance_port            Int?
  policy_names             String[]
  aws_elbv1_load_balancers aws_elbv1_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv1_load_balancer_backend_server_load_balancer_cq_id_fkey")
}

model aws_elbv1_load_balancer_listeners {
  cq_id                       String                    @id(map: "aws_elbv1_load_balancer_listeners_pk") @db.Uuid
  cq_meta                     Json?
  load_balancer_cq_id         String?                   @db.Uuid
  load_balance_name           String?
  listener_instance_port      Int?
  listener_load_balancer_port Int?
  listener_protocol           String?
  listener_instance_protocol  String?
  listener_ssl_certificate_id String?
  policy_names                String[]
  aws_elbv1_load_balancers    aws_elbv1_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_elbv1_load_balancer_policies {
  cq_id                         String                    @id(map: "aws_elbv1_load_balancer_policies_pk") @db.Uuid
  cq_meta                       Json?
  load_balancer_cq_id           String?                   @db.Uuid
  load_balance_name             String?
  policy_attribute_descriptions Json?
  policy_name                   String?
  policy_type_name              String?
  aws_elbv1_load_balancers      aws_elbv1_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_elbv1_load_balancer_policies_app_cookie_stickiness {
  cq_id                    String                    @id(map: "aws_elbv1_load_balancer_policies_app_cookie_stickiness_pk") @db.Uuid
  cq_meta                  Json?
  load_balancer_cq_id      String?                   @db.Uuid
  load_balance_name        String?
  cookie_name              String?
  policy_name              String?
  aws_elbv1_load_balancers aws_elbv1_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv1_load_balancer_policies_app_c_load_balancer_cq_id_fkey")
}

model aws_elbv1_load_balancer_policies_lb_cookie_stickiness {
  cq_id                    String                    @id(map: "aws_elbv1_load_balancer_policies_lb_cookie_stickiness_pk") @db.Uuid
  cq_meta                  Json?
  load_balancer_cq_id      String?                   @db.Uuid
  load_balance_name        String?
  cookie_expiration_period BigInt?
  policy_name              String?
  aws_elbv1_load_balancers aws_elbv1_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv1_load_balancer_policies_lb_co_load_balancer_cq_id_fkey")
}

model aws_elbv1_load_balancers {
  cq_id                                                  String                                                   @unique @db.Uuid
  cq_meta                                                Json?
  account_id                                             String
  region                                                 String
  arn                                                    String?
  attributes_access_log_enabled                          Boolean?
  attributes_access_log_s3_bucket_name                   String?
  attributes_access_log_s3_bucket_prefix                 String?
  attributes_access_log_emit_interval                    Int?
  attributes_connection_settings_idle_timeout            Int?
  attributes_cross_zone_load_balancing_enabled           Boolean?
  attributes_connection_draining_enabled                 Boolean?
  attributes_connection_draining_timeout                 Int?
  attributes_additional_attributes                       Json?
  tags                                                   Json?
  availability_zones                                     String[]
  canonical_hosted_zone_name                             String?
  canonical_hosted_zone_name_id                          String?
  created_time                                           DateTime?                                                @db.Timestamp(6)
  dns_name                                               String?
  health_check_healthy_threshold                         Int?
  health_check_interval                                  Int?
  health_check_target                                    String?
  health_check_timeout                                   Int?
  health_check_unhealthy_threshold                       Int?
  instances                                              String[]
  name                                                   String
  other_policies                                         String[]
  scheme                                                 String?
  security_groups                                        String[]
  source_security_group_name                             String?
  source_security_group_owner_alias                      String?
  subnets                                                String[]
  vpc_id                                                 String?
  aws_elbv1_load_balancer_backend_server_descriptions    aws_elbv1_load_balancer_backend_server_descriptions[]
  aws_elbv1_load_balancer_listeners                      aws_elbv1_load_balancer_listeners[]
  aws_elbv1_load_balancer_policies                       aws_elbv1_load_balancer_policies[]
  aws_elbv1_load_balancer_policies_app_cookie_stickiness aws_elbv1_load_balancer_policies_app_cookie_stickiness[]
  aws_elbv1_load_balancer_policies_lb_cookie_stickiness  aws_elbv1_load_balancer_policies_lb_cookie_stickiness[]

  @@id([account_id, region, name], map: "aws_elbv1_load_balancers_pk")
}

model aws_elbv2_listener_certificates {
  cq_id               String               @id(map: "aws_elbv2_listener_certificates_pk") @db.Uuid
  cq_meta             Json?
  listener_cq_id      String?              @db.Uuid
  certificate_arn     String?
  is_default          Boolean?
  aws_elbv2_listeners aws_elbv2_listeners? @relation(fields: [listener_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_elbv2_listener_default_action_forward_config_target_groups {
  cq_id                              String                              @id(map: "aws_elbv2_listener_default_action_forward_config_target_grou_pk") @db.Uuid
  cq_meta                            Json?
  listener_default_action_cq_id      String?                             @db.Uuid
  target_group_arn                   String?
  weight                             Int?
  aws_elbv2_listener_default_actions aws_elbv2_listener_default_actions? @relation(fields: [listener_default_action_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv2_listener_default_ac_listener_default_action_cq_i_fkey")
}

model aws_elbv2_listener_default_actions {
  cq_id                                                          String                                                           @id(map: "aws_elbv2_listener_default_actions_pk") @db.Uuid
  cq_meta                                                        Json?
  listener_cq_id                                                 String?                                                          @db.Uuid
  type                                                           String?
  auth_cognito_user_pool_arn                                     String?
  auth_cognito_user_pool_client_id                               String?
  auth_cognito_user_pool_domain                                  String?
  auth_cognito_authentication_request_extra_params               Json?
  auth_cognito_on_unauthenticated_request                        String?
  auth_cognito_scope                                             String?
  auth_cognito_session_cookie_name                               String?
  auth_cognito_session_timeout                                   BigInt?
  auth_oidc_authorization_endpoint                               String?
  auth_oidc_client_id                                            String?
  auth_oidc_issuer                                               String?
  auth_oidc_token_endpoint                                       String?
  auth_oidc_user_info_endpoint                                   String?
  auth_oidc_authentication_request_extra_params                  Json?
  auth_oidc_client_secret                                        String?
  auth_oidc_on_unauthenticated_request                           String?
  auth_oidc_scope                                                String?
  auth_oidc_session_cookie_name                                  String?
  auth_oidc_session_timeout                                      BigInt?
  auth_oidc_use_existing_client_secret                           Boolean?
  fixed_response_config_status_code                              String?
  fixed_response_config_content_type                             String?
  fixed_response_config_message_body                             String?
  forward_config_target_group_stickiness_config_duration_seconds Int?
  forward_config_target_group_stickiness_config_enabled          Boolean?
  order                                                          Int?
  redirect_config_status_code                                    String?
  redirect_config_host                                           String?
  redirect_config_path                                           String?
  redirect_config_port                                           String?
  redirect_config_protocol                                       String?
  redirect_config_query                                          String?
  target_group_arn                                               String?
  aws_elbv2_listeners                                            aws_elbv2_listeners?                                             @relation(fields: [listener_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_elbv2_listener_default_action_forward_config_target_groups aws_elbv2_listener_default_action_forward_config_target_groups[]
}

model aws_elbv2_listeners {
  cq_id                              String                               @id(map: "aws_elbv2_listeners_pk") @db.Uuid
  cq_meta                            Json?
  account_id                         String?
  region                             String?
  load_balancer_cq_id                String?                              @db.Uuid
  tags                               Json?
  alpn_policy                        String[]
  arn                                String?
  load_balancer_arn                  String?
  port                               Int?
  protocol                           String?
  ssl_policy                         String?
  aws_elbv2_load_balancers           aws_elbv2_load_balancers?            @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_elbv2_listener_certificates    aws_elbv2_listener_certificates[]
  aws_elbv2_listener_default_actions aws_elbv2_listener_default_actions[]
}

model aws_elbv2_load_balancer_attributes {
  cq_id                                   String                    @id(map: "aws_elbv2_load_balancer_attributes_pk") @db.Uuid
  cq_meta                                 Json?
  load_balancer_cq_id                     String?                   @db.Uuid
  access_logs_s3_enabled                  Boolean?
  access_logs_s3_bucket                   String?
  access_logs_s3_prefix                   String?
  deletion_protection                     Boolean?
  idle_timeout                            Int?
  routing_http_desync_mitigation_mode     String?
  routing_http_drop_invalid_header_fields Boolean?
  routing_http_xamzntls_enabled           Boolean?
  routing_http_xff_client_port            Boolean?
  routing_http2                           Boolean?
  waf_fail_open                           Boolean?
  load_balancing_cross_zone               Boolean?
  aws_elbv2_load_balancers                aws_elbv2_load_balancers? @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_elbv2_load_balancer_availability_zone_addresses {
  cq_id                                      String                                      @id(map: "aws_elbv2_load_balancer_availability_zone_addresses_pk") @db.Uuid
  cq_meta                                    Json?
  load_balancer_availability_zone_cq_id      String?                                     @db.Uuid
  zone_name                                  String?
  allocation_id                              String?
  ipv6_address                               String?
  ip_address                                 String?
  private_ipv4_address                       String?
  aws_elbv2_load_balancer_availability_zones aws_elbv2_load_balancer_availability_zones? @relation(fields: [load_balancer_availability_zone_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv2_load_balancer_avail_load_balancer_availability_z_fkey")
}

model aws_elbv2_load_balancer_availability_zones {
  cq_id                                               String                                                @id(map: "aws_elbv2_load_balancer_availability_zones_pk") @db.Uuid
  cq_meta                                             Json?
  load_balancer_cq_id                                 String?                                               @db.Uuid
  load_balance_name                                   String?
  outpost_id                                          String?
  subnet_id                                           String?
  zone_name                                           String?
  aws_elbv2_load_balancers                            aws_elbv2_load_balancers?                             @relation(fields: [load_balancer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_elbv2_load_balancer_availability_z_load_balancer_cq_id_fkey")
  aws_elbv2_load_balancer_availability_zone_addresses aws_elbv2_load_balancer_availability_zone_addresses[]
}

model aws_elbv2_load_balancers {
  cq_id                                      String                                       @unique @db.Uuid
  cq_meta                                    Json?
  account_id                                 String?
  region                                     String?
  web_acl_arn                                String?
  tags                                       Json?
  canonical_hosted_zone_id                   String?
  created_time                               DateTime?                                    @db.Timestamp(6)
  customer_owned_ipv4_pool                   String?
  dns_name                                   String?
  ip_address_type                            String?
  arn                                        String                                       @id(map: "aws_elbv2_load_balancers_pk")
  name                                       String?
  scheme                                     String?
  security_groups                            String[]
  state_code                                 String?
  state_reason                               String?
  type                                       String?
  vpc_id                                     String?
  aws_elbv2_listeners                        aws_elbv2_listeners[]
  aws_elbv2_load_balancer_attributes         aws_elbv2_load_balancer_attributes[]
  aws_elbv2_load_balancer_availability_zones aws_elbv2_load_balancer_availability_zones[]
}

model aws_elbv2_target_groups {
  cq_id                         String   @unique @db.Uuid
  cq_meta                       Json?
  account_id                    String?
  region                        String?
  tags                          Json?
  health_check_enabled          Boolean?
  health_check_interval_seconds Int?
  health_check_path             String?
  health_check_port             String?
  health_check_protocol         String?
  health_check_timeout_seconds  Int?
  healthy_threshold_count       Int?
  load_balancer_arns            String[]
  matcher_grpc_code             String?
  matcher_http_code             String?
  port                          Int?
  protocol                      String?
  protocol_version              String?
  arn                           String   @id(map: "aws_elbv2_target_groups_pk")
  name                          String?
  target_type                   String?
  unhealthy_threshold_count     Int?
  vpc_id                        String?
}

model aws_emr_block_public_access_config_port_ranges {
  cq_id                               String                               @id(map: "aws_emr_block_public_access_config_port_ranges_pk") @db.Uuid
  cq_meta                             Json?
  block_public_access_config_cq_id    String?                              @db.Uuid
  min_range                           Int?
  max_range                           Int?
  aws_emr_block_public_access_configs aws_emr_block_public_access_configs? @relation(fields: [block_public_access_config_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_emr_block_public_access_c_block_public_access_config_c_fkey")
}

model aws_emr_block_public_access_configs {
  cq_id                                          String                                           @unique @db.Uuid
  cq_meta                                        Json?
  account_id                                     String
  region                                         String
  block_public_security_group_rules              Boolean?
  classification                                 String?
  configurations                                 Json?
  properties                                     Json?
  created_by_arn                                 String?
  creation_date_time                             DateTime?                                        @db.Timestamp(6)
  aws_emr_block_public_access_config_port_ranges aws_emr_block_public_access_config_port_ranges[]

  @@id([account_id, region], map: "aws_emr_block_public_access_configs_pk")
}

model aws_emr_clusters {
  cq_id                                                    String    @unique @db.Uuid
  cq_meta                                                  Json?
  account_id                                               String?
  region                                                   String?
  applications                                             Json?
  auto_scaling_role                                        String?
  auto_terminate                                           Boolean?
  arn                                                      String    @id(map: "aws_emr_clusters_pk")
  configurations                                           Json?
  custom_ami_id                                            String?
  ebs_root_volume_size                                     Int?
  ec2_instance_attribute_additional_master_security_groups String[]
  ec2_instance_attribute_additional_slave_security_groups  String[]
  ec2_instance_attribute_availability_zone                 String?
  ec2_instance_attribute_key_name                          String?
  ec2_instance_attribute_subnet_id                         String?
  ec2_instance_attribute_emr_managed_master_security_group String?
  ec2_instance_attribute_emr_managed_slave_security_group  String?
  ec2_instance_attribute_iam_instance_profile              String?
  ec2_instance_attribute_requested_availability_zones      String[]
  ec2_instance_attribute_requested_subnet_ids              String[]
  ec2_instance_attribute_service_access_security_group     String?
  id                                                       String?
  instance_collection_type                                 String?
  kerberos_kdc_admin_password                              String?
  kerberos_realm                                           String?
  kerberos_ad_domain_join_password                         String?
  kerberos_ad_domain_join_user                             String?
  kerberos_cross_realm_trust_principal_password            String?
  log_encryption_kms_key_id                                String?
  log_uri                                                  String?
  master_public_dns_name                                   String?
  name                                                     String?
  normalized_instance_hours                                Int?
  outpost_arn                                              String?
  placement_groups                                         Json?
  release_label                                            String?
  repo_upgrade_on_boot                                     String?
  requested_ami_version                                    String?
  running_ami_version                                      String?
  scale_down_behavior                                      String?
  security_configuration                                   String?
  service_role                                             String?
  state                                                    String?
  state_change_reason_code                                 String?
  state_change_reason_message                              String?
  creation_date_time                                       DateTime? @db.Timestamp(6)
  end_date_time                                            DateTime? @db.Timestamp(6)
  ready_date_time                                          DateTime? @db.Timestamp(6)
  step_concurrency_level                                   Int?
  tags                                                     Json?
  termination_protected                                    Boolean?
  visible_to_all_users                                     Boolean?
}

model aws_fsx_backups {
  cq_id                                     String    @unique @db.Uuid
  cq_meta                                   Json?
  account_id                                String
  region                                    String?
  id                                        String
  creation_time                             DateTime? @db.Timestamp(6)
  lifecycle                                 String?
  type                                      String?
  directory_information_active_directory_id String?
  directory_information_domain_name         String?
  failure_details_message                   String?
  kms_key_id                                String?
  progress_percent                          Int?
  arn                                       String?
  tags                                      Json?

  @@id([account_id, id], map: "aws_fsx_backups_pk")
}

model aws_guardduty_detector_members {
  cq_id                   String                   @id(map: "aws_guardduty_detector_members_pk") @db.Uuid
  cq_meta                 Json?
  detector_cq_id          String?                  @db.Uuid
  account_id              String?
  email                   String?
  master_id               String?
  relationship_status     String?
  updated_at              DateTime?                @db.Timestamp(6)
  detector_id             String?
  invited_at              DateTime?                @db.Timestamp(6)
  aws_guardduty_detectors aws_guardduty_detectors? @relation(fields: [detector_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_guardduty_detectors {
  cq_id                           String                           @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String
  region                          String
  arn                             String?
  id                              String
  service_role                    String?
  status                          String?
  created_at                      DateTime?                        @db.Timestamp(6)
  data_sources_cloud_trail_status String?
  data_sources_dns_logs_status    String?
  data_sources_flow_logs_status   String?
  data_sources_s3_logs_status     String?
  finding_publishing_frequency    String?
  tags                            Json?
  updated_at                      DateTime?                        @db.Timestamp(6)
  aws_guardduty_detector_members  aws_guardduty_detector_members[]

  @@id([account_id, region, id], map: "aws_guardduty_detectors_pk")
}

model aws_iam_group_policies {
  cq_id           String          @id(map: "aws_iam_group_policies_pk") @db.Uuid
  cq_meta         Json?
  account_id      String?
  group_cq_id     String?         @db.Uuid
  group_id        String?
  group_name      String?
  policy_document Json?
  policy_name     String?
  aws_iam_groups  aws_iam_groups? @relation(fields: [group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_groups {
  cq_id                  String                   @unique @db.Uuid
  cq_meta                Json?
  account_id             String
  policies               Json?
  arn                    String?
  create_date            DateTime?                @db.Timestamp(6)
  id                     String
  name                   String?
  path                   String?
  aws_iam_group_policies aws_iam_group_policies[]

  @@id([account_id, id], map: "aws_iam_groups_pk")
}

model aws_iam_openid_connect_identity_providers {
  cq_id           String    @unique @db.Uuid
  cq_meta         Json?
  account_id      String?
  arn             String    @id(map: "aws_iam_openid_connect_identity_providers_pk")
  client_id_list  String[]
  create_date     DateTime? @db.Timestamp(6)
  tags            Json?
  thumbprint_list String[]
  url             String?
}

model aws_iam_password_policies {
  cq_id                          String   @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String   @id(map: "aws_iam_password_policies_pk")
  allow_users_to_change_password Boolean?
  expire_passwords               Boolean?
  hard_expiry                    Boolean?
  max_password_age               Int?
  minimum_password_length        Int?
  password_reuse_prevention      Int?
  require_lowercase_characters   Boolean?
  require_numbers                Boolean?
  require_symbols                Boolean?
  require_uppercase_characters   Boolean?
  policy_exists                  Boolean?
}

model aws_iam_policies {
  cq_id                            String                    @unique @db.Uuid
  cq_meta                          Json?
  account_id                       String
  arn                              String?
  attachment_count                 Int?
  create_date                      DateTime?                 @db.Timestamp(6)
  default_version_id               String?
  description                      String?
  is_attachable                    Boolean?
  path                             String?
  permissions_boundary_usage_count Int?
  id                               String
  name                             String?
  update_date                      DateTime?                 @db.Timestamp(6)
  aws_iam_policy_versions          aws_iam_policy_versions[]

  @@id([account_id, id], map: "aws_iam_policies_pk")
}

model aws_iam_policy_versions {
  cq_id              String            @id(map: "aws_iam_policy_versions_pk") @db.Uuid
  cq_meta            Json?
  policy_cq_id       String?           @db.Uuid
  policy_id          String?
  create_date        DateTime?         @db.Timestamp(6)
  document           Json?
  is_default_version Boolean?
  version_id         String?
  aws_iam_policies   aws_iam_policies? @relation(fields: [policy_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_role_policies {
  cq_id           String         @id(map: "aws_iam_role_policies_pk") @db.Uuid
  cq_meta         Json?
  role_cq_id      String?        @db.Uuid
  role_id         String?
  account_id      String?
  policy_document Json?
  policy_name     String?
  role_name       String?
  aws_iam_roles   aws_iam_roles? @relation(fields: [role_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_roles {
  cq_id                         String                  @unique @db.Uuid
  cq_meta                       Json?
  account_id                    String
  policies                      Json?
  arn                           String?
  create_date                   DateTime?               @db.Timestamp(6)
  path                          String?
  id                            String
  name                          String?
  assume_role_policy_document   Json?
  description                   String?
  max_session_duration          Int?
  permissions_boundary_arn      String?
  permissions_boundary_type     String?
  role_last_used_last_used_date DateTime?               @db.Timestamp(6)
  role_last_used_region         String?
  tags                          Json?
  aws_iam_role_policies         aws_iam_role_policies[]

  @@id([account_id, id], map: "aws_iam_roles_pk")
}

model aws_iam_saml_identity_providers {
  cq_id                  String    @unique @db.Uuid
  cq_meta                Json?
  account_id             String?
  arn                    String    @id(map: "aws_iam_saml_identity_providers_pk")
  create_date            DateTime? @db.Timestamp(6)
  saml_metadata_document String?
  tags                   Json?
  valid_until            DateTime? @db.Timestamp(6)
}

model aws_iam_server_certificates {
  cq_id       String    @unique @db.Uuid
  cq_meta     Json?
  account_id  String
  id          String
  arn         String?
  path        String?
  name        String?
  expiration  DateTime? @db.Timestamp(6)
  upload_date DateTime? @db.Timestamp(6)

  @@id([account_id, id], map: "aws_iam_server_certificates_pk")
}

model aws_iam_user_access_keys {
  cq_id                  String         @id(map: "aws_iam_user_access_keys_pk") @db.Uuid
  cq_meta                Json?
  user_cq_id             String?        @db.Uuid
  user_id                String?
  access_key_id          String?
  create_date            DateTime?      @db.Timestamp(6)
  status                 String?
  last_used              DateTime?      @db.Timestamp(6)
  last_rotated           DateTime?      @db.Timestamp(6)
  last_used_service_name String?
  aws_iam_users          aws_iam_users? @relation(fields: [user_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_user_attached_policies {
  cq_id         String         @id(map: "aws_iam_user_attached_policies_pk") @db.Uuid
  cq_meta       Json?
  user_cq_id    String?        @db.Uuid
  user_id       String?
  policy_arn    String?
  policy_name   String?
  aws_iam_users aws_iam_users? @relation(fields: [user_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_user_groups {
  cq_id         String         @id(map: "aws_iam_user_groups_pk") @db.Uuid
  cq_meta       Json?
  user_cq_id    String?        @db.Uuid
  user_id       String?
  group_arn     String?
  create_date   DateTime?      @db.Timestamp(6)
  group_id      String?
  group_name    String?
  path          String?
  aws_iam_users aws_iam_users? @relation(fields: [user_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_user_policies {
  cq_id           String         @id(map: "aws_iam_user_policies_pk") @db.Uuid
  cq_meta         Json?
  user_cq_id      String?        @db.Uuid
  account_id      String?
  user_id         String?
  policy_document Json?
  policy_name     String?
  user_name       String?
  aws_iam_users   aws_iam_users? @relation(fields: [user_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iam_users {
  cq_id                          String                           @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String
  id                             String
  password_last_used             DateTime?                        @db.Timestamp(6)
  arn                            String?
  password_enabled               Boolean?
  password_status                String?
  password_last_changed          DateTime?                        @db.Timestamp(6)
  password_next_rotation         DateTime?                        @db.Timestamp(6)
  mfa_active                     Boolean?
  create_date                    DateTime?                        @db.Timestamp(6)
  path                           String?
  permissions_boundary_arn       String?
  permissions_boundary_type      String?
  tags                           Json?
  user_id                        String?
  user_name                      String?
  access_key_1_active            Boolean?
  access_key_1_last_rotated      DateTime?                        @db.Timestamp(6)
  access_key_2_active            Boolean?
  access_key_2_last_rotated      DateTime?                        @db.Timestamp(6)
  cert_1_active                  Boolean?
  cert_1_last_rotated            DateTime?                        @db.Timestamp(6)
  cert_2_active                  Boolean?
  cert_2_last_rotated            DateTime?                        @db.Timestamp(6)
  aws_iam_user_access_keys       aws_iam_user_access_keys[]
  aws_iam_user_attached_policies aws_iam_user_attached_policies[]
  aws_iam_user_groups            aws_iam_user_groups[]
  aws_iam_user_policies          aws_iam_user_policies[]

  @@id([account_id, id], map: "aws_iam_users_pk")
}

model aws_iam_virtual_mfa_devices {
  cq_id                                               String    @unique @db.Uuid
  cq_meta                                             Json?
  account_id                                          String?
  serial_number                                       String    @id(map: "aws_iam_virtual_mfa_devices_pk")
  base32_string_seed                                  Bytes?
  enable_date                                         DateTime? @db.Timestamp(6)
  qr_code_png                                         Bytes?
  tags                                                Json?
  user_arn                                            String?
  user_create_date                                    DateTime? @db.Timestamp(6)
  user_path                                           String?
  user_id                                             String?
  user_name                                           String?
  user_password_last_used                             DateTime? @db.Timestamp(6)
  user_permissions_boundary_permissions_boundary_arn  String?
  user_permissions_boundary_permissions_boundary_type String?
  user_tags                                           Json?
}

model aws_iot_billing_groups {
  cq_id           String    @unique @db.Uuid
  cq_meta         Json?
  account_id      String?
  region          String?
  things_in_group String[]
  tags            Json?
  arn             String    @id(map: "aws_iot_billing_groups_pk")
  id              String?
  creation_date   DateTime? @db.Timestamp(6)
  name            String?
  description     String?
  version         BigInt?
}

model aws_iot_ca_certificates {
  cq_id                    String    @unique @db.Uuid
  cq_meta                  Json?
  account_id               String?
  region                   String?
  certificates             String[]
  auto_registration_status String?
  arn                      String    @id(map: "aws_iot_ca_certificates_pk")
  id                       String?
  pem                      String?
  creation_date            DateTime? @db.Timestamp(6)
  customer_version         Int?
  generation_id            String?
  last_modified_date       DateTime? @db.Timestamp(6)
  owned_by                 String?
  status                   String?
  validity_not_after       DateTime? @db.Timestamp(6)
  validity_not_before      DateTime? @db.Timestamp(6)
}

model aws_iot_certificates {
  cq_id                          String    @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String?
  region                         String?
  policies                       String[]
  ca_certificate_id              String?
  arn                            String    @id(map: "aws_iot_certificates_pk")
  id                             String?
  mode                           String?
  pem                            String?
  creation_date                  DateTime? @db.Timestamp(6)
  customer_version               Int?
  generation_id                  String?
  last_modified_date             DateTime? @db.Timestamp(6)
  owned_by                       String?
  previous_owned_by              String?
  status                         String?
  transfer_data_accept_date      DateTime? @db.Timestamp(6)
  transfer_data_reject_date      DateTime? @db.Timestamp(6)
  transfer_data_reject_reason    String?
  transfer_data_transfer_date    DateTime? @db.Timestamp(6)
  transfer_data_transfer_message String?
  validity_not_after             DateTime? @db.Timestamp(6)
  validity_not_before            DateTime? @db.Timestamp(6)
}

model aws_iot_policies {
  cq_id              String    @unique @db.Uuid
  cq_meta            Json?
  account_id         String?
  region             String?
  tags               Json?
  creation_date      DateTime? @db.Timestamp(6)
  default_version_id String?
  generation_id      String?
  last_modified_date DateTime? @db.Timestamp(6)
  arn                String    @id(map: "aws_iot_policies_pk")
  document           String?
  name               String?
}

model aws_iot_stream_files {
  cq_id               String           @id(map: "aws_iot_stream_files_pk") @db.Uuid
  cq_meta             Json?
  stream_cq_id        String?          @db.Uuid
  file_id             Int?
  s3_location_bucket  String?
  s3_location_key     String?
  s3_location_version String?
  aws_iot_streams     aws_iot_streams? @relation(fields: [stream_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iot_streams {
  cq_id                String                 @unique @db.Uuid
  cq_meta              Json?
  account_id           String?
  region               String?
  created_at           DateTime?              @db.Timestamp(6)
  description          String?
  last_updated_at      DateTime?              @db.Timestamp(6)
  role_arn             String?
  arn                  String                 @id(map: "aws_iot_streams_pk")
  id                   String?
  version              Int?
  aws_iot_stream_files aws_iot_stream_files[]
}

model aws_iot_thing_groups {
  cq_id                        String    @unique @db.Uuid
  cq_meta                      Json?
  account_id                   String?
  region                       String?
  things_in_group              String[]
  policies                     String[]
  tags                         Json?
  index_name                   String?
  query_string                 String?
  query_version                String?
  status                       String?
  arn                          String    @id(map: "aws_iot_thing_groups_pk")
  id                           String?
  creation_date                DateTime? @db.Timestamp(6)
  parent_group_name            String?
  root_to_parent_thing_groups  Json?
  name                         String?
  attribute_payload_attributes Json?
  attribute_payload_merge      Boolean?
  thing_group_description      String?
  version                      BigInt?
}

model aws_iot_thing_types {
  cq_id                 String    @unique @db.Uuid
  cq_meta               Json?
  account_id            String?
  region                String?
  tags                  Json?
  arn                   String    @id(map: "aws_iot_thing_types_pk")
  creation_date         DateTime? @db.Timestamp(6)
  deprecated            Boolean?
  deprecation_date      DateTime? @db.Timestamp(6)
  name                  String?
  searchable_attributes String[]
  description           String?
}

model aws_iot_things {
  cq_id      String   @unique @db.Uuid
  cq_meta    Json?
  account_id String?
  region     String?
  principals String[]
  attributes Json?
  arn        String   @id(map: "aws_iot_things_pk")
  name       String?
  type_name  String?
  version    BigInt?
}

model aws_iot_topic_rule_actions {
  cq_id                                String               @id(map: "aws_iot_topic_rule_actions_pk") @db.Uuid
  cq_meta                              Json?
  topic_rule_cq_id                     String?              @db.Uuid
  cloudwatch_alarm_alarm_name          String?
  cloudwatch_alarm_role_arn            String?
  cloudwatch_alarm_state_reason        String?
  cloudwatch_alarm_state_value         String?
  cloudwatch_logs_log_group_name       String?
  cloudwatch_logs_role_arn             String?
  cloudwatch_metric_metric_name        String?
  cloudwatch_metric_metric_namespace   String?
  cloudwatch_metric_metric_unit        String?
  cloudwatch_metric_metric_value       String?
  cloudwatch_metric_role_arn           String?
  cloudwatch_metric_metric_timestamp   String?
  dynamo_db_hash_key_field             String?
  dynamo_db_hash_key_value             String?
  dynamo_db_role_arn                   String?
  dynamo_db_table_name                 String?
  dynamo_db_hash_key_type              String?
  dynamo_db_operation                  String?
  dynamo_db_payload_field              String?
  dynamo_db_range_key_field            String?
  dynamo_db_range_key_type             String?
  dynamo_db_range_key_value            String?
  dynamo_db_v2_put_item_table_name     String?
  dynamo_db_v2_role_arn                String?
  elasticsearch_endpoint               String?
  elasticsearch_id                     String?
  elasticsearch_index                  String?
  elasticsearch_role_arn               String?
  elasticsearch_type                   String?
  firehose_delivery_stream_name        String?
  firehose_role_arn                    String?
  firehose_batch_mode                  Boolean?
  firehose_separator                   String?
  http_url                             String?
  http_auth_sigv4_role_arn             String?
  http_auth_sigv4_service_name         String?
  http_auth_sigv4_signing_region       String?
  http_confirmation_url                String?
  http_headers                         Json?
  iot_analytics_batch_mode             Boolean?
  iot_analytics_channel_arn            String?
  iot_analytics_channel_name           String?
  iot_analytics_role_arn               String?
  iot_events_input_name                String?
  iot_events_role_arn                  String?
  iot_events_batch_mode                Boolean?
  iot_events_message_id                String?
  iot_site_wise                        Json?
  kafka_client_properties              Json?
  kafka_destination_arn                String?
  kafka_topic                          String?
  kafka_key                            String?
  kafka_partition                      String?
  kinesis_role_arn                     String?
  kinesis_stream_name                  String?
  kinesis_partition_key                String?
  lambda_function_arn                  String?
  open_search_endpoint                 String?
  open_search_id                       String?
  open_search_index                    String?
  open_search_role_arn                 String?
  open_search_type                     String?
  republish_role_arn                   String?
  republish_topic                      String?
  republish_qos                        Int?
  s3_bucket_name                       String?
  s3_key                               String?
  s3_role_arn                          String?
  s3_canned_acl                        String?
  salesforce_token                     String?
  salesforce_url                       String?
  sns_role_arn                         String?
  sns_target_arn                       String?
  sns_message_format                   String?
  sqs_queue_url                        String?
  sqs_role_arn                         String?
  sqs_use_base64                       Boolean?
  step_functions_role_arn              String?
  step_functions_state_machine_name    String?
  step_functions_execution_name_prefix String?
  timestream_database_name             String?
  timestream_dimensions                Json?
  timestream_role_arn                  String?
  timestream_table_name                String?
  timestream_timestamp_unit            String?
  timestream_timestamp_value           String?
  aws_iot_topic_rules                  aws_iot_topic_rules? @relation(fields: [topic_rule_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_iot_topic_rules {
  cq_id                                             String                       @unique @db.Uuid
  cq_meta                                           Json?
  account_id                                        String?
  region                                            String?
  tags                                              Json?
  aws_iot_sql_version                               String?
  created_at                                        DateTime?                    @db.Timestamp(6)
  description                                       String?
  error_action_cloudwatch_alarm_name                String?
  error_action_cloudwatch_alarm_role_arn            String?
  error_action_cloudwatch_alarm_state_reason        String?
  error_action_cloudwatch_alarm_state_value         String?
  error_action_cloudwatch_logs_log_group_name       String?
  error_action_cloudwatch_logs_role_arn             String?
  error_action_cloudwatch_metric_metric_name        String?
  error_action_cloudwatch_metric_metric_namespace   String?
  error_action_cloudwatch_metric_unit               String?
  error_action_cloudwatch_metric_value              String?
  error_action_cloudwatch_metric_role_arn           String?
  error_action_cloudwatch_metric_timestamp          String?
  error_action_dynamo_db_hash_key_field             String?
  error_action_dynamo_db_hash_key_value             String?
  error_action_dynamo_db_role_arn                   String?
  error_action_dynamo_db_table_name                 String?
  error_action_dynamo_db_hash_key_type              String?
  error_action_dynamo_db_operation                  String?
  error_action_dynamo_db_payload_field              String?
  error_action_dynamo_db_range_key_field            String?
  error_action_dynamo_db_range_key_type             String?
  error_action_dynamo_db_range_key_value            String?
  error_action_dynamo_db_v2_put_item_table_name     String?
  error_action_dynamo_db_v2_role_arn                String?
  error_action_elasticsearch_endpoint               String?
  error_action_elasticsearch_id                     String?
  error_action_elasticsearch_index                  String?
  error_action_elasticsearch_role_arn               String?
  error_action_elasticsearch_type                   String?
  error_action_firehose_delivery_stream_name        String?
  error_action_firehose_role_arn                    String?
  error_action_firehose_batch_mode                  Boolean?
  error_action_firehose_separator                   String?
  error_action_http_url                             String?
  error_action_http_auth_sigv4_role_arn             String?
  error_action_http_auth_sigv4_service_name         String?
  error_action_http_auth_sigv4_signing_region       String?
  error_action_http_confirmation_url                String?
  error_action_http_headers                         Json?
  error_action_iot_analytics_batch_mode             Boolean?
  error_action_iot_analytics_channel_arn            String?
  error_action_iot_analytics_channel_name           String?
  error_action_iot_analytics_role_arn               String?
  error_action_iot_events_input_name                String?
  error_action_iot_events_role_arn                  String?
  error_action_iot_events_batch_mode                Boolean?
  error_action_iot_events_message_id                String?
  error_action_iot_site_wise                        Json?
  error_action_kafka_client_properties              Json?
  error_action_kafka_destination_arn                String?
  error_action_kafka_topic                          String?
  error_action_kafka_key                            String?
  error_action_kafka_partition                      String?
  error_action_kinesis_role_arn                     String?
  error_action_kinesis_stream_name                  String?
  error_action_kinesis_partition_key                String?
  error_action_lambda_function_arn                  String?
  error_action_open_search_endpoint                 String?
  error_action_open_search_id                       String?
  error_action_open_search_index                    String?
  error_action_open_search_role_arn                 String?
  error_action_open_search_type                     String?
  error_action_republish_role_arn                   String?
  error_action_republish_topic                      String?
  error_action_republish_qos                        Int?
  error_action_s3_bucket_name                       String?
  error_action_s3_key                               String?
  error_action_s3_role_arn                          String?
  error_action_s3_canned_acl                        String?
  error_action_salesforce_token                     String?
  error_action_salesforce_url                       String?
  error_action_sns_role_arn                         String?
  error_action_sns_target_arn                       String?
  error_action_sns_message_format                   String?
  error_action_sqs_queue_url                        String?
  error_action_sqs_role_arn                         String?
  error_action_sqs_use_base64                       Boolean?
  error_action_step_functions_role_arn              String?
  error_action_step_functions_state_machine_name    String?
  error_action_step_functions_execution_name_prefix String?
  error_action_timestream_database_name             String?
  error_action_timestream_dimensions                Json?
  error_action_timestream_role_arn                  String?
  error_action_timestream_table_name                String?
  error_action_timestream_timestamp_unit            String?
  error_action_timestream_timestamp_value           String?
  rule_disabled                                     Boolean?
  rule_name                                         String?
  sql                                               String?
  arn                                               String                       @id(map: "aws_iot_topic_rules_pk")
  aws_iot_topic_rule_actions                        aws_iot_topic_rule_actions[]
}

model aws_kms_keys {
  cq_id                           String    @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String?
  region                          String?
  rotation_enabled                Boolean?
  tags                            Json?
  id                              String?
  aws_account_id                  String?
  arn                             String    @id(map: "aws_kms_keys_pk")
  cloud_hsm_cluster_id            String?
  creation_date                   DateTime? @db.Timestamp(6)
  custom_key_store_id             String?
  deletion_date                   DateTime? @db.Timestamp(6)
  description                     String?
  enabled                         Boolean?
  encryption_algorithms           String[]
  expiration_model                String?
  manager                         String?
  key_spec                        String?
  key_state                       String?
  key_usage                       String?
  mac_algorithms                  String[]
  multi_region                    Boolean?
  multi_region_key_type           String?
  primary_key_arn                 String?
  primary_key_region              String?
  replica_keys                    Json?
  origin                          String?
  pending_deletion_window_in_days Int?
  signing_algorithms              String[]
  valid_to                        DateTime? @db.Timestamp(6)
}

model aws_lambda_function_aliases {
  cq_id                                     String                @id(map: "aws_lambda_function_aliases_pk") @db.Uuid
  cq_meta                                   Json?
  function_cq_id                            String?               @db.Uuid
  function_arn                              String?
  arn                                       String?
  description                               String?
  function_version                          String?
  name                                      String?
  revision_id                               String?
  routing_config_additional_version_weights Json?
  url_config_auth_type                      String?
  url_config_creation_time                  DateTime?             @db.Timestamp(6)
  url_config_function_arn                   String?
  url_config_function_url                   String?
  url_config_last_modified_time             DateTime?             @db.Timestamp(6)
  url_config_cors                           Json?
  aws_lambda_functions                      aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_concurrency_configs {
  cq_id                                       String                @id(map: "aws_lambda_function_concurrency_configs_pk") @db.Uuid
  cq_meta                                     Json?
  function_cq_id                              String?               @db.Uuid
  allocated_provisioned_concurrent_executions Int?
  available_provisioned_concurrent_executions Int?
  function_arn                                String?
  last_modified                               DateTime?             @db.Timestamp(6)
  requested_provisioned_concurrent_executions Int?
  status                                      String?
  status_reason                               String?
  aws_lambda_functions                        aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_event_invoke_configs {
  cq_id                        String                @id(map: "aws_lambda_function_event_invoke_configs_pk") @db.Uuid
  cq_meta                      Json?
  function_cq_id               String?               @db.Uuid
  on_failure_destination       String?
  on_success_destination       String?
  function_arn                 String?
  last_modified                DateTime?             @db.Timestamp(6)
  maximum_event_age_in_seconds Int?
  maximum_retry_attempts       Int?
  aws_lambda_functions         aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_event_source_mappings {
  cq_id                               String                @id(map: "aws_lambda_function_event_source_mappings_pk") @db.Uuid
  cq_meta                             Json?
  function_cq_id                      String?               @db.Uuid
  batch_size                          Int?
  bisect_batch_on_function_error      Boolean?
  on_failure_destination              String?
  on_success_destination              String?
  event_source_arn                    String?
  criteria_filters                    String[]
  function_arn                        String?
  function_response_types             String[]
  last_modified                       DateTime?             @db.Timestamp(6)
  last_processing_result              String?
  maximum_batching_window_in_seconds  Int?
  maximum_record_age_in_seconds       Int?
  maximum_retry_attempts              Int?
  parallelization_factor              Int?
  queues                              String[]
  self_managed_event_source_endpoints Json?
  source_access_configurations        Json?
  starting_position                   String?
  starting_position_timestamp         DateTime?             @db.Timestamp(6)
  state                               String?
  state_transition_reason             String?
  topics                              String[]
  tumbling_window_in_seconds          Int?
  uuid                                String?
  aws_lambda_functions                aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_file_system_configs {
  cq_id                String                @id(map: "aws_lambda_function_file_system_configs_pk") @db.Uuid
  cq_meta              Json?
  function_cq_id       String?               @db.Uuid
  function_arn         String?
  arn                  String?
  local_mount_path     String?
  aws_lambda_functions aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_layers {
  cq_id                       String                @id(map: "aws_lambda_function_layers_pk") @db.Uuid
  cq_meta                     Json?
  function_cq_id              String?               @db.Uuid
  function_arn                String?
  arn                         String?
  code_size                   BigInt?
  signing_job_arn             String?
  signing_profile_version_arn String?
  aws_lambda_functions        aws_lambda_functions? @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_version_file_system_configs {
  cq_id                        String                        @id(map: "aws_lambda_function_version_file_system_configs_pk") @db.Uuid
  cq_meta                      Json?
  function_version_cq_id       String?                       @db.Uuid
  arn                          String?
  local_mount_path             String?
  aws_lambda_function_versions aws_lambda_function_versions? @relation(fields: [function_version_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_lambda_function_version_file_sy_function_version_cq_id_fkey")
}

model aws_lambda_function_version_layers {
  cq_id                        String                        @id(map: "aws_lambda_function_version_layers_pk") @db.Uuid
  cq_meta                      Json?
  function_version_cq_id       String?                       @db.Uuid
  arn                          String?
  code_size                    BigInt?
  signing_job_arn              String?
  signing_profile_version_arn  String?
  aws_lambda_function_versions aws_lambda_function_versions? @relation(fields: [function_version_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_function_versions {
  cq_id                                           String                                            @id(map: "aws_lambda_function_versions_pk") @db.Uuid
  cq_meta                                         Json?
  function_cq_id                                  String?                                           @db.Uuid
  architectures                                   String[]
  code_sha256                                     String?
  code_size                                       BigInt?
  dead_letter_config_target_arn                   String?
  description                                     String?
  environment_error_error_code                    String?
  environment_error_message                       String?
  environment_variables                           Json?
  ephemeral_storage_size                          Int?
  function_arn                                    String?
  function_name                                   String?
  handler                                         String?
  error_code                                      String?
  error_message                                   String?
  image_config_command                            String[]
  image_config_entry_point                        String[]
  image_config_working_directory                  String?
  kms_key_arn                                     String?
  last_modified                                   DateTime?                                         @db.Timestamp(6)
  last_update_status                              String?
  last_update_status_reason                       String?
  last_update_status_reason_code                  String?
  master_arn                                      String?
  memory_size                                     Int?
  package_type                                    String?
  revision_id                                     String?
  role                                            String?
  runtime                                         String?
  signing_job_arn                                 String?
  signing_profile_version_arn                     String?
  state                                           String?
  state_reason                                    String?
  state_reason_code                               String?
  timeout                                         Int?
  tracing_config_mode                             String?
  version                                         String?
  vpc_config_security_group_ids                   String[]
  vpc_config_subnet_ids                           String[]
  vpc_config_vpc_id                               String?
  aws_lambda_functions                            aws_lambda_functions?                             @relation(fields: [function_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_lambda_function_version_file_system_configs aws_lambda_function_version_file_system_configs[]
  aws_lambda_function_version_layers              aws_lambda_function_version_layers[]
}

model aws_lambda_functions {
  cq_id                                                  String                                      @unique @db.Uuid
  cq_meta                                                Json?
  account_id                                             String?
  region                                                 String?
  policy_document                                        Json?
  policy_revision_id                                     String?
  code_signing_allowed_publishers_version_arns           String[]
  code_signing_config_arn                                String?
  code_signing_config_id                                 String?
  code_signing_policies_untrusted_artifact_on_deployment String?
  code_signing_description                               String?
  code_signing_last_modified                             DateTime?                                   @db.Timestamp(6)
  code_image_uri                                         String?
  code_location                                          String?
  code_repository_type                                   String?
  code_resolved_image_uri                                String?
  concurrency_reserved_concurrent_executions             Int?
  architectures                                          String[]
  code_sha256                                            String?
  code_size                                              BigInt?
  dead_letter_config_target_arn                          String?
  description                                            String?
  environment_error_code                                 String?
  environment_error_message                              String?
  environment_variables                                  Json?
  ephemeral_storage_size                                 Int?
  arn                                                    String                                      @id(map: "aws_lambda_functions_pk")
  name                                                   String?
  handler                                                String?
  error_code                                             String?
  error_message                                          String?
  image_config_command                                   String[]
  image_config_entry_point                               String[]
  image_config_working_directory                         String?
  kms_key_arn                                            String?
  last_modified                                          DateTime?                                   @db.Timestamp(6)
  last_update_status                                     String?
  last_update_status_reason                              String?
  last_update_status_reason_code                         String?
  master_arn                                             String?
  memory_size                                            Int?
  package_type                                           String?
  revision_id                                            String?
  role                                                   String?
  runtime                                                String?
  signing_job_arn                                        String?
  signing_profile_version_arn                            String?
  state                                                  String?
  state_reason                                           String?
  state_reason_code                                      String?
  timeout                                                Int?
  tracing_config_mode                                    String?
  version                                                String?
  vpc_config_security_group_ids                          String[]
  vpc_config_subnet_ids                                  String[]
  vpc_config_vpc_id                                      String?
  tags                                                   Json?
  aws_lambda_function_aliases                            aws_lambda_function_aliases[]
  aws_lambda_function_concurrency_configs                aws_lambda_function_concurrency_configs[]
  aws_lambda_function_event_invoke_configs               aws_lambda_function_event_invoke_configs[]
  aws_lambda_function_event_source_mappings              aws_lambda_function_event_source_mappings[]
  aws_lambda_function_file_system_configs                aws_lambda_function_file_system_configs[]
  aws_lambda_function_layers                             aws_lambda_function_layers[]
  aws_lambda_function_versions                           aws_lambda_function_versions[]
}

model aws_lambda_layer_version_policies {
  cq_id                     String                     @id(map: "aws_lambda_layer_version_policies_pk") @db.Uuid
  cq_meta                   Json?
  layer_version_cq_id       String?                    @db.Uuid
  layer_version             BigInt?
  policy                    String?
  revision_id               String?
  aws_lambda_layer_versions aws_lambda_layer_versions? @relation(fields: [layer_version_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_lambda_layer_versions {
  cq_id                             String                              @id(map: "aws_lambda_layer_versions_pk") @db.Uuid
  cq_meta                           Json?
  layer_cq_id                       String?                             @db.Uuid
  compatible_runtimes               String[]
  created_date                      DateTime?                           @db.Timestamp(6)
  description                       String?
  layer_version_arn                 String?
  license_info                      String?
  version                           BigInt?
  aws_lambda_layers                 aws_lambda_layers?                  @relation(fields: [layer_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_lambda_layer_version_policies aws_lambda_layer_version_policies[]
}

model aws_lambda_layers {
  cq_id                                       String                      @unique @db.Uuid
  cq_meta                                     Json?
  account_id                                  String?
  region                                      String?
  latest_matching_version_compatible_runtimes String[]
  latest_matching_version_created_date        DateTime?                   @db.Timestamp(6)
  latest_matching_version_description         String?
  latest_matching_version_layer_version_arn   String?
  latest_matching_version_license_info        String?
  latest_matching_version                     BigInt?
  arn                                         String                      @id(map: "aws_lambda_layers_pk")
  name                                        String?
  aws_lambda_layer_versions                   aws_lambda_layer_versions[]
}

model aws_lambda_runtimes {
  cq_id   String @unique @db.Uuid
  cq_meta Json?
  name    String @id(map: "aws_lambda_runtimes_pk")
}

model aws_mq_broker_configuration_revisions {
  cq_id                        String                        @id(map: "aws_mq_broker_configuration_revisions_pk") @db.Uuid
  cq_meta                      Json?
  broker_configuration_cq_id   String?                       @db.Uuid
  configuration_id             String?
  created                      DateTime?                     @db.Timestamp(6)
  data                         Json?
  description                  String?
  aws_mq_broker_configurations aws_mq_broker_configurations? @relation(fields: [broker_configuration_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_mq_broker_configuration_rev_broker_configuration_cq_id_fkey")
}

model aws_mq_broker_configurations {
  cq_id                                 String                                  @id(map: "aws_mq_broker_configurations_pk") @db.Uuid
  cq_meta                               Json?
  broker_cq_id                          String?                                 @db.Uuid
  account_id                            String?
  region                                String?
  arn                                   String?
  authentication_strategy               String?
  created                               DateTime?                               @db.Timestamp(6)
  description                           String?
  engine_type                           String?
  engine_version                        String?
  id                                    String?
  latest_revision_created               DateTime?                               @db.Timestamp(6)
  latest_revision                       Int?
  latest_revision_description           String?
  name                                  String?
  tags                                  Json?
  aws_mq_brokers                        aws_mq_brokers?                         @relation(fields: [broker_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_mq_broker_configuration_revisions aws_mq_broker_configuration_revisions[]
}

model aws_mq_broker_users {
  cq_id          String          @id(map: "aws_mq_broker_users_pk") @db.Uuid
  cq_meta        Json?
  broker_cq_id   String?         @db.Uuid
  account_id     String?
  region         String?
  console_access Boolean?
  groups         String[]
  pending        Json?
  username       String?
  aws_mq_brokers aws_mq_brokers? @relation(fields: [broker_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_mq_brokers {
  cq_id                                String                         @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  region                               String?
  authentication_strategy              String?
  auto_minor_version_upgrade           Boolean?
  arn                                  String?
  id                                   String
  broker_instances                     Json?
  broker_name                          String?
  broker_state                         String?
  created                              DateTime?                      @db.Timestamp(6)
  deployment_mode                      String?
  encryption_options_use_aws_owned_key Boolean?
  encryption_options_kms_key_id        String?
  engine_type                          String?
  engine_version                       String?
  host_instance_type                   String?
  ldap_server_metadata                 Json?
  logs                                 Json?
  maintenance_window_start_time        Json?
  pending_authentication_strategy      String?
  pending_engine_version               String?
  pending_host_instance_type           String?
  pending_ldap_server_metadata         Json?
  pending_security_groups              String[]
  publicly_accessible                  Boolean?
  security_groups                      String[]
  storage_type                         String?
  subnet_ids                           String[]
  tags                                 Json?
  aws_mq_broker_configurations         aws_mq_broker_configurations[]
  aws_mq_broker_users                  aws_mq_broker_users[]

  @@id([account_id, id], map: "aws_mq_brokers_pk")
}

model aws_organizations_accounts {
  cq_id            String    @unique @db.Uuid
  cq_meta          Json?
  account_id       String
  tags             Json?
  arn              String?
  email            String?
  id               String
  joined_method    String?
  joined_timestamp DateTime? @db.Timestamp(6)
  name             String?
  status           String?

  @@id([account_id, id], map: "aws_organizations_accounts_pk")
}

model aws_qldb_ledger_journal_kinesis_streams {
  cq_id                String            @id(map: "aws_qldb_ledger_journal_kinesis_streams_pk") @db.Uuid
  cq_meta              Json?
  ledger_cq_id         String?           @db.Uuid
  stream_arn           String?
  aggregation_enabled  Boolean?
  ledger_name          String?
  role_arn             String?
  status               String?
  stream_id            String?
  stream_name          String?
  arn                  String?
  creation_time        DateTime?         @db.Timestamp(6)
  error_cause          String?
  exclusive_end_time   DateTime?         @db.Timestamp(6)
  inclusive_start_time DateTime?         @db.Timestamp(6)
  aws_qldb_ledgers     aws_qldb_ledgers? @relation(fields: [ledger_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_qldb_ledger_journal_s3_exports {
  cq_id                  String            @id(map: "aws_qldb_ledger_journal_s3_exports_pk") @db.Uuid
  cq_meta                Json?
  ledger_cq_id           String?           @db.Uuid
  exclusive_end_time     DateTime?         @db.Timestamp(6)
  export_creation_time   DateTime?         @db.Timestamp(6)
  export_id              String?
  inclusive_start_time   DateTime?         @db.Timestamp(6)
  ledger_name            String?
  role_arn               String?
  bucket                 String?
  object_encryption_type String?
  kms_key_arn            String?
  prefix                 String?
  status                 String?
  output_format          String?
  aws_qldb_ledgers       aws_qldb_ledgers? @relation(fields: [ledger_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_qldb_ledgers {
  cq_id                                   String                                    @unique @db.Uuid
  cq_meta                                 Json?
  account_id                              String?
  region                                  String?
  tags                                    Json?
  arn                                     String                                    @id(map: "aws_qldb_ledgers_pk")
  creation_date_time                      DateTime?                                 @db.Timestamp(6)
  deletion_protection                     Boolean?
  encryption_status                       String?
  kms_key_arn                             String?
  inaccessible_kms_key_date_time          DateTime?                                 @db.Timestamp(6)
  name                                    String?
  permissions_mode                        String?
  state                                   String?
  aws_qldb_ledger_journal_kinesis_streams aws_qldb_ledger_journal_kinesis_streams[]
  aws_qldb_ledger_journal_s3_exports      aws_qldb_ledger_journal_s3_exports[]
}

model aws_rds_certificates {
  cq_id                        String    @unique @db.Uuid
  cq_meta                      Json?
  account_id                   String
  region                       String?
  arn                          String
  certificate_identifier       String?
  certificate_type             String?
  customer_override            Boolean?
  customer_override_valid_till DateTime? @db.Timestamp(6)
  thumbprint                   String?
  valid_from                   DateTime? @db.Timestamp(6)
  valid_till                   DateTime? @db.Timestamp(6)

  @@id([account_id, arn], map: "aws_rds_certificates_pk")
}

model aws_rds_cluster_associated_roles {
  cq_id            String            @id(map: "aws_rds_cluster_associated_roles_pk") @db.Uuid
  cq_meta          Json?
  cluster_cq_id    String?           @db.Uuid
  feature_name     String?
  role_arn         String?
  status           String?
  aws_rds_clusters aws_rds_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_cluster_db_cluster_members {
  cq_id                             String            @id(map: "aws_rds_cluster_db_cluster_members_pk") @db.Uuid
  cq_meta                           Json?
  cluster_cq_id                     String?           @db.Uuid
  db_cluster_parameter_group_status String?
  db_instance_identifier            String?
  is_cluster_writer                 Boolean?
  promotion_tier                    Int?
  aws_rds_clusters                  aws_rds_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_cluster_domain_memberships {
  cq_id            String            @id(map: "aws_rds_cluster_domain_memberships_pk") @db.Uuid
  cq_meta          Json?
  cluster_cq_id    String?           @db.Uuid
  domain           String?
  fqdn             String?
  iam_role_name    String?
  status           String?
  aws_rds_clusters aws_rds_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_cluster_parameter_groups {
  cq_id                      String                       @unique @db.Uuid
  cq_meta                    Json?
  account_id                 String?
  region                     String?
  arn                        String                       @id(map: "aws_rds_cluster_parameter_groups_pk")
  name                       String?
  family                     String?
  description                String?
  tags                       Json?
  aws_rds_cluster_parameters aws_rds_cluster_parameters[]
}

model aws_rds_cluster_parameters {
  cq_id                            String                            @id(map: "aws_rds_cluster_parameters_pk") @db.Uuid
  cq_meta                          Json?
  cluster_parameter_group_cq_id    String?                           @db.Uuid
  allowed_values                   String?
  apply_method                     String?
  apply_type                       String?
  data_type                        String?
  description                      String?
  is_modifiable                    Boolean?
  minimum_engine_version           String?
  parameter_name                   String?
  parameter_value                  String?
  source                           String?
  supported_engine_modes           String[]
  aws_rds_cluster_parameter_groups aws_rds_cluster_parameter_groups? @relation(fields: [cluster_parameter_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_cluster_snapshots {
  cq_id                               String    @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String?
  region                              String?
  allocated_storage                   Int?
  availability_zones                  String[]
  cluster_create_time                 DateTime? @db.Timestamp(6)
  db_cluster_identifier               String?
  arn                                 String    @id(map: "aws_rds_cluster_snapshots_pk")
  db_cluster_snapshot_identifier      String?
  engine                              String?
  engine_mode                         String?
  engine_version                      String?
  iam_database_authentication_enabled Boolean?
  kms_key_id                          String?
  license_model                       String?
  master_username                     String?
  percent_progress                    Int?
  port                                Int?
  snapshot_create_time                DateTime? @db.Timestamp(6)
  snapshot_type                       String?
  source_db_cluster_snapshot_arn      String?
  status                              String?
  storage_encrypted                   Boolean?
  vpc_id                              String?
  tags                                Json?
  attributes                          Json?
}

model aws_rds_cluster_vpc_security_groups {
  cq_id                 String            @id(map: "aws_rds_cluster_vpc_security_groups_pk") @db.Uuid
  cq_meta               Json?
  cluster_cq_id         String?           @db.Uuid
  status                String?
  vpc_security_group_id String?
  aws_rds_clusters      aws_rds_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_clusters {
  cq_id                                                       String                                @unique @db.Uuid
  cq_meta                                                     Json?
  account_id                                                  String
  region                                                      String?
  activity_stream_kinesis_stream_name                         String?
  activity_stream_kms_key_id                                  String?
  activity_stream_mode                                        String?
  activity_stream_status                                      String?
  allocated_storage                                           Int?
  availability_zones                                          String[]
  backtrack_consumed_change_records                           BigInt?
  backtrack_window                                            BigInt?
  backup_retention_period                                     Int?
  capacity                                                    Int?
  character_set_name                                          String?
  clone_group_id                                              String?
  cluster_create_time                                         DateTime?                             @db.Timestamp(6)
  copy_tags_to_snapshot                                       Boolean?
  cross_account_clone                                         Boolean?
  custom_endpoints                                            String[]
  arn                                                         String?
  db_cluster_identifier                                       String?
  db_cluster_parameter_group                                  String?
  db_cluster_option_group_memberships                         Json?
  db_subnet_group                                             String?
  database_name                                               String?
  id                                                          String
  deletion_protection                                         Boolean?
  earliest_backtrack_time                                     DateTime?                             @db.Timestamp(6)
  earliest_restorable_time                                    DateTime?                             @db.Timestamp(6)
  enabled_cloudwatch_logs_exports                             String[]
  endpoint                                                    String?
  engine                                                      String?
  engine_mode                                                 String?
  engine_version                                              String?
  global_write_forwarding_requested                           Boolean?
  global_write_forwarding_status                              String?
  hosted_zone_id                                              String?
  http_endpoint_enabled                                       Boolean?
  iam_database_authentication_enabled                         Boolean?
  kms_key_id                                                  String?
  latest_restorable_time                                      DateTime?                             @db.Timestamp(6)
  master_username                                             String?
  multi_az                                                    Boolean?
  pending_modified_values_db_cluster_identifier               String?
  pending_modified_values_engine_version                      String?
  pending_modified_values_iam_database_authentication_enabled Boolean?
  pending_modified_values_master_user_password                String?
  pending_cloudwatch_logs_types_to_disable                    String[]
  pending_cloudwatch_logs_types_to_enable                     String[]
  percent_progress                                            String?
  port                                                        Int?
  preferred_backup_window                                     String?
  preferred_maintenance_window                                String?
  read_replica_identifiers                                    String[]
  reader_endpoint                                             String?
  replication_source_identifier                               String?
  scaling_configuration_info_auto_pause                       Boolean?
  scaling_configuration_info_max_capacity                     Int?
  scaling_configuration_info_min_capacity                     Int?
  scaling_configuration_info_seconds_until_auto_pause         Int?
  scaling_configuration_info_timeout_action                   String?
  status                                                      String?
  storage_encrypted                                           Boolean?
  tags                                                        Json?
  aws_rds_cluster_associated_roles                            aws_rds_cluster_associated_roles[]
  aws_rds_cluster_db_cluster_members                          aws_rds_cluster_db_cluster_members[]
  aws_rds_cluster_domain_memberships                          aws_rds_cluster_domain_memberships[]
  aws_rds_cluster_vpc_security_groups                         aws_rds_cluster_vpc_security_groups[]

  @@id([account_id, id], map: "aws_rds_clusters_pk")
}

model aws_rds_db_parameter_groups {
  cq_id                 String                  @unique @db.Uuid
  cq_meta               Json?
  account_id            String?
  region                String?
  arn                   String                  @id(map: "aws_rds_db_parameter_groups_pk")
  family                String?
  name                  String?
  description           String?
  tags                  Json?
  aws_rds_db_parameters aws_rds_db_parameters[]
}

model aws_rds_db_parameters {
  cq_id                       String                       @id(map: "aws_rds_db_parameters_pk") @db.Uuid
  cq_meta                     Json?
  db_parameter_group_cq_id    String?                      @db.Uuid
  allowed_values              String?
  apply_method                String?
  apply_type                  String?
  data_type                   String?
  description                 String?
  is_modifiable               Boolean?
  minimum_engine_version      String?
  parameter_name              String?
  parameter_value             String?
  source                      String?
  supported_engine_modes      String[]
  aws_rds_db_parameter_groups aws_rds_db_parameter_groups? @relation(fields: [db_parameter_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_db_security_groups {
  cq_id               String  @unique @db.Uuid
  cq_meta             Json?
  account_id          String?
  region              String?
  arn                 String  @id(map: "aws_rds_db_security_groups_pk")
  description         String?
  name                String?
  ec2_security_groups Json?
  ip_ranges           Json?
  owner_id            String?
  vpc_id              String?
  tags                Json?
}

model aws_rds_db_snapshots {
  cq_id                               String    @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String?
  region                              String?
  allocated_storage                   Int?
  availability_zone                   String?
  db_instance_identifier              String?
  arn                                 String    @id(map: "aws_rds_db_snapshots_pk")
  db_snapshot_identifier              String?
  dbi_resource_id                     String?
  encrypted                           Boolean?
  engine                              String?
  engine_version                      String?
  iam_database_authentication_enabled Boolean?
  instance_create_time                DateTime? @db.Timestamp(6)
  iops                                Int?
  kms_key_id                          String?
  license_model                       String?
  master_username                     String?
  option_group_name                   String?
  percent_progress                    Int?
  port                                Int?
  processor_features                  Json?
  snapshot_create_time                DateTime? @db.Timestamp(6)
  snapshot_type                       String?
  source_db_snapshot_identifier       String?
  source_region                       String?
  status                              String?
  storage_type                        String?
  tde_credential_arn                  String?
  timezone                            String?
  vpc_id                              String?
  tags                                Json?
  attributes                          Json?
}

model aws_rds_event_subscriptions {
  cq_id                      String   @unique @db.Uuid
  cq_meta                    Json?
  account_id                 String?
  region                     String?
  cust_subscription_id       String?
  customer_aws_id            String?
  enabled                    Boolean?
  event_categories_list      String[]
  arn                        String   @id(map: "aws_rds_event_subscriptions_pk")
  sns_topic_arn              String?
  source_ids_list            String[]
  source_type                String?
  status                     String?
  subscription_creation_time String?
  tags                       Json?
}

model aws_rds_instance_associated_roles {
  cq_id             String             @id(map: "aws_rds_instance_associated_roles_pk") @db.Uuid
  cq_meta           Json?
  instance_cq_id    String?            @db.Uuid
  instance_id       String?
  feature_name      String?
  role_arn          String?
  status            String?
  aws_rds_instances aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_db_instance_automated_backups_replications {
  cq_id                             String             @id(map: "aws_rds_instance_db_instance_automated_backups_replications_pk") @db.Uuid
  cq_meta                           Json?
  instance_cq_id                    String?            @db.Uuid
  instance_id                       String?
  db_instance_automated_backups_arn String?
  aws_rds_instances                 aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_rds_instance_db_instance_automated_back_instance_cq_id_fkey")
}

model aws_rds_instance_db_parameter_groups {
  cq_id                   String             @id(map: "aws_rds_instance_db_parameter_groups_pk") @db.Uuid
  cq_meta                 Json?
  instance_cq_id          String?            @db.Uuid
  instance_id             String?
  db_parameter_group_name String?
  parameter_apply_status  String?
  aws_rds_instances       aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_db_security_groups {
  cq_id                  String             @id(map: "aws_rds_instance_db_security_groups_pk") @db.Uuid
  cq_meta                Json?
  instance_cq_id         String?            @db.Uuid
  instance_id            String?
  db_security_group_name String?
  status                 String?
  aws_rds_instances      aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_db_subnet_group_subnets {
  cq_id                         String             @id(map: "aws_rds_instance_db_subnet_group_subnets_pk") @db.Uuid
  cq_meta                       Json?
  instance_cq_id                String?            @db.Uuid
  instance_id                   String?
  subnet_availability_zone_name String?
  subnet_identifier             String?
  subnet_outpost_arn            String?
  subnet_status                 String?
  aws_rds_instances             aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_domain_memberships {
  cq_id             String             @id(map: "aws_rds_instance_domain_memberships_pk") @db.Uuid
  cq_meta           Json?
  instance_cq_id    String?            @db.Uuid
  instance_id       String?
  domain            String?
  fqdn              String?
  iam_role_name     String?
  status            String?
  aws_rds_instances aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_option_group_memberships {
  cq_id             String             @id(map: "aws_rds_instance_option_group_memberships_pk") @db.Uuid
  cq_meta           Json?
  instance_cq_id    String?            @db.Uuid
  option_group_name String?
  status            String?
  aws_rds_instances aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instance_vpc_security_groups {
  cq_id                 String             @id(map: "aws_rds_instance_vpc_security_groups_pk") @db.Uuid
  cq_meta               Json?
  instance_cq_id        String?            @db.Uuid
  instance_id           String?
  status                String?
  vpc_security_group_id String?
  aws_rds_instances     aws_rds_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_instances {
  cq_id                                                       String                                                        @unique @db.Uuid
  cq_meta                                                     Json?
  account_id                                                  String?
  region                                                      String?
  allocated_storage                                           Int?
  auto_minor_version_upgrade                                  Boolean?
  availability_zone                                           String?
  aws_backup_recovery_point_arn                               String?
  backup_retention_period                                     Int?
  ca_certificate_identifier                                   String?
  character_set_name                                          String?
  copy_tags_to_snapshot                                       Boolean?
  customer_owned_ip_enabled                                   Boolean?
  cluster_identifier                                          String?
  arn                                                         String                                                        @id(map: "aws_rds_instances_pk")
  db_instance_class                                           String?
  user_instance_id                                            String?
  db_instance_status                                          String?
  db_name                                                     String?
  subnet_group_arn                                            String?
  subnet_group_description                                    String?
  subnet_group_name                                           String?
  subnet_group_subnet_group_status                            String?
  subnet_group_vpc_id                                         String?
  instance_port                                               Int?
  id                                                          String?
  deletion_protection                                         Boolean?
  enabled_cloudwatch_logs_exports                             String[]
  endpoint_address                                            String?
  endpoint_hosted_zone_id                                     String?
  endpoint_port                                               Int?
  engine                                                      String?
  engine_version                                              String?
  enhanced_monitoring_resource_arn                            String?
  iam_database_authentication_enabled                         Boolean?
  instance_create_time                                        DateTime?                                                     @db.Timestamp(6)
  iops                                                        Int?
  kms_key_id                                                  String?
  latest_restorable_time                                      DateTime?                                                     @db.Timestamp(6)
  license_model                                               String?
  listener_endpoint_address                                   String?
  listener_endpoint_hosted_zone_id                            String?
  listener_endpoint_port                                      Int?
  master_username                                             String?
  max_allocated_storage                                       Int?
  monitoring_interval                                         Int?
  monitoring_role_arn                                         String?
  multi_az                                                    Boolean?
  nchar_character_set_name                                    String?
  pending_modified_values_allocated_storage                   Int?
  pending_modified_values_backup_retention_period             Int?
  pending_modified_values_ca_certificate_identifier           String?
  pending_modified_values_db_instance_class                   String?
  pending_modified_values_db_instance_identifier              String?
  pending_modified_values_db_subnet_group_name                String?
  pending_modified_values_engine_version                      String?
  pending_modified_values_iam_database_authentication_enabled Boolean?
  pending_modified_values_iops                                Int?
  pending_modified_values_license_model                       String?
  pending_modified_values_master_user_password                String?
  pending_modified_values_multi_az                            Boolean?
  pending_cloudwatch_logs_types_to_disable                    String[]
  pending_cloudwatch_logs_types_to_enable                     String[]
  pending_modified_values_port                                Int?
  pending_modified_values_processor_features                  Json?
  pending_modified_values_storage_type                        String?
  performance_insights_enabled                                Boolean?
  performance_insights_kms_key_id                             String?
  performance_insights_retention_period                       Int?
  preferred_backup_window                                     String?
  preferred_maintenance_window                                String?
  processor_features                                          Json?
  promotion_tier                                              Int?
  publicly_accessible                                         Boolean?
  read_replica_db_cluster_identifiers                         String[]
  read_replica_db_instance_identifiers                        String[]
  read_replica_source_db_instance_identifier                  String?
  replica_mode                                                String?
  secondary_availability_zone                                 String?
  storage_encrypted                                           Boolean?
  storage_type                                                String?
  tags                                                        Json?
  tde_credential_arn                                          String?
  timezone                                                    String?
  status_infos                                                Json?
  aws_rds_instance_associated_roles                           aws_rds_instance_associated_roles[]
  aws_rds_instance_db_instance_automated_backups_replications aws_rds_instance_db_instance_automated_backups_replications[]
  aws_rds_instance_db_parameter_groups                        aws_rds_instance_db_parameter_groups[]
  aws_rds_instance_db_security_groups                         aws_rds_instance_db_security_groups[]
  aws_rds_instance_db_subnet_group_subnets                    aws_rds_instance_db_subnet_group_subnets[]
  aws_rds_instance_domain_memberships                         aws_rds_instance_domain_memberships[]
  aws_rds_instance_option_group_memberships                   aws_rds_instance_option_group_memberships[]
  aws_rds_instance_vpc_security_groups                        aws_rds_instance_vpc_security_groups[]
}

model aws_rds_subnet_group_subnets {
  cq_id                         String                 @id(map: "aws_rds_subnet_group_subnets_pk") @db.Uuid
  cq_meta                       Json?
  subnet_group_cq_id            String?                @db.Uuid
  subnet_availability_zone_name String?
  subnet_identifier             String?
  subnet_outpost_arn            String?
  subnet_status                 String?
  aws_rds_subnet_groups         aws_rds_subnet_groups? @relation(fields: [subnet_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_rds_subnet_groups {
  cq_id                        String                         @unique @db.Uuid
  cq_meta                      Json?
  account_id                   String?
  region                       String?
  arn                          String                         @id(map: "aws_rds_subnet_groups_pk")
  description                  String?
  name                         String?
  status                       String?
  vpc_id                       String?
  aws_rds_subnet_group_subnets aws_rds_subnet_group_subnets[]
}

model aws_redshift_cluster_deferred_maintenance_windows {
  cq_id                        String                 @id(map: "aws_redshift_cluster_deferred_maintenance_windows_pk") @db.Uuid
  cq_meta                      Json?
  cluster_cq_id                String?                @db.Uuid
  defer_maintenance_end_time   DateTime?              @db.Timestamp(6)
  defer_maintenance_identifier String?
  defer_maintenance_start_time DateTime?              @db.Timestamp(6)
  aws_redshift_clusters        aws_redshift_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_redshift_cluster_deferred_maintenance_wi_cluster_cq_id_fkey")
}

model aws_redshift_cluster_endpoint_vpc_endpoint_network_interfaces {
  cq_id                                       String                                       @id(map: "aws_redshift_cluster_endpoint_vpc_endpoint_network_interface_pk") @db.Uuid
  cq_meta                                     Json?
  cluster_endpoint_vpc_endpoint_cq_id         String?                                      @db.Uuid
  availability_zone                           String?
  network_interface_id                        String?
  private_ip_address                          String?
  subnet_id                                   String?
  aws_redshift_cluster_endpoint_vpc_endpoints aws_redshift_cluster_endpoint_vpc_endpoints? @relation(fields: [cluster_endpoint_vpc_endpoint_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_redshift_cluster_endpoint_cluster_endpoint_vpc_endpoin_fkey")
}

model aws_redshift_cluster_endpoint_vpc_endpoints {
  cq_id                                                         String                                                          @id(map: "aws_redshift_cluster_endpoint_vpc_endpoints_pk") @db.Uuid
  cq_meta                                                       Json?
  cluster_cq_id                                                 String?                                                         @db.Uuid
  vpc_endpoint_id                                               String?
  vpc_id                                                        String?
  aws_redshift_clusters                                         aws_redshift_clusters?                                          @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_redshift_cluster_endpoint_vpc_endpoint_network_interfaces aws_redshift_cluster_endpoint_vpc_endpoint_network_interfaces[]
}

model aws_redshift_cluster_iam_roles {
  cq_id                 String                 @id(map: "aws_redshift_cluster_iam_roles_pk") @db.Uuid
  cq_meta               Json?
  cluster_cq_id         String?                @db.Uuid
  apply_status          String?
  iam_role_arn          String?
  aws_redshift_clusters aws_redshift_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_redshift_cluster_nodes {
  cq_id                 String                 @id(map: "aws_redshift_cluster_nodes_pk") @db.Uuid
  cq_meta               Json?
  cluster_cq_id         String?                @db.Uuid
  node_role             String?
  private_ip_address    String?
  public_ip_address     String?
  aws_redshift_clusters aws_redshift_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_redshift_cluster_parameter_group_status_lists {
  cq_id                                 String                                 @id(map: "aws_redshift_cluster_parameter_group_status_lists_pk") @db.Uuid
  cq_meta                               Json?
  cluster_parameter_group_cq_id         String?                                @db.Uuid
  parameter_apply_error_description     String?
  parameter_apply_status                String?
  parameter_name                        String?
  aws_redshift_cluster_parameter_groups aws_redshift_cluster_parameter_groups? @relation(fields: [cluster_parameter_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_redshift_cluster_paramet_cluster_parameter_group_cq_i_fkey1")
}

model aws_redshift_cluster_parameter_groups {
  cq_id                                             String                                              @id(map: "aws_redshift_cluster_parameter_groups_pk") @db.Uuid
  cq_meta                                           Json?
  cluster_cq_id                                     String?                                             @db.Uuid
  parameter_apply_status                            String?
  parameter_group_name                              String?
  aws_redshift_clusters                             aws_redshift_clusters?                              @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_redshift_cluster_parameter_group_status_lists aws_redshift_cluster_parameter_group_status_lists[]
  aws_redshift_cluster_parameters                   aws_redshift_cluster_parameters[]
}

model aws_redshift_cluster_parameters {
  cq_id                                 String                                 @id(map: "aws_redshift_cluster_parameters_pk") @db.Uuid
  cq_meta                               Json?
  cluster_parameter_group_cq_id         String?                                @db.Uuid
  allowed_values                        String?
  apply_type                            String?
  data_type                             String?
  description                           String?
  is_modifiable                         Boolean?
  minimum_engine_version                String?
  parameter_name                        String?
  parameter_value                       String?
  source                                String?
  aws_redshift_cluster_parameter_groups aws_redshift_cluster_parameter_groups? @relation(fields: [cluster_parameter_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_redshift_cluster_paramete_cluster_parameter_group_cq_i_fkey")
}

model aws_redshift_cluster_security_groups {
  cq_id                       String                 @id(map: "aws_redshift_cluster_security_groups_pk") @db.Uuid
  cq_meta                     Json?
  cluster_cq_id               String?                @db.Uuid
  cluster_security_group_name String?
  status                      String?
  aws_redshift_clusters       aws_redshift_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_redshift_cluster_vpc_security_groups {
  cq_id                 String                 @id(map: "aws_redshift_cluster_vpc_security_groups_pk") @db.Uuid
  cq_meta               Json?
  cluster_cq_id         String?                @db.Uuid
  status                String?
  vpc_security_group_id String?
  aws_redshift_clusters aws_redshift_clusters? @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_redshift_clusters {
  cq_id                                                          String                                              @unique @db.Uuid
  cq_meta                                                        Json?
  account_id                                                     String?
  region                                                         String?
  arn                                                            String                                              @id(map: "aws_redshift_clusters_pk")
  allow_version_upgrade                                          Boolean?
  automated_snapshot_retention_period                            Int?
  availability_zone                                              String?
  availability_zone_relocation_status                            String?
  cluster_availability_status                                    String?
  cluster_create_time                                            DateTime?                                           @db.Timestamp(6)
  id                                                             String?
  cluster_namespace_arn                                          String?
  cluster_public_key                                             String?
  cluster_revision_number                                        String?
  cluster_snapshot_copy_status_destination_region                String?
  cluster_snapshot_copy_status_manual_snapshot_retention_period  Int?
  cluster_snapshot_copy_status_retention_period                  BigInt?
  cluster_snapshot_copy_status_snapshot_copy_grant_name          String?
  cluster_status                                                 String?
  cluster_subnet_group_name                                      String?
  cluster_version                                                String?
  db_name                                                        String?
  data_transfer_progress_current_rate_in_mega_bytes_per_second   Float?
  data_transfer_progress_data_transferred_in_mega_bytes          BigInt?
  data_transfer_progress_elapsed_time_in_seconds                 BigInt?
  data_transfer_progress_estimated_time_to_completion_in_seconds BigInt?
  data_transfer_progress_status                                  String?
  data_transfer_progress_total_data_in_mega_bytes                BigInt?
  elastic_ip_status_elastic_ip                                   String?
  elastic_ip_status                                              String?
  elastic_resize_number_of_node_options                          String?
  encrypted                                                      Boolean?
  endpoint_address                                               String?
  endpoint_port                                                  Int?
  enhanced_vpc_routing                                           Boolean?
  expected_next_snapshot_schedule_time                           DateTime?                                           @db.Timestamp(6)
  expected_next_snapshot_schedule_time_status                    String?
  hsm_status_hsm_client_certificate_identifier                   String?
  hsm_status_hsm_configuration_identifier                        String?
  hsm_status                                                     String?
  kms_key_id                                                     String?
  maintenance_track_name                                         String?
  manual_snapshot_retention_period                               Int?
  master_username                                                String?
  modify_status                                                  String?
  next_maintenance_window_start_time                             DateTime?                                           @db.Timestamp(6)
  node_type                                                      String?
  number_of_nodes                                                Int?
  pending_actions                                                String[]
  pending_modified_values_automated_snapshot_retention_period    Int?
  pending_modified_values_cluster_identifier                     String?
  pending_modified_values_cluster_type                           String?
  pending_modified_values_cluster_version                        String?
  pending_modified_values_encryption_type                        String?
  pending_modified_values_enhanced_vpc_routing                   Boolean?
  pending_modified_values_maintenance_track_name                 String?
  pending_modified_values_master_user_password                   String?
  pending_modified_values_node_type                              String?
  pending_modified_values_number_of_nodes                        Int?
  pending_modified_values_publicly_accessible                    Boolean?
  preferred_maintenance_window                                   String?
  publicly_accessible                                            Boolean?
  resize_info_allow_cancel_resize                                Boolean?
  resize_info_resize_type                                        String?
  restore_status_current_restore_rate_in_mega_bytes_per_second   Float?
  restore_status_elapsed_time_in_seconds                         BigInt?
  restore_status_estimated_time_to_completion_in_seconds         BigInt?
  restore_status_progress_in_mega_bytes                          BigInt?
  restore_status_snapshot_size_in_mega_bytes                     BigInt?
  restore_status                                                 String?
  snapshot_schedule_identifier                                   String?
  snapshot_schedule_state                                        String?
  tags                                                           Json?
  total_storage_capacity_in_mega_bytes                           BigInt?
  vpc_id                                                         String?
  logging_status                                                 Json?
  aws_redshift_cluster_deferred_maintenance_windows              aws_redshift_cluster_deferred_maintenance_windows[]
  aws_redshift_cluster_endpoint_vpc_endpoints                    aws_redshift_cluster_endpoint_vpc_endpoints[]
  aws_redshift_cluster_iam_roles                                 aws_redshift_cluster_iam_roles[]
  aws_redshift_cluster_nodes                                     aws_redshift_cluster_nodes[]
  aws_redshift_cluster_parameter_groups                          aws_redshift_cluster_parameter_groups[]
  aws_redshift_cluster_security_groups                           aws_redshift_cluster_security_groups[]
  aws_redshift_cluster_vpc_security_groups                       aws_redshift_cluster_vpc_security_groups[]
  aws_redshift_snapshots                                         aws_redshift_snapshots[]
}

model aws_redshift_event_subscriptions {
  cq_id                      String    @unique @db.Uuid
  cq_meta                    Json?
  arn                        String    @id(map: "aws_redshift_event_subscriptions_pk")
  account_id                 String?
  region                     String?
  id                         String?
  customer_aws_id            String?
  enabled                    Boolean?
  event_categories_list      String[]
  severity                   String?
  sns_topic_arn              String?
  source_ids_list            String[]
  source_type                String?
  status                     String?
  subscription_creation_time DateTime? @db.Timestamp(6)
  tags                       Json?
}

model aws_redshift_snapshot_accounts_with_restore_access {
  cq_id                  String                  @id(map: "aws_redshift_snapshot_accounts_with_restore_access_pk") @db.Uuid
  cq_meta                Json?
  snapshot_cq_id         String?                 @db.Uuid
  account_alias          String?
  account_id             String?
  aws_redshift_snapshots aws_redshift_snapshots? @relation(fields: [snapshot_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_redshift_snapshot_accounts_with_restore_snapshot_cq_id_fkey")
}

model aws_redshift_snapshots {
  cq_id                                              String                                               @id(map: "aws_redshift_snapshots_pk") @db.Uuid
  cq_meta                                            Json?
  cluster_cq_id                                      String?                                              @db.Uuid
  arn                                                String?
  actual_incremental_backup_size                     Float?
  availability_zone                                  String?
  backup_progress                                    Float?
  cluster_create_time                                DateTime?                                            @db.Timestamp(6)
  cluster_identifier                                 String?
  cluster_version                                    String?
  current_backup_rate                                Float?
  db_name                                            String?
  elapsed_time                                       BigInt?
  encrypted                                          Boolean?
  encrypted_with_hsm                                 Boolean?
  engine_full_version                                String?
  enhanced_vpc_routing                               Boolean?
  estimated_seconds_to_completion                    BigInt?
  kms_key_id                                         String?
  maintenance_track_name                             String?
  manual_snapshot_remaining_days                     Int?
  manual_snapshot_retention_period                   Int?
  master_username                                    String?
  node_type                                          String?
  number_of_nodes                                    Int?
  owner_account                                      String?
  port                                               Int?
  restorable_node_types                              String[]
  snapshot_create_time                               DateTime?                                            @db.Timestamp(6)
  snapshot_identifier                                String?
  snapshot_retention_start_time                      DateTime?                                            @db.Timestamp(6)
  snapshot_type                                      String?
  source_region                                      String?
  status                                             String?
  total_backup_size_in_mega_bytes                    Float?
  vpc_id                                             String?
  tags                                               Json?
  aws_redshift_clusters                              aws_redshift_clusters?                               @relation(fields: [cluster_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
  aws_redshift_snapshot_accounts_with_restore_access aws_redshift_snapshot_accounts_with_restore_access[]
}

model aws_redshift_subnet_group_subnets {
  cq_id                                        String                      @id(map: "aws_redshift_subnet_group_subnets_pk") @db.Uuid
  cq_meta                                      Json?
  subnet_group_cq_id                           String?                     @db.Uuid
  subnet_availability_zone_name                String?
  subnet_availability_zone_supported_platforms String[]
  subnet_identifier                            String?
  subnet_status                                String?
  aws_redshift_subnet_groups                   aws_redshift_subnet_groups? @relation(fields: [subnet_group_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_redshift_subnet_groups {
  cq_id                             String                              @unique @db.Uuid
  cq_meta                           Json?
  account_id                        String?
  region                            String?
  arn                               String                              @id(map: "aws_redshift_subnet_groups_pk")
  cluster_subnet_group_name         String?
  description                       String?
  subnet_group_status               String?
  tags                              Json?
  vpc_id                            String?
  aws_redshift_subnet_group_subnets aws_redshift_subnet_group_subnets[]
}

model aws_regions {
  cq_id         String   @id(map: "aws_regions_pk") @db.Uuid
  cq_meta       Json?
  account_id    String?
  enabled       Boolean?
  endpoint      String?
  opt_in_status String?
  region        String?
  partition     String?
}

model aws_route53_domain_nameservers {
  cq_id               String               @id(map: "aws_route53_domain_nameservers_pk") @db.Uuid
  cq_meta             Json?
  domain_cq_id        String?              @db.Uuid
  name                String?
  glue_ips            String[]
  aws_route53_domains aws_route53_domains? @relation(fields: [domain_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_route53_domains {
  cq_id                                String                           @unique @db.Uuid
  cq_meta                              Json?
  account_id                           String
  admin_contact_address_line1          String?
  admin_contact_address_line2          String?
  admin_contact_city                   String?
  admin_contact_type                   String?
  admin_contact_country_code           String?
  admin_contact_email                  String?
  admin_contact_fax                    String?
  admin_contact_first_name             String?
  admin_contact_last_name              String?
  admin_contact_organization_name      String?
  admin_contact_phone_number           String?
  admin_contact_state                  String?
  admin_contact_zip_code               String?
  admin_contact_extra_params           Json?
  domain_name                          String
  registrant_contact_address_line1     String?
  registrant_contact_address_line2     String?
  registrant_contact_city              String?
  registrant_contact_type              String?
  registrant_contact_country_code      String?
  registrant_contact_email             String?
  registrant_contact_fax               String?
  registrant_contact_first_name        String?
  registrant_contact_last_name         String?
  registrant_contact_organization_name String?
  registrant_contact_phone_number      String?
  registrant_contact_state             String?
  registrant_contact_zip_code          String?
  registrant_contact_extra_params      Json?
  tech_contact_address_line1           String?
  tech_contact_address_line2           String?
  tech_contact_city                    String?
  tech_contact_type                    String?
  tech_contact_country_code            String?
  tech_contact_email                   String?
  tech_contact_fax                     String?
  tech_contact_first_name              String?
  tech_contact_last_name               String?
  tech_contact_organization_name       String?
  tech_contact_phone_number            String?
  tech_contact_state                   String?
  tech_contact_zip_code                String?
  tech_contact_extra_params            Json?
  abuse_contact_email                  String?
  abuse_contact_phone                  String?
  admin_privacy                        Boolean?
  auto_renew                           Boolean?
  creation_date                        DateTime?                        @db.Timestamp(6)
  dns_sec                              String?
  expiration_date                      DateTime?                        @db.Timestamp(6)
  registrant_privacy                   Boolean?
  registrar_name                       String?
  registrar_url                        String?
  registry_domain_id                   String?
  reseller                             String?
  status_list                          String[]
  tech_privacy                         Boolean?
  updated_date                         DateTime?                        @db.Timestamp(6)
  who_is_server                        String?
  tags                                 Json?
  aws_route53_domain_nameservers       aws_route53_domain_nameservers[]

  @@id([account_id, domain_name], map: "aws_route53_domains_pk")
}

model aws_route53_health_checks {
  cq_id                                        String   @unique @db.Uuid
  cq_meta                                      Json?
  account_id                                   String
  cloud_watch_alarm_configuration_dimensions   Json?
  tags                                         Json?
  caller_reference                             String?
  type                                         String?
  alarm_identifier_name                        String?
  alarm_identifier_region                      String?
  child_health_checks                          String[]
  disabled                                     Boolean?
  enable_sni                                   Boolean?
  failure_threshold                            Int?
  fully_qualified_domain_name                  String?
  health_threshold                             Int?
  ip_address                                   String?
  insufficient_data_health_status              String?
  inverted                                     Boolean?
  measure_latency                              Boolean?
  port                                         Int?
  regions                                      String[]
  request_interval                             Int?
  resource_path                                String?
  search_string                                String?
  health_check_version                         BigInt?
  id                                           String
  cloud_watch_alarm_config_comparison_operator String?
  cloud_watch_alarm_config_evaluation_periods  Int?
  cloud_watch_alarm_config_metric_name         String?
  cloud_watch_alarm_config_namespace           String?
  cloud_watch_alarm_config_period              Int?
  cloud_watch_alarm_config_statistic           String?
  cloud_watch_alarm_config_threshold           Float?
  linked_service_description                   String?
  linked_service_service_principal             String?
  arn                                          String?

  @@id([account_id, id], map: "aws_route53_health_checks_pk")
}

model aws_route53_hosted_zone_query_logging_configs {
  cq_id                          String                    @id(map: "aws_route53_hosted_zone_query_logging_configs_pk") @db.Uuid
  cq_meta                        Json?
  hosted_zone_cq_id              String?                   @db.Uuid
  cloud_watch_logs_log_group_arn String?
  id                             String?
  arn                            String?
  aws_route53_hosted_zones       aws_route53_hosted_zones? @relation(fields: [hosted_zone_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_route53_hosted_zone_query_logging_co_hosted_zone_cq_id_fkey")
}

model aws_route53_hosted_zone_resource_record_sets {
  cq_id                         String                    @id(map: "aws_route53_hosted_zone_resource_record_sets_pk") @db.Uuid
  cq_meta                       Json?
  hosted_zone_cq_id             String?                   @db.Uuid
  resource_records              String[]
  name                          String?
  type                          String?
  dns_name                      String?
  evaluate_target_health        Boolean?
  failover                      String?
  geo_location_continent_code   String?
  geo_location_country_code     String?
  geo_location_subdivision_code String?
  health_check_id               String?
  multi_value_answer            Boolean?
  region                        String?
  set_identifier                String?
  ttl                           BigInt?
  traffic_policy_instance_id    String?
  weight                        BigInt?
  aws_route53_hosted_zones      aws_route53_hosted_zones? @relation(fields: [hosted_zone_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_route53_hosted_zone_resource_record__hosted_zone_cq_id_fkey")
}

model aws_route53_hosted_zone_traffic_policy_instances {
  cq_id                    String                    @id(map: "aws_route53_hosted_zone_traffic_policy_instances_pk") @db.Uuid
  cq_meta                  Json?
  hosted_zone_cq_id        String?                   @db.Uuid
  id                       String?
  message                  String?
  name                     String?
  state                    String?
  ttl                      BigInt?
  traffic_policy_id        String?
  traffic_policy_type      String?
  traffic_policy_version   Int?
  arn                      String?
  aws_route53_hosted_zones aws_route53_hosted_zones? @relation(fields: [hosted_zone_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_route53_hosted_zone_traffic_policy_i_hosted_zone_cq_id_fkey")
}

model aws_route53_hosted_zone_vpc_association_authorizations {
  cq_id                    String                    @id(map: "aws_route53_hosted_zone_vpc_association_authorizations_pk") @db.Uuid
  cq_meta                  Json?
  hosted_zone_cq_id        String?                   @db.Uuid
  vpc_id                   String?
  vpc_region               String?
  vpc_arn                  String?
  aws_route53_hosted_zones aws_route53_hosted_zones? @relation(fields: [hosted_zone_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_route53_hosted_zone_vpc_association__hosted_zone_cq_id_fkey")
}

model aws_route53_hosted_zones {
  cq_id                                                  String                                                   @unique @db.Uuid
  cq_meta                                                Json?
  account_id                                             String
  tags                                                   Json?
  arn                                                    String?
  delegation_set_id                                      String?
  caller_reference                                       String?
  id                                                     String
  name                                                   String?
  config_comment                                         String?
  config_private_zone                                    Boolean?
  linked_service_description                             String?
  linked_service_principal                               String?
  resource_record_set_count                              BigInt?
  aws_route53_hosted_zone_query_logging_configs          aws_route53_hosted_zone_query_logging_configs[]
  aws_route53_hosted_zone_resource_record_sets           aws_route53_hosted_zone_resource_record_sets[]
  aws_route53_hosted_zone_traffic_policy_instances       aws_route53_hosted_zone_traffic_policy_instances[]
  aws_route53_hosted_zone_vpc_association_authorizations aws_route53_hosted_zone_vpc_association_authorizations[]

  @@id([account_id, id], map: "aws_route53_hosted_zones_pk")
}

model aws_route53_reusable_delegation_sets {
  cq_id            String   @unique @db.Uuid
  cq_meta          Json?
  account_id       String
  arn              String?
  name_servers     String[]
  caller_reference String?
  id               String

  @@id([account_id, id], map: "aws_route53_reusable_delegation_sets_pk")
}

model aws_route53_traffic_policies {
  cq_id                               String                                @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String
  id                                  String
  latest_version                      Int?
  name                                String?
  traffic_policy_count                Int?
  type                                String?
  arn                                 String?
  aws_route53_traffic_policy_versions aws_route53_traffic_policy_versions[]

  @@id([account_id, id], map: "aws_route53_traffic_policies_pk")
}

model aws_route53_traffic_policy_versions {
  cq_id                        String                        @id(map: "aws_route53_traffic_policy_versions_pk") @db.Uuid
  cq_meta                      Json?
  traffic_policy_cq_id         String?                       @db.Uuid
  document                     Json?
  id                           String?
  name                         String?
  type                         String?
  version                      Int?
  comment                      String?
  aws_route53_traffic_policies aws_route53_traffic_policies? @relation(fields: [traffic_policy_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_account_config {
  cq_id                   String   @unique @db.Uuid
  cq_meta                 Json?
  account_id              String   @id(map: "aws_s3_account_config_pk")
  config_exists           Boolean?
  block_public_acls       Boolean?
  block_public_policy     Boolean?
  ignore_public_acls      Boolean?
  restrict_public_buckets Boolean?
}

model aws_s3_bucket_cors_rules {
  cq_id           String          @id(map: "aws_s3_bucket_cors_rules_pk") @db.Uuid
  cq_meta         Json?
  bucket_cq_id    String?         @db.Uuid
  allowed_methods String[]
  allowed_origins String[]
  allowed_headers String[]
  expose_headers  String[]
  id              String?
  max_age_seconds Int?
  aws_s3_buckets  aws_s3_buckets? @relation(fields: [bucket_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_bucket_encryption_rules {
  cq_id              String          @id(map: "aws_s3_bucket_encryption_rules_pk") @db.Uuid
  cq_meta            Json?
  bucket_cq_id       String?         @db.Uuid
  sse_algorithm      String?
  kms_master_key_id  String?
  bucket_key_enabled Boolean?
  aws_s3_buckets     aws_s3_buckets? @relation(fields: [bucket_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_bucket_grants {
  cq_id          String          @id(map: "aws_s3_bucket_grants_pk") @db.Uuid
  cq_meta        Json?
  bucket_cq_id   String?         @db.Uuid
  type           String?
  display_name   String?
  email_address  String?
  grantee_id     String?
  uri            String?
  permission     String?
  aws_s3_buckets aws_s3_buckets? @relation(fields: [bucket_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_bucket_lifecycles {
  cq_id                                                   String          @id(map: "aws_s3_bucket_lifecycles_pk") @db.Uuid
  cq_meta                                                 Json?
  bucket_cq_id                                            String?         @db.Uuid
  status                                                  String?
  abort_incomplete_multipart_upload_days_after_initiation Int?
  expiration_date                                         DateTime?       @db.Timestamp(6)
  expiration_days                                         Int?
  expiration_expired_object_delete_marker                 Boolean?
  filter                                                  Json?
  id                                                      String?
  noncurrent_version_expiration_days                      Int?
  noncurrent_version_transitions                          Json?
  prefix                                                  String?
  transitions                                             Json?
  aws_s3_buckets                                          aws_s3_buckets? @relation(fields: [bucket_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_bucket_replication_rules {
  cq_id                                                   String          @id(map: "aws_s3_bucket_replication_rules_pk") @db.Uuid
  cq_meta                                                 Json?
  bucket_cq_id                                            String?         @db.Uuid
  destination_bucket                                      String?
  destination_access_control_translation_owner            String?
  destination_account                                     String?
  destination_encryption_configuration_replica_kms_key_id String?
  destination_metrics_status                              String?
  destination_metrics_event_threshold_minutes             Int?
  destination_replication_time_status                     String?
  destination_replication_time_minutes                    Int?
  destination_storage_class                               String?
  status                                                  String?
  delete_marker_replication_status                        String?
  existing_object_replication_status                      String?
  filter                                                  Json?
  id                                                      String?
  prefix                                                  String?
  priority                                                Int?
  source_replica_modifications_status                     String?
  source_sse_kms_encrypted_objects_status                 String?
  aws_s3_buckets                                          aws_s3_buckets? @relation(fields: [bucket_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_s3_buckets {
  cq_id                           String                            @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String
  region                          String?
  logging_target_prefix           String?
  logging_target_bucket           String?
  versioning_status               String?
  versioning_mfa_delete           String?
  policy                          Json?
  tags                            Json?
  creation_date                   DateTime?                         @db.Timestamp(6)
  name                            String
  block_public_acls               Boolean?
  block_public_policy             Boolean?
  ignore_public_acls              Boolean?
  restrict_public_buckets         Boolean?
  replication_role                String?
  arn                             String?
  ownership_controls              String[]
  aws_s3_bucket_cors_rules        aws_s3_bucket_cors_rules[]
  aws_s3_bucket_encryption_rules  aws_s3_bucket_encryption_rules[]
  aws_s3_bucket_grants            aws_s3_bucket_grants[]
  aws_s3_bucket_lifecycles        aws_s3_bucket_lifecycles[]
  aws_s3_bucket_replication_rules aws_s3_bucket_replication_rules[]

  @@id([account_id, name], map: "aws_s3_buckets_pk")
}

model aws_sagemaker_endpoint_configuration_production_variants {
  cq_id                                 String                                 @id(map: "aws_sagemaker_endpoint_configuration_production_variants_pk") @db.Uuid
  cq_meta                               Json?
  endpoint_configuration_cq_id          String?                                @db.Uuid
  initial_instance_count                Int?
  instance_type                         String?
  model_name                            String?
  variant_name                          String?
  accelerator_type                      String?
  core_dump_config_destination_s3_uri   String?
  core_dump_config_kms_key_id           String?
  initial_variant_weight                Float?
  aws_sagemaker_endpoint_configurations aws_sagemaker_endpoint_configurations? @relation(fields: [endpoint_configuration_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_endpoint_config_endpoint_configuration_cq_id_fkey")
}

model aws_sagemaker_endpoint_configurations {
  cq_id                                                    String                                                     @unique @db.Uuid
  cq_meta                                                  Json?
  account_id                                               String?
  region                                                   String?
  kms_key_id                                               String?
  data_capture_config                                      Json?
  tags                                                     Json?
  creation_time                                            DateTime?                                                  @db.Timestamp(6)
  arn                                                      String                                                     @id(map: "aws_sagemaker_endpoint_configurations_pk")
  name                                                     String?
  aws_sagemaker_endpoint_configuration_production_variants aws_sagemaker_endpoint_configuration_production_variants[]
}

model aws_sagemaker_model_containers {
  cq_id                                                       String                @id(map: "aws_sagemaker_model_containers_pk") @db.Uuid
  cq_meta                                                     Json?
  model_cq_id                                                 String?               @db.Uuid
  container_hostname                                          String?
  environment                                                 Json?
  image                                                       String?
  image_config_repository_access_mode                         String?
  image_config_repository_auth_config_repo_creds_provider_arn String?
  mode                                                        String?
  model_data_url                                              String?
  model_package_name                                          String?
  multi_model_config_model_cache_setting                      String?
  aws_sagemaker_models                                        aws_sagemaker_models? @relation(fields: [model_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_sagemaker_model_vpc_config {
  cq_id                String                @id(map: "aws_sagemaker_model_vpc_config_pk") @db.Uuid
  cq_meta              Json?
  model_cq_id          String?               @db.Uuid
  security_group_ids   String[]
  subnets              String[]
  aws_sagemaker_models aws_sagemaker_models? @relation(fields: [model_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_sagemaker_models {
  cq_id                          String                           @unique @db.Uuid
  cq_meta                        Json?
  account_id                     String?
  region                         String?
  enable_network_isolation       Boolean?
  execution_role_arn             String?
  inference_execution_config     Json?
  primary_container              Json?
  tags                           Json?
  creation_time                  DateTime?                        @db.Timestamp(6)
  arn                            String                           @id(map: "aws_sagemaker_models_pk")
  name                           String?
  aws_sagemaker_model_containers aws_sagemaker_model_containers[]
  aws_sagemaker_model_vpc_config aws_sagemaker_model_vpc_config[]
}

model aws_sagemaker_notebook_instances {
  cq_id                                   String    @unique @db.Uuid
  cq_meta                                 Json?
  account_id                              String?
  region                                  String?
  network_interface_id                    String?
  kms_key_id                              String?
  subnet_id                               String?
  volume_size_in_gb                       Int?
  accelerator_types                       String[]
  security_groups                         Json?
  direct_internet_access                  Boolean?
  tags                                    Json?
  arn                                     String    @id(map: "aws_sagemaker_notebook_instances_pk")
  name                                    String?
  additional_code_repositories            String[]
  creation_time                           DateTime? @db.Timestamp(6)
  default_code_repository                 String?
  instance_type                           String?
  last_modified_time                      DateTime? @db.Timestamp(6)
  notebook_instance_lifecycle_config_name String?
  notebook_instance_status                String?
  url                                     String?
}

model aws_sagemaker_training_job_algorithm_specification {
  cq_id                                 String                       @id(map: "aws_sagemaker_training_job_algorithm_specification_pk") @db.Uuid
  cq_meta                               Json?
  training_job_cq_id                    String?                      @db.Uuid
  training_input_mode                   String?
  algorithm_name                        String?
  enable_sage_maker_metrics_time_series Boolean?
  metric_definitions                    Json?
  training_image                        String?
  aws_sagemaker_training_jobs           aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_algorithm_sp_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_debug_hook_config {
  cq_id                       String                       @id(map: "aws_sagemaker_training_job_debug_hook_config_pk") @db.Uuid
  cq_meta                     Json?
  training_job_cq_id          String?                      @db.Uuid
  s3_output_path              String?
  collection_configurations   Json?
  hook_parameters             Json?
  local_path                  String?
  aws_sagemaker_training_jobs aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_debug_hook_c_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_debug_rule_configurations {
  cq_id                       String                       @id(map: "aws_sagemaker_training_job_debug_rule_configurations_pk") @db.Uuid
  cq_meta                     Json?
  training_job_cq_id          String?                      @db.Uuid
  rule_configuration_name     String?
  rule_evaluator_image        String?
  instance_type               String?
  local_path                  String?
  rule_parameters             Json?
  s3_output_path              String?
  volume_size_in_gb           Int?
  aws_sagemaker_training_jobs aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_debug_rule_c_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_debug_rule_evaluation_statuses {
  cq_id                       String                       @id(map: "aws_sagemaker_training_job_debug_rule_evaluation_statuses_pk") @db.Uuid
  cq_meta                     Json?
  training_job_cq_id          String?                      @db.Uuid
  last_modified_time          DateTime?                    @db.Timestamp(6)
  rule_configuration_name     String?
  rule_evaluation_job_arn     String?
  rule_evaluation_status      String?
  status_details              String?
  aws_sagemaker_training_jobs aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_debug_rule_e_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_input_data_config {
  cq_id                                 String                       @id(map: "aws_sagemaker_training_job_input_data_config_pk") @db.Uuid
  cq_meta                               Json?
  training_job_cq_id                    String?                      @db.Uuid
  channel_name                          String?
  data_source_file_directory_path       String?
  data_source_file_system_access_mode   String?
  data_source_file_system_id            String?
  data_source_file_system_type          String?
  data_source_s3_data_type              String?
  data_source_s3_uri                    String?
  data_source_attribute_names           String[]
  data_source_s3_data_distribution_type String?
  compression_type                      String?
  content_type                          String?
  input_mode                            String?
  record_wrapper_type                   String?
  shuffle_config_seed                   BigInt?
  aws_sagemaker_training_jobs           aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_input_data_c_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_profiler_rule_configurations {
  cq_id                       String                       @id(map: "aws_sagemaker_training_job_profiler_rule_configurations_pk") @db.Uuid
  cq_meta                     Json?
  training_job_cq_id          String?                      @db.Uuid
  rule_configuration_name     String?
  rule_evaluator_image        String?
  instance_type               String?
  local_path                  String?
  rule_parameters             Json?
  s3_output_path              String?
  volume_size_in_gb           Int?
  aws_sagemaker_training_jobs aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_profiler_rul_training_job_cq_id_fkey")
}

model aws_sagemaker_training_job_profiler_rule_evaluation_statuses {
  cq_id                       String                       @id(map: "aws_sagemaker_training_job_profiler_rule_evaluation_statuses_pk") @db.Uuid
  cq_meta                     Json?
  training_job_cq_id          String?                      @db.Uuid
  last_modified_time          DateTime?                    @db.Timestamp(6)
  rule_configuration_name     String?
  rule_evaluation_job_arn     String?
  rule_evaluation_status      String?
  status_details              String?
  aws_sagemaker_training_jobs aws_sagemaker_training_jobs? @relation(fields: [training_job_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_sagemaker_training_job_profiler_ru_training_job_cq_id_fkey1")
}

model aws_sagemaker_training_jobs {
  cq_id                                                        String                                                         @unique @db.Uuid
  cq_meta                                                      Json?
  account_id                                                   String?
  region                                                       String?
  auto_ml_job_arn                                              String?
  billable_time_in_seconds                                     Int?
  enable_managed_spot_training                                 Boolean?
  enable_network_isolation                                     Boolean?
  enable_inter_container_traffic_encryption                    Boolean?
  failure_reason                                               String?
  labeling_job_arn                                             String?
  last_modified_time                                           DateTime?                                                      @db.Timestamp(6)
  profiling_status                                             String?
  role_arn                                                     String?
  secondary_status                                             String?
  training_end_time                                            DateTime?                                                      @db.Timestamp(6)
  training_start_time                                          DateTime?                                                      @db.Timestamp(6)
  training_time_in_seconds                                     Int?
  tuning_job_arn                                               String?
  checkpoint_config                                            Json?
  environment                                                  Json?
  experiment_config                                            Json?
  hyper_parameters                                             Json?
  model_artifacts                                              Json?
  output_data_config                                           Json?
  profiler_config                                              Json?
  resource_config                                              Json?
  stopping_condition                                           Json?
  tensor_board_output_config                                   Json?
  vpc_config                                                   Json?
  tags                                                         Json?
  creation_time                                                DateTime?                                                      @db.Timestamp(6)
  arn                                                          String                                                         @id(map: "aws_sagemaker_training_jobs_pk")
  name                                                         String?
  training_job_status                                          String?
  secondary_status_transitions                                 Json?
  final_metric_data_list                                       Json?
  aws_sagemaker_training_job_algorithm_specification           aws_sagemaker_training_job_algorithm_specification[]
  aws_sagemaker_training_job_debug_hook_config                 aws_sagemaker_training_job_debug_hook_config[]
  aws_sagemaker_training_job_debug_rule_configurations         aws_sagemaker_training_job_debug_rule_configurations[]
  aws_sagemaker_training_job_debug_rule_evaluation_statuses    aws_sagemaker_training_job_debug_rule_evaluation_statuses[]
  aws_sagemaker_training_job_input_data_config                 aws_sagemaker_training_job_input_data_config[]
  aws_sagemaker_training_job_profiler_rule_configurations      aws_sagemaker_training_job_profiler_rule_configurations[]
  aws_sagemaker_training_job_profiler_rule_evaluation_statuses aws_sagemaker_training_job_profiler_rule_evaluation_statuses[]
}

model aws_secretsmanager_secrets {
  cq_id                                   String    @unique @db.Uuid
  cq_meta                                 Json?
  account_id                              String?
  region                                  String?
  policy                                  Json?
  replication_status                      Json?
  arn                                     String    @id(map: "aws_secretsmanager_secrets_pk")
  created_date                            DateTime? @db.Timestamp(6)
  deleted_date                            DateTime? @db.Timestamp(6)
  description                             String?
  kms_key_id                              String?
  last_accessed_date                      DateTime? @db.Timestamp(6)
  last_changed_date                       DateTime? @db.Timestamp(6)
  last_rotated_date                       DateTime? @db.Timestamp(6)
  name                                    String?
  owning_service                          String?
  primary_region                          String?
  rotation_enabled                        Boolean?
  rotation_lambda_arn                     String?
  rotation_rules_automatically_after_days BigInt?
  secret_versions_to_stages               Json?
  tags                                    Json?
}

model aws_shield_attack_properties {
  cq_id                      String              @id(map: "aws_shield_attack_properties_pk") @db.Uuid
  cq_meta                    Json?
  attack_cq_id               String?             @db.Uuid
  attack_layer               String?
  attack_property_identifier String?
  top_contributors           Json?
  total                      BigInt?
  unit                       String?
  aws_shield_attacks         aws_shield_attacks? @relation(fields: [attack_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_shield_attack_sub_resources {
  cq_id              String              @id(map: "aws_shield_attack_sub_resources_pk") @db.Uuid
  cq_meta            Json?
  attack_cq_id       String?             @db.Uuid
  attack_vectors     Json?
  counters           Json?
  id                 String?
  type               String?
  aws_shield_attacks aws_shield_attacks? @relation(fields: [attack_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_shield_attacks {
  cq_id                           String                            @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String?
  attack_counters                 Json?
  id                              String                            @id(map: "aws_shield_attacks_pk")
  end_time                        DateTime?                         @db.Timestamp(6)
  mitigations                     String[]
  resource_arn                    String?
  start_time                      DateTime?                         @db.Timestamp(6)
  aws_shield_attack_properties    aws_shield_attack_properties[]
  aws_shield_attack_sub_resources aws_shield_attack_sub_resources[]
}

model aws_shield_protection_groups {
  cq_id         String   @unique @db.Uuid
  cq_meta       Json?
  account_id    String?
  tags          Json?
  aggregation   String?
  members       String[]
  pattern       String?
  id            String?
  arn           String   @id(map: "aws_shield_protection_groups_pk")
  resource_type String?
}

model aws_shield_protections {
  cq_id                                               String   @unique @db.Uuid
  cq_meta                                             Json?
  account_id                                          String?
  region                                              String?
  tags                                                Json?
  application_automatic_response_configuration_status String?
  health_check_ids                                    String[]
  id                                                  String?
  name                                                String?
  arn                                                 String   @id(map: "aws_shield_protections_pk")
  resource_arn                                        String?
}

model aws_shield_subscriptions {
  cq_id                                                        String    @unique @db.Uuid
  cq_meta                                                      Json?
  account_id                                                   String?
  protection_group_limits_max_protection_groups                Int?
  protection_group_limits_arbitrary_pattern_limits_max_members Int?
  protected_resource_type_limits                               Json?
  auto_renew                                                   String?
  end_time                                                     DateTime? @db.Timestamp(6)
  limits                                                       Json?
  proactive_engagement_status                                  String?
  start_time                                                   DateTime? @db.Timestamp(6)
  arn                                                          String    @id(map: "aws_shield_subscriptions_pk")
  time_commitment_in_seconds                                   Int?
}

model aws_sns_subscriptions {
  cq_id      String  @unique @db.Uuid
  cq_meta    Json?
  account_id String?
  region     String?
  endpoint   String
  owner      String
  protocol   String
  arn        String
  topic_arn  String

  @@id([endpoint, owner, protocol, arn, topic_arn], map: "aws_sns_subscriptions_pk")
}

model aws_sns_topics {
  cq_id                       String   @unique @db.Uuid
  cq_meta                     Json?
  account_id                  String?
  region                      String?
  owner                       String?
  policy                      Json?
  delivery_policy             Json?
  display_name                String?
  subscriptions_confirmed     BigInt?
  subscriptions_deleted       BigInt?
  subscriptions_pending       BigInt?
  effective_delivery_policy   Json?
  fifo_topic                  Boolean?
  content_based_deduplication Boolean?
  kms_master_key_id           String?
  arn                         String   @id(map: "aws_sns_topics_pk")
  tags                        Json?
}

model aws_sqs_queues {
  cq_id                                      String    @unique @db.Uuid
  cq_meta                                    Json?
  account_id                                 String?
  region                                     String?
  url                                        String?
  policy                                     Json?
  visibility_timeout                         Int?
  maximum_message_size                       Int?
  message_retention_period                   Int?
  approximate_number_of_messages             Int?
  approximate_number_of_messages_not_visible Int?
  created_timestamp                          DateTime? @db.Timestamp(6)
  last_modified_timestamp                    DateTime? @db.Timestamp(6)
  arn                                        String    @id(map: "aws_sqs_queues_pk")
  approximate_number_of_messages_delayed     Int?
  delay_seconds                              Int?
  receive_message_wait_time_seconds          Int?
  redrive_policy                             Json?
  fifo_queue                                 Boolean?
  content_based_deduplication                Boolean?
  kms_master_key_id                          String?
  kms_data_key_reuse_period_seconds          Int?
  deduplication_scope                        String?
  fifo_throughput_limit                      String?
  redrive_allow_policy                       Json?
  tags                                       Json?
  unknown_fields                             Json?
}

model aws_ssm_documents {
  cq_id                     String    @unique @db.Uuid
  cq_meta                   Json?
  account_id                String?
  region                    String?
  arn                       String    @id(map: "aws_ssm_documents_pk")
  approved_version          String?
  attachments_information   Json?
  author                    String?
  created_date              DateTime? @db.Timestamp(6)
  default_version           String?
  description               String?
  display_name              String?
  document_format           String?
  document_type             String?
  document_version          String?
  hash                      String?
  hash_type                 String?
  latest_version            String?
  name                      String?
  owner                     String?
  parameters                Json?
  pending_review_version    String?
  platform_types            String[]
  requires                  Json?
  review_status             String?
  schema_version            String?
  sha1                      String?
  status                    String?
  status_information        String?
  target_type               String?
  version_name              String?
  review_information        Json?
  tags                      Json?
  account_ids               String[]
  account_sharing_info_list Json?
}

model aws_ssm_instance_compliance_items {
  cq_id                            String             @id(map: "aws_ssm_instance_compliance_items_pk") @db.Uuid
  cq_meta                          Json?
  instance_cq_id                   String?            @db.Uuid
  compliance_type                  String?
  details                          Json?
  execution_summary_execution_time DateTime?          @db.Timestamp(6)
  execution_summary_execution_id   String?
  execution_summary_execution_type String?
  id                               String?
  resource_id                      String?
  resource_type                    String?
  severity                         String?
  status                           String?
  title                            String?
  aws_ssm_instances                aws_ssm_instances? @relation(fields: [instance_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_ssm_instances {
  cq_id                                        String                              @unique @db.Uuid
  cq_meta                                      Json?
  account_id                                   String?
  region                                       String?
  arn                                          String                              @id(map: "aws_ssm_instances_pk")
  activation_id                                String?
  agent_version                                String?
  association_overview_detailed_status         String?
  association_instance_status_aggregated_count Json?
  association_status                           String?
  computer_name                                String?
  ip_address                                   String?                             @db.Inet
  iam_role                                     String?
  instance_id                                  String?
  is_latest_version                            Boolean?
  last_association_execution_date              DateTime?                           @db.Timestamp(6)
  last_ping_date_time                          DateTime?                           @db.Timestamp(6)
  last_successful_association_execution_date   DateTime?                           @db.Timestamp(6)
  name                                         String?
  ping_status                                  String?
  platform_name                                String?
  platform_type                                String?
  platform_version                             String?
  registration_date                            DateTime?                           @db.Timestamp(6)
  resource_type                                String?
  aws_ssm_instance_compliance_items            aws_ssm_instance_compliance_items[]
}

model aws_waf_rule_groups {
  cq_id       String   @unique @db.Uuid
  cq_meta     Json?
  account_id  String
  arn         String?
  rule_ids    String[]
  tags        Json?
  id          String
  metric_name String?
  name        String?

  @@id([account_id, id], map: "aws_waf_rule_groups_pk")
}

model aws_waf_rule_predicates {
  cq_id         String         @id(map: "aws_waf_rule_predicates_pk") @db.Uuid
  cq_meta       Json?
  rule_cq_id    String?        @db.Uuid
  data_id       String?
  negated       Boolean?
  type          String?
  aws_waf_rules aws_waf_rules? @relation(fields: [rule_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_waf_rules {
  cq_id                   String                    @unique @db.Uuid
  cq_meta                 Json?
  account_id              String
  arn                     String?
  tags                    Json?
  id                      String
  metric_name             String?
  name                    String?
  aws_waf_rule_predicates aws_waf_rule_predicates[]

  @@id([account_id, id], map: "aws_waf_rules_pk")
}

model aws_waf_subscribed_rule_groups {
  cq_id         String  @unique @db.Uuid
  cq_meta       Json?
  account_id    String
  metric_name   String?
  name          String?
  rule_group_id String

  @@id([account_id, rule_group_id], map: "aws_waf_subscribed_rule_groups_pk")
}

model aws_waf_web_acl_logging_configuration {
  cq_id                   String            @id(map: "aws_waf_web_acl_logging_configuration_pk") @db.Uuid
  cq_meta                 Json?
  web_acl_cq_id           String?           @db.Uuid
  log_destination_configs String[]
  resource_arn            String?
  redacted_fields         Json?
  aws_waf_web_acls        aws_waf_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_waf_web_acl_rules {
  cq_id                String            @id(map: "aws_waf_web_acl_rules_pk") @db.Uuid
  cq_meta              Json?
  web_acl_cq_id        String?           @db.Uuid
  priority             Int?
  rule_id              String?
  action_type          String?
  excluded_rules       String[]
  override_action_type String?
  type                 String?
  aws_waf_web_acls     aws_waf_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_waf_web_acls {
  cq_id                                 String                                  @unique @db.Uuid
  cq_meta                               Json?
  account_id                            String
  tags                                  Json?
  default_action_type                   String?
  id                                    String
  metric_name                           String?
  name                                  String?
  arn                                   String?
  logging_configuration                 String[]
  aws_waf_web_acl_logging_configuration aws_waf_web_acl_logging_configuration[]
  aws_waf_web_acl_rules                 aws_waf_web_acl_rules[]

  @@id([account_id, id], map: "aws_waf_web_acls_pk")
}

model aws_wafregional_rate_based_rule_match_predicates {
  cq_id                            String                            @id(map: "aws_wafregional_rate_based_rule_match_predicates_pk") @db.Uuid
  cq_meta                          Json?
  rate_based_rule_cq_id            String?                           @db.Uuid
  data_id                          String?
  negated                          Boolean?
  type                             String?
  aws_wafregional_rate_based_rules aws_wafregional_rate_based_rules? @relation(fields: [rate_based_rule_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_wafregional_rate_based_rule_matc_rate_based_rule_cq_id_fkey")
}

model aws_wafregional_rate_based_rules {
  cq_id                                            String                                             @unique @db.Uuid
  cq_meta                                          Json?
  account_id                                       String
  region                                           String
  arn                                              String?
  tags                                             Json?
  rate_key                                         String?
  rate_limit                                       BigInt?
  id                                               String
  metric_name                                      String?
  name                                             String?
  aws_wafregional_rate_based_rule_match_predicates aws_wafregional_rate_based_rule_match_predicates[]

  @@id([account_id, region, id], map: "aws_wafregional_rate_based_rules_pk")
}

model aws_wafregional_rule_groups {
  cq_id       String  @unique @db.Uuid
  cq_meta     Json?
  account_id  String
  region      String
  arn         String?
  tags        Json?
  id          String
  metric_name String?
  name        String?

  @@id([account_id, region, id], map: "aws_wafregional_rule_groups_pk")
}

model aws_wafregional_rule_predicates {
  cq_id                 String                 @id(map: "aws_wafregional_rule_predicates_pk") @db.Uuid
  cq_meta               Json?
  rule_cq_id            String?                @db.Uuid
  data_id               String?
  negated               Boolean?
  type                  String?
  aws_wafregional_rules aws_wafregional_rules? @relation(fields: [rule_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_wafregional_rules {
  cq_id                           String                            @unique @db.Uuid
  cq_meta                         Json?
  account_id                      String
  region                          String
  arn                             String?
  tags                            Json?
  id                              String
  metric_name                     String?
  name                            String?
  aws_wafregional_rule_predicates aws_wafregional_rule_predicates[]

  @@id([account_id, region, id], map: "aws_wafregional_rules_pk")
}

model aws_wafregional_web_acl_rules {
  cq_id                    String                    @id(map: "aws_wafregional_web_acl_rules_pk") @db.Uuid
  cq_meta                  Json?
  web_acl_cq_id            String?                   @db.Uuid
  priority                 Int?
  rule_id                  String?
  action                   String?
  excluded_rules           String[]
  override_action          String?
  type                     String?
  aws_wafregional_web_acls aws_wafregional_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_wafregional_web_acls {
  cq_id                         String                          @unique @db.Uuid
  cq_meta                       Json?
  account_id                    String
  region                        String
  tags                          Json?
  default_action                String?
  id                            String
  metric_name                   String?
  name                          String?
  arn                           String?
  aws_wafregional_web_acl_rules aws_wafregional_web_acl_rules[]

  @@id([account_id, region, id], map: "aws_wafregional_web_acls_pk")
}

model aws_wafv2_ipsets {
  cq_id              String                 @unique @db.Uuid
  cq_meta            Json?
  account_id         String?
  region             String?
  scope              String?
  arn                String                 @id(map: "aws_wafv2_ipsets_pk")
  addresses          Unsupported("_cidr")[]
  ip_address_version String?
  id                 String?
  name               String?
  description        String?
  tags               Json?
}

model aws_wafv2_managed_rule_groups {
  cq_id            String   @unique @db.Uuid
  cq_meta          Json?
  account_id       String
  region           String
  scope            String
  available_labels String[]
  consumed_labels  String[]
  capacity         BigInt?
  label_namespace  String?
  rules            Json?
  description      String?
  name             String
  vendor_name      String

  @@id([account_id, region, scope, vendor_name, name], map: "aws_wafv2_managed_rule_groups_pk")
}

model aws_wafv2_regex_pattern_sets {
  cq_id                   String   @unique @db.Uuid
  cq_meta                 Json?
  account_id              String?
  region                  String?
  scope                   String?
  arn                     String   @id(map: "aws_wafv2_regex_pattern_sets_pk")
  description             String?
  id                      String?
  name                    String?
  regular_expression_list String[]
  tags                    Json?
}

model aws_wafv2_rule_groups {
  cq_id                                         String   @unique @db.Uuid
  cq_meta                                       Json?
  account_id                                    String
  region                                        String?
  scope                                         String?
  tags                                          Json?
  policy                                        Json?
  arn                                           String?
  capacity                                      BigInt?
  id                                            String
  name                                          String?
  visibility_config_cloud_watch_metrics_enabled Boolean?
  visibility_config_metric_name                 String?
  visibility_config_sampled_requests_enabled    Boolean?
  custom_response_bodies                        Json?
  description                                   String?
  label_namespace                               String?
  rules                                         Json?
  available_labels                              String[]
  consumed_labels                               String[]

  @@id([account_id, id], map: "aws_wafv2_rule_groups_pk")
}

model aws_wafv2_web_acl_logging_configuration {
  cq_id                       String              @id(map: "aws_wafv2_web_acl_logging_configuration_pk") @db.Uuid
  cq_meta                     Json?
  web_acl_cq_id               String?             @db.Uuid
  log_destination_configs     String[]
  resource_arn                String?
  logging_filter              Json?
  managed_by_firewall_manager Boolean?
  redacted_fields             Json?
  aws_wafv2_web_acls          aws_wafv2_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_wafv2_web_acl_post_process_firewall_manager_rule_groups {
  cq_id                                         String              @id(map: "aws_wafv2_web_acl_post_process_firewall_manager_rule_groups_pk") @db.Uuid
  cq_meta                                       Json?
  web_acl_cq_id                                 String?             @db.Uuid
  statement                                     Json?
  name                                          String?
  override_action                               Json?
  priority                                      Int?
  visibility_config_cloud_watch_metrics_enabled Boolean?
  visibility_config_metric_name                 String?
  visibility_config_sampled_requests_enabled    Boolean?
  aws_wafv2_web_acls                            aws_wafv2_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_wafv2_web_acl_post_process_firewall_mana_web_acl_cq_id_fkey")
}

model aws_wafv2_web_acl_pre_process_firewall_manager_rule_groups {
  cq_id                                         String              @id(map: "aws_wafv2_web_acl_pre_process_firewall_manager_rule_groups_pk") @db.Uuid
  cq_meta                                       Json?
  web_acl_cq_id                                 String?             @db.Uuid
  statement                                     Json?
  name                                          String?
  override_action                               Json?
  priority                                      Int?
  visibility_config_cloud_watch_metrics_enabled Boolean?
  visibility_config_metric_name                 String?
  visibility_config_sampled_requests_enabled    Boolean?
  aws_wafv2_web_acls                            aws_wafv2_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction, map: "aws_wafv2_web_acl_pre_process_firewall_manag_web_acl_cq_id_fkey")
}

model aws_wafv2_web_acl_rules {
  cq_id                                         String              @id(map: "aws_wafv2_web_acl_rules_pk") @db.Uuid
  cq_meta                                       Json?
  web_acl_cq_id                                 String?             @db.Uuid
  name                                          String?
  priority                                      Int?
  statement                                     Json?
  visibility_config_cloud_watch_metrics_enabled Boolean?
  visibility_config_metric_name                 String?
  visibility_config_sampled_requests_enabled    Boolean?
  action                                        Json?
  override_action                               Json?
  labels                                        String[]
  aws_wafv2_web_acls                            aws_wafv2_web_acls? @relation(fields: [web_acl_cq_id], references: [cq_id], onDelete: Cascade, onUpdate: NoAction)
}

model aws_wafv2_web_acls {
  cq_id                                                       String                                                        @unique @db.Uuid
  cq_meta                                                     Json?
  account_id                                                  String
  region                                                      String?
  scope                                                       String?
  resources_for_web_acl                                       String[]
  tags                                                        Json?
  arn                                                         String?
  default_action                                              Json?
  id                                                          String
  name                                                        String?
  visibility_config_cloud_watch_metrics_enabled               Boolean?
  visibility_config_metric_name                               String?
  visibility_config_sampled_requests_enabled                  Boolean?
  capacity                                                    BigInt?
  custom_response_bodies                                      Json?
  description                                                 String?
  label_namespace                                             String?
  managed_by_firewall_manager                                 Boolean?
  logging_configuration                                       String[]
  aws_wafv2_web_acl_logging_configuration                     aws_wafv2_web_acl_logging_configuration[]
  aws_wafv2_web_acl_post_process_firewall_manager_rule_groups aws_wafv2_web_acl_post_process_firewall_manager_rule_groups[]
  aws_wafv2_web_acl_pre_process_firewall_manager_rule_groups  aws_wafv2_web_acl_pre_process_firewall_manager_rule_groups[]
  aws_wafv2_web_acl_rules                                     aws_wafv2_web_acl_rules[]

  @@id([account_id, id], map: "aws_wafv2_web_acls_pk")
}

model aws_workspaces_directories {
  cq_id                               String   @unique @db.Uuid
  cq_meta                             Json?
  account_id                          String?
  region                              String?
  arn                                 String?
  alias                               String?
  customer_user_name                  String?
  id                                  String   @id(map: "aws_workspaces_directories_pk")
  name                                String?
  type                                String?
  dns_ip_addresses                    String[]
  iam_role_id                         String?
  ip_group_ids                        String[]
  registration_code                   String?
  change_compute_type                 String?
  increase_volume_size                String?
  rebuild_workspace                   String?
  restart_workspace                   String?
  switch_running_mode                 String?
  state                               String?
  subnet_ids                          String[]
  tenancy                             String?
  device_type_android                 String?
  device_type_chrome_os               String?
  device_type_ios                     String?
  device_type_linux                   String?
  device_type_osx                     String?
  device_type_web                     String?
  device_type_windows                 String?
  device_type_zero_client             String?
  custom_security_group_id            String?
  default_ou                          String?
  enable_internet_access              Boolean?
  enable_maintenance_mode             Boolean?
  enable_work_docs                    Boolean?
  user_enabled_as_local_administrator Boolean?
  workspace_security_group_id         String?
}

model aws_workspaces_workspaces {
  cq_id                                     String   @unique @db.Uuid
  cq_meta                                   Json?
  account_id                                String?
  region                                    String?
  arn                                       String?
  bundle_id                                 String?
  computer_name                             String?
  directory_id                              String?
  error_code                                String?
  error_message                             String?
  ip_address                                String?
  modification_states                       Json?
  root_volume_encryption_enabled            Boolean?
  state                                     String?
  subnet_id                                 String?
  user_name                                 String?
  user_volume_encryption_enabled            Boolean?
  volume_encryption_key                     String?
  id                                        String   @id(map: "aws_workspaces_workspaces_pk")
  compute_type_name                         String?
  root_volume_size_gib                      Int?
  running_mode                              String?
  running_mode_auto_stop_timeout_in_minutes Int?
  user_volume_size_gib                      Int?
}

model aws_xray_encryption_config {
  cq_id      String  @unique @db.Uuid
  cq_meta    Json?
  account_id String
  region     String
  key_id     String?
  status     String?
  type       String?

  @@id([account_id, region], map: "aws_xray_encryption_config_pk")
}

model aws_xray_groups {
  cq_id                 String   @unique @db.Uuid
  cq_meta               Json?
  account_id            String?
  region                String?
  tags                  Json?
  filter_expression     String?
  arn                   String   @id(map: "aws_xray_groups_pk")
  group_name            String?
  insights_enabled      Boolean?
  notifications_enabled Boolean?
}

model aws_xray_sampling_rules {
  cq_id          String    @unique @db.Uuid
  cq_meta        Json?
  account_id     String?
  region         String?
  tags           Json?
  created_at     DateTime? @db.Timestamp(6)
  modified_at    DateTime? @db.Timestamp(6)
  fixed_rate     Float?
  http_method    String?
  host           String?
  priority       Int?
  reservoir_size Int?
  resource_arn   String?
  service_name   String?
  service_type   String?
  url_path       String?
  version        Int?
  attributes     Json?
  arn            String    @id(map: "aws_xray_sampling_rules_pk")
  rule_name      String?
}

model aws_resources {
  // must have the aws_resource_view.sql ran
  cq_id          String    @unique
  cq_meta        Json?
  cq_table       String?
  account_id     String?
  region         String?
  arn            String?
  tags           Json?
  fetch_date     DateTime? @db.Timestamp(6)
}